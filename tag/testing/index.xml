<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>testing | Kanekotic</title><link>https://www.kanekotic.com/tag/testing/</link><atom:link href="https://www.kanekotic.com/tag/testing/index.xml" rel="self" type="application/rss+xml"/><description>testing</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><copyright>kanekotic © 2021</copyright><lastBuildDate>Tue, 27 Mar 2018 00:00:00 +0000</lastBuildDate><image><url>https://www.kanekotic.com/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url><title>testing</title><link>https://www.kanekotic.com/tag/testing/</link></image><item><title>Flow Runtime Faker</title><link>https://www.kanekotic.com/project/flow-runtime-faker/</link><pubDate>Tue, 27 Mar 2018 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/flow-runtime-faker/</guid><description>&lt;h1 id="logohttpsuser-imagesgithubusercontentcom307120848891796-a7796780-ee3c-11e8-93a0-69b06f1a1198png">&lt;img src="https://user-images.githubusercontent.com/3071208/48891796-a7796780-ee3c-11e8-93a0-69b06f1a1198.png" alt="logo">&lt;/h1>
&lt;p>
&lt;a href="https://travis-ci.org/kanekotic/flow-runtime-faker" target="_blank" rel="noopener">&lt;img src="https://travis-ci.org/kanekotic/flow-runtime-faker.svg?branch=master" alt="Build Status">&lt;/a>
&lt;a href="https://coveralls.io/github/kanekotic/flow-runtime-faker?branch=master" target="_blank" rel="noopener">&lt;img src="https://coveralls.io/repos/github/kanekotic/flow-runtime-faker/badge.svg?branch=master" alt="Coverage Status">&lt;/a>
&lt;a href="https://github.com/kanekotic/flow-runtime-faker" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/npm/dt/flow-runtime-faker.svg" alt="npm">&lt;/a>
&lt;a href="https://github.com/kanekotic/flow-runtime-faker/blob/master/LICENSE" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/github/license/kanekotic/flow-runtime-faker.svg" alt="GitHub license">&lt;/a>
&lt;a href="https://GitHub.com/kanekotic/flow-runtime-faker/graphs/commit-activity" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/badge/Maintained%3F-yes-green.svg" alt="Maintenance">&lt;/a>
&lt;a href="https://www.paypal.me/kanekotic/" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/badge/Donate-PayPal-green.svg" alt="Donate">&lt;/a>&lt;/p>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>Type definitions in javascript can help adding type safety for classes. But should not make more complicated property based testing. This package aims to generate random objects based on their flow definitions&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>&lt;code>yarn add flow-runtime-faker -D&lt;/code> or &lt;code>npm install flow-runtime-faker --save-dev&lt;/code>&lt;/p>
&lt;p>if you use only &lt;code>flow&lt;/code> and not &lt;code>flow-runtime&lt;/code>. You can use this plugin by:&lt;/p>
&lt;ul>
&lt;li>&lt;code>yarn add flow-runtime babel-plugin-flow-runtime -D&lt;/code> or &lt;code>npm install flow-runtime babel-plugin-flow-runtime --save-dev&lt;/code>&lt;/li>
&lt;li>add the next configuration for tests phase on your &lt;code>.babelrc&lt;/code>&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-json"> {
...
&amp;quot;env&amp;quot;: {
&amp;quot;test&amp;quot;: {
&amp;quot;plugins&amp;quot;: [[&amp;quot;flow-runtime&amp;quot;, { &amp;quot;assert&amp;quot;: false, &amp;quot;annotate&amp;quot;: false }]]
}
}
}
&lt;/code>&lt;/pre>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;pre>&lt;code class="language-js">import faker from 'flow-runtime-faker'
type otherType {
fuz: 42 | 7 | 32 | &amp;quot;Some&amp;quot; | &amp;quot;Some Other&amp;quot; | false
}
type myType = {
foo: number,
bar: number[],
daz: string,
don: otherType
}
let value = fake(test)
console.log(value)
/*
type myType = {
foo: 10,
bar: [1,6.40],
daz: &amp;quot;something&amp;quot;,
don: {
fuz: 42
}
}
*/
&lt;/code>&lt;/pre>
&lt;h2 id="support">Support&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Done?&lt;/th>
&lt;th>Flow Type&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>✅&lt;/td>
&lt;td>number&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>✅&lt;/td>
&lt;td>string&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>✅&lt;/td>
&lt;td>boolean&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>✅&lt;/td>
&lt;td>null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>✅&lt;/td>
&lt;td>void&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>✅&lt;/td>
&lt;td>numeric literals&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>✅&lt;/td>
&lt;td>string literals&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>✅&lt;/td>
&lt;td>boolean literals&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>✅&lt;/td>
&lt;td>union&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>✅&lt;/td>
&lt;td>maybe&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>✅&lt;/td>
&lt;td>optional&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>✅&lt;/td>
&lt;td>arrays&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>✅&lt;/td>
&lt;td>subtypes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>✅&lt;/td>
&lt;td>function&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Array Peek</title><link>https://www.kanekotic.com/project/array-peek/</link><pubDate>Sat, 27 Jan 2018 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/array-peek/</guid><description>&lt;h1 id="logomakr_5sissshttpsuser-imagesgithubusercontentcom307120846520471-66bd9300-c87c-11e8-855c-e38b28094435png">&lt;img src="https://user-images.githubusercontent.com/3071208/46520471-66bd9300-c87c-11e8-855c-e38b28094435.png" alt="logomakr_5sisss">&lt;/h1>
&lt;p>
&lt;a href="https://travis-ci.org/kanekotic/array-peek" target="_blank" rel="noopener">&lt;img src="https://travis-ci.org/kanekotic/array-peek.svg?branch=master" alt="Build Status">&lt;/a>
&lt;a href="https://coveralls.io/github/kanekotic/array-peek?branch=master" target="_blank" rel="noopener">&lt;img src="https://coveralls.io/repos/github/kanekotic/array-peek/badge.svg?branch=master" alt="Coverage Status">&lt;/a>
&lt;a href="https://github.com/kanekotic/array-peek" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/npm/dy/array-peek.svg" alt="npm">&lt;/a>
&lt;a href="https://github.com/kanekotic/array-peek/blob/master/LICENSE" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/github/license/kanekotic/array-peek.svg" alt="GitHub license">&lt;/a>
&lt;a href="https://GitHub.com/kanekotic/array-peek/graphs/commit-activity" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/badge/Maintained%3F-yes-green.svg" alt="Maintenance">&lt;/a>
&lt;a href="https://www.paypal.me/kanekotic/" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/badge/Donate-PayPal-green.svg" alt="Donate">&lt;/a>&lt;/p>
&lt;p>extend array functionality to allow peek method.&lt;/p>
&lt;h2 id="peek-vs-foreach">peek vs forEach&lt;/h2>
&lt;p>&lt;code>peek&lt;/code> as &lt;code>forEach&lt;/code> allows you to execute a callback on each of the elements of an array, not affecting the content of itself.&lt;/p>
&lt;p>The difference is that &lt;code>forEach&lt;/code> returns void so no further processing can be done, while &lt;code>peek&lt;/code> will return the array so you can continue the transformations necesary for your processing&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>add it to your project using &lt;code>npm install array-peek --save&lt;/code> or &lt;code>yarn add array-peek&lt;/code>&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>to use this package just add it before the usage of any array to extend its prototype. From then on you will have access to the peek function as seen in the next example.&lt;/p>
&lt;pre>&lt;code>require('array-peek')
[1,2,3]
.peek(console.log)
.map((value) =&amp;gt; value * value)
.peek(console.log)
// Output:
//&amp;gt; 1
//&amp;gt; 2
//&amp;gt; 3
//&amp;gt; 1
//&amp;gt; 4
//&amp;gt; 9
&lt;/code>&lt;/pre>
&lt;h5 id="created-my-free-logohttpslogomakrcom5sisss-at-logomakrcomlogomakrcom">Created my free
&lt;a href="https://logomakr.com/5sISSS" target="_blank" rel="noopener">logo&lt;/a> at
&lt;a href="LogoMakr.com">LogoMakr.com&lt;/a>&lt;/h5></description></item></channel></rss>