<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>generic | Kanekotic</title><link>https://www.kanekotic.com/tag/generic/</link><atom:link href="https://www.kanekotic.com/tag/generic/index.xml" rel="self" type="application/rss+xml"/><description>generic</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><copyright>kanekotic Â© 2021</copyright><lastBuildDate>Fri, 27 Apr 2018 00:00:00 +0000</lastBuildDate><image><url>https://www.kanekotic.com/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url><title>generic</title><link>https://www.kanekotic.com/tag/generic/</link></image><item><title>Web Threads</title><link>https://www.kanekotic.com/project/web-threds/</link><pubDate>Fri, 27 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/web-threds/</guid><description>&lt;h1 id="logomakr_09u4zzhttpsuser-imagesgithubusercontentcom307120844622482-88a91a80-a8b9-11e8-976c-fdd422ac5c98png">&lt;img src="https://user-images.githubusercontent.com/3071208/44622482-88a91a80-a8b9-11e8-976c-fdd422ac5c98.png" alt="logomakr_09u4zz">&lt;/h1>
&lt;p>
&lt;a href="https://travis-ci.org/kanekotic/web-threads" target="_blank" rel="noopener">&lt;img src="https://travis-ci.org/kanekotic/web-threads.svg?branch=master" alt="Build Status">&lt;/a>
&lt;a href="https://coveralls.io/github/kanekotic/web-threads?branch=master" target="_blank" rel="noopener">&lt;img src="https://coveralls.io/repos/github/kanekotic/web-threads/badge.svg?branch=master" alt="Coverage Status">&lt;/a>
&lt;a href="https://github.com/kanekotic/web-threads" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/npm/dt/web-threads.svg" alt="npm">&lt;/a>
&lt;a href="https://github.com/kanekotic/web-threads/blob/master/LICENSE" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/github/license/kanekotic/web-threads.svg" alt="GitHub license">&lt;/a>
&lt;a href="https://GitHub.com/kanekotic/web-threads/graphs/commit-activity" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/badge/Maintained%3F-yes-green.svg" alt="Maintenance">&lt;/a>
&lt;a href="https://www.paypal.me/kanekotic/" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/badge/Donate-PayPal-blue.svg" alt="Donate">&lt;/a>&lt;/p>
&lt;p>generic threads using web workers for the web&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>add it to your project using &lt;code>npm install web-threads --save&lt;/code> or &lt;code>yarn add web-threads&lt;/code>&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;h3 id="simple-function-with-arguments">Simple function with arguments&lt;/h3>
&lt;pre>&lt;code class="language-js">import { execute } from 'web-threads'
let func = (value) =&amp;gt; {
return value * value
}
let params = {
fn: func.toString(),
args: [2]
}
execute(params)
.then(console.log)
.catch(console.error)
&lt;/code>&lt;/pre>
&lt;h3 id="function-with-context">Function with context&lt;/h3>
&lt;pre>&lt;code class="language-js">import { execute } from 'web-threads'
function Func(value){
this.value = value
}
Func.prototype.foo = function(){
return this.value * this.value
};
var instance = new Func(2)
let params = {
fn: instance.foo,
context: instance
}
execute(params)
.then(console.log)
.catch(console.error)
&lt;/code>&lt;/pre>
&lt;h3 id="function-with-context-and-arguments">Function with context and arguments&lt;/h3>
&lt;pre>&lt;code class="language-js">import { execute } from 'web-threads'
function Func(value){
this.value = value
}
Func.prototype.foo = function(otherValue){
return this.value * otherValue
};
var instance = new Func(2)
let params = {
fn: instance.foo,
context: instance,
args: [4]
}
execute(params)
.then(console.log)
.catch(console.error)
&lt;/code>&lt;/pre>
&lt;h3 id="es6-class-call-function-with-arguments">ES6 class call function with arguments&lt;/h3>
&lt;pre>&lt;code class="language-js">import { execute } from 'web-threads'
class someClass {
constructor(val){
this.val = val
}
foo(some){
return this.val * some
}
}
var instance = new someClass(2)
let params = {
fn: instance.foo,
context: instance,
args: [4]
}
execute(params)
.then(console.log)
.catch(console.error)
&lt;/code>&lt;/pre>
&lt;h4 id="inspired-in">Inspired in:&lt;/h4>
&lt;ul>
&lt;li>
&lt;a href="https://github.com/CodeInBrackets/ui.wind.js" target="_blank" rel="noopener">work done pairing with @kmruiz for ui.wind.js&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://blog.scottlogic.com/2011/02/24/web-workers-part-3-creating-a-generic-worker.html" target="_blank" rel="noopener">scottlogic.com post&lt;/a>&lt;/li>
&lt;li>
&lt;a href="http://www.eslinstructor.net/vkthread/" target="_blank" rel="noopener">@vkiryukhin&lt;/a>&lt;/li>
&lt;/ul>
&lt;h5 id="web-graphic-by-a-hrefhttpwwwflaticoncomauthorspicolpicola-from-a-hrefhttpwwwflaticoncomflaticona-is-licensed-under-a-hrefhttpcreativecommonsorglicensesby30-titlecreative-commons-by-30cc-by-30a-check-out-the-new-logo-that-i-created-on-a-hrefhttplogomakrcom-titlelogo-makrlogomakrcoma-httpslogomakrcom09u4zz">Web graphic by &lt;a href="http://www.flaticon.com/authors/picol">picol&lt;/a> from &lt;a href="http://www.flaticon.com/">Flaticon&lt;/a> is licensed under &lt;a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0">CC BY 3.0&lt;/a>. Check out the new logo that I created on &lt;a href="http://logomakr.com" title="Logo Makr">LogoMakr.com&lt;/a>
&lt;a href="https://logomakr.com/09u4Zz" target="_blank" rel="noopener">https://logomakr.com/09u4Zz&lt;/a>&lt;/h5></description></item></channel></rss>