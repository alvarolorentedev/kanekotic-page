[{"authors":["admin"],"categories":null,"content":"Who? Code for living, fun and the lulz. I spend the day thinking what things can make my life easier, automating things allowing me to enjoy a moment of Laziness. Then is just hours of implementation to be able to share them with the community, because there is no value if the only one that can enjoy something is me.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://www.kanekotic.com/author/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/","section":"authors","summary":"Who? Code for living, fun and the lulz. I spend the day thinking what things can make my life easier, automating things allowing me to enjoy a moment of Laziness. Then is just hours of implementation to be able to share them with the community, because there is no value if the only one that can enjoy something is me.","tags":null,"title":"","type":"authors"},{"authors":null,"categories":null,"content":"Flexibility This feature can be used for publishing content such as:\n Online courses Project or software documentation Tutorials  The courses folder may be renamed. For example, we can rename it to docs for software/project documentation or tutorials for creating an online course.\nDelete tutorials To remove these pages, delete the courses folder and see below to delete the associated menu link.\nUpdate site menu After renaming or deleting the courses folder, you may wish to update any [[main]] menu links to it by editing your menu configuration at config/_default/menus.toml.\nFor example, if you delete this folder, you can remove the following from your menu configuration:\n[[main]] name = \u0026quot;Courses\u0026quot; url = \u0026quot;courses/\u0026quot; weight = 50  Or, if you are creating a software documentation site, you can rename the courses folder to docs and update the associated Courses menu configuration to:\n[[main]] name = \u0026quot;Docs\u0026quot; url = \u0026quot;docs/\u0026quot; weight = 50  Update the docs menu If you use the docs layout, note that the name of the menu in the front matter should be in the form [menu.X] where X is the folder name. Hence, if you rename the courses/example/ folder, you should also rename the menu definitions in the front matter of files within courses/example/ from [menu.example] to [menu.\u0026lt;NewFolderName\u0026gt;].\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"https://www.kanekotic.com/courses/example/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/example/","section":"courses","summary":"Learn how to use Academic's docs layout for publishing online courses, software documentation, and tutorials.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"74533bae41439377bd30f645c4677a27","permalink":"https://www.kanekotic.com/courses/example/example1/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example1/","section":"courses","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":null,"title":"Example Page 1","type":"docs"},{"authors":null,"categories":null,"content":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 4 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"1c2b5a11257c768c90d5050637d77d6a","permalink":"https://www.kanekotic.com/courses/example/example2/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/example/example2/","section":"courses","summary":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":null,"title":"Example Page 2","type":"docs"},{"authors":null,"categories":null,"content":"It has been a long time since I have shared any content. So want to start actually doing this on a daily bases.\n","date":1636463692,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1636463692,"objectID":"add9855d02cca5c0b6e56056b8352eaf","permalink":"https://www.kanekotic.com/post/i-am-back/","publishdate":"2021-11-09T13:14:52.645Z","relpermalink":"/post/i-am-back/","section":"post","summary":"just a news about me being back","tags":null,"title":"I am Back","type":"post"},{"authors":null,"categories":null,"content":" \n Tarant is a TypeScript/JavaScript library for building software using the actor system model. You can visit the home page for more information and a more complete quick start guide: https://www.tarant.io/\n Actors are easy to reason about: An actor is the unit of state and logic of your application. They are transactional, so you don\u0026rsquo;t need to handle state rollbacks in case of errors. Actors improve performance: Asynchronous by default, every actor actual communication is non-blocking so slow actors will not block fast actors. Actors are extensible: As actors are built on top of objects, actor classes can be inherited, composed and injected.  Features Tarant implements a rich set of features that makes it suitable for building complex applications.\n Actors are reliable because they are transactional. You don\u0026rsquo;t need to bother yourself with error recovery. Actors are performant, as they are pull-based and decoupled from other actors lifecycle. Actors are easy to debug. All messages come with information about the sender and all the state information is saved in a time machine, for further debugging and navigation. The Actor System has an event bus. Actors can subscribe, publish and request messages from any topic and subscriptions can be handled at any time. The Actor System is highly extensive. You can add your own supervisor and materializers to add new features like implicit persistence or rendering of actors.  Showcase   Actors support asynchronous messaging and answering through Promises. Slow actors will not block fast actors.  Actors can schedule tasks for interval or one-shot delayed actions.  Actors are safe and can be recovered with a supervisor.  Actors can subscribe in a topic in a type-safe way for extensible communication.  Quick start Creating your first actor system is easy and you don\u0026rsquo;t need to understand everything that is happening under the hood. First you must install the package:\nnpm install tarant --save\nThen create your first ActorSystem\nlet { Actor, ActorSystem } = require('tarant') let system = ActorSystem.default()  And create your actor class:\nclass Ping extends Actor { ping() { console.log(\u0026quot;PING\u0026quot;) } }  Then you only need to instantiate your actor and send messages to it:\nlet myPinger = system.actorOf(Ping, []) myPinger.ping()  The application will continue running and processing messages until you stop the actor system:\nsystem.free()  If you run the application you will see the following output:\nPING  Contribution  PR and issues are always welcome as a quick way of contributing to the project. Remember to be polite, this is a open source project and ordinary requirements for PRs and issues are also a requirement.\nIf you want to be a long-term contributor and participate actively on the design of new features on the project, contact us! Check the package.json to see who you need to contact.\nCreated my free logo at LogoMakr.com ","date":1580256e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1580256e3,"objectID":"d35747a2c50d264aa8e78090817ecd35","permalink":"https://www.kanekotic.com/project/tarant/","publishdate":"2020-01-29T00:00:00Z","relpermalink":"/project/tarant/","section":"project","summary":"Tarant is a TypeScript/JavaScript library for building software using the actor system model. You can visit the home page for more information and a more complete quick start guide: https://www.","tags":["javascript","typescript","actor model"],"title":"Tarant","type":"project"},{"authors":null,"categories":null,"content":" You can download the latest image from DockerHub!\nfeaggle-server is a dynamic server that allows setting up feature toggles for the feaggle library.\nDevelopment How to Run feaggle-server locally You will need to install docker and docker-compose in your machine.\nStart a postgresql instance in your local machine, the easiest way is using the provided docker-compose.yml that is in the root of the project:\ndocker-compose up postgres\nIt will take several minutes if there is no cached image of postgresql, after that, just run the main function with your favourite IDE.\n","date":1577577600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577577600,"objectID":"cfddd65818febf4778f3fcd4d34d7df7","permalink":"https://www.kanekotic.com/project/feaggle/","publishdate":"2019-12-29T00:00:00Z","relpermalink":"/project/feaggle/","section":"project","summary":"You can download the latest image from DockerHub!\nfeaggle-server is a dynamic server that allows setting up feature toggles for the feaggle library.\nDevelopment How to Run feaggle-server locally You will need to install docker and docker-compose in your machine.","tags":["toggles"],"title":"Feaggle","type":"project"},{"authors":null,"categories":null,"content":"Create extensible electron applications through a plugin architecture that uses NPM (or similar registry) or GitHub as repository for the extensions.\nInstallation add it to your electron project using npm install electron-plugin --save or yarn add electron-plugin\nUsage require electron-plugin exports a function that requires a javascript object and an electron window, as seen on the next example:\nconst pluginManager = require(`electron-plugin`) let config = { installPath: `${__dirname}/test_folder`, plugins : { \u0026quot;electron-plugin-example\u0026quot;: \u0026quot;0.0.2\u0026quot; } }, extensionPoint = { app: 'anything you want to use as exstention point' } pluginManager.load(config, extensionPoint)  Created my free logo at LogoMakr.com ","date":1561766400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1561766400,"objectID":"1c462fa0327c5d9d01b93b3ac47532e2","permalink":"https://www.kanekotic.com/project/electron-plugin/","publishdate":"2019-06-29T00:00:00Z","relpermalink":"/project/electron-plugin/","section":"project","summary":"Create extensible electron applications through a plugin architecture that uses NPM (or similar registry) or GitHub as repository for the extensions.\nInstallation add it to your electron project using npm install electron-plugin --save or yarn add electron-plugin","tags":["plugin","electron"],"title":"Electron Plugin","type":"project"},{"authors":null,"categories":[],"content":"As a member of the community that like to generate npm packages like libraries and cli tools, sometimes is difficult to maintain everything and keep your package up to date in the dependencies side. I am a fan of having static dependencies as versioning is not being held correctly in most of the npm world. So if you dont use exact packages you could run in the issue that a broken change makes from the night to the morning your awesome tool to break.\nThis practice could bring a headache to keep dependencies up to date because is a manual process. And manual process tend to be time consuming (at this point in time I have ~17 npm packages) meaning that if i want to simply do normal maintenance i will have to run everything for all those in maybe weekly or monthly bases.\nSo is a bit of a no situation for maintainers, but if you dont maintain your package people will not use it, because there is a concern about how active the project is, even if there are no open issues. For solving both of this things what i have decided is to ad to my CI/CD pipeline a script that runs only on cron jobs from travis ci.\nos: osx language: node_js node_js: - node script: - yarn test:cov after_success: - if [[ \u0026quot;${TRAVIS_EVENT_TYPE}\u0026quot; = \u0026quot;cron\u0026quot; ]]; then ./upgrade.sh; fi deploy: skip_cleanup: true provider: npm email: $NPM_EMAIL api_key: $NPM_TOKEN on: tags: true  as you can see that is the normal .travis.yml for deploying into npm (you will have to define NPM_EMAIL and NPM_TOKEN as enviroment variables in your build configuration), the main diference is the step after success that if its the cron job going will run the next script.\n#!/bin/sh set -e git config --global user.email $GH_EMAIL git config --global user.name $GH_USER git remote add origin-master https://${GH_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git \u0026gt; /dev/null 2\u0026gt;\u0026amp;1 git fetch origin-master git checkout -b master-local origin-master/master yarn upgrade --latest git add . git commit --allow-empty -m \u0026quot;updated dependencies [skip ci]\u0026quot; yarn test yarn version --patch git push --quiet origin-master master-local:master git push --quiet origin-master master-local:master --tags  this script attaches the current state to a branch makes, upgrades the dependencies and if everything works fine generates a new commit and deploy a patch of the packages (you will have to define GH_EMAIL, GH_USER and GH_TOKEN as environment variables in your build configuration).\n","date":1531294048,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1531294048,"objectID":"9c878c6f5fde4fa4b8f28dd679421f5a","permalink":"https://www.kanekotic.com/post/2018-07-11-travis-ci-update-npm-package-dependencies-and-release/","publishdate":"2018-07-11T09:27:28+02:00","relpermalink":"/post/2018-07-11-travis-ci-update-npm-package-dependencies-and-release/","section":"post","summary":"As a member of the community that like to generate npm packages like libraries and cli tools, sometimes is difficult to maintain everything and keep your package up to date in the dependencies side.","tags":["ci","cd","versioning","npm","travis","travisci","github","cron"],"title":"Update your npm package dependencies and release with Travis","type":"post"},{"authors":null,"categories":[],"content":"I have just finished migrating my static blog from Hexo to Hugo and one of the main things I care about is to be able to do continuous deployment of my profile and blog. There are quite a few blog posts out there but they are based on using shell scripts and it really becomes a pain to give permissions etc. In the next few lines you will see the simplest way I have found to do this (and is currently as this blog post is being published).\nYou will need to have:\n A Github account. A Travis CI account. A Github repository with source code of your web page with Hugo (*1) A Github repository with the name \u0026lt;your User or Organization\u0026gt;.github.com (ex. kanekotic.github.com) (*2). A developer token from GitHub with commit capabilities (can create in github Settings -\u0026gt; Developer Settings -\u0026gt; Personal Access Token -\u0026gt; Generate New Token )  I wont cover how to create a Hugo web page as this is best explained in the quick start) of Hugo.\nAfter you are happy with the content of your blog in the repository of source code (*1), and want to start deploying you will need to add a .travis.yml with the next content\nsudo: true dist: trusty install: - sudo apt-get --yes install snapd - sudo snap install hugo script: - /snap/bin/hugo deploy: provider: pages local-dir: public repo: \u0026lt;User or Organization\u0026gt;/\u0026lt;User or Organization\u0026gt;.github.com target-branch: master skip-cleanup: true github-token: $GITHUB_TOKEN committer-from-gh: true keep-history: true on: branch: master  you will have to change the repo content to match your destination repository (*2). The previous code what does is installs hugo in the deployment machine, builds your web page and deploys using the pages plugin. If you have a custom domain make sure to set the property fqdn to your domain, if not you will overwrite this field in each commit.\nAfter adding the file you will have to go to Travis web page and toggle your code repository (*1) got to More Options -\u0026gt; Settings -\u0026gt; Environment Variables and add GITHUB_TOKEN as the token retrieved from github.\nAfter this in any commit in the master branch of your web page you will get it deployed and go live.\n","date":1530686142,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1530686142,"objectID":"a1a84e8711d35f58808ac3af785a27ba","permalink":"https://www.kanekotic.com/post/2018-07-04-deploy-hugo-with-travis/","publishdate":"2018-07-04T08:35:42+02:00","relpermalink":"/post/2018-07-04-deploy-hugo-with-travis/","section":"post","summary":"I have just finished migrating my static blog from Hexo to Hugo and one of the main things I care about is to be able to do continuous deployment of my profile and blog.","tags":["ci","cd","versioning","Travis","travisci","github"],"title":"Create your User/Organization GitHub Page with Hugo + Travis","type":"post"},{"authors":null,"categories":null,"content":"       \ngeneric threads using web workers for the web\nInstallation add it to your project using npm install web-threads --save or yarn add web-threads\nUsage Simple function with arguments import { execute } from 'web-threads' let func = (value) =\u0026gt; { return value * value } let params = { fn: func.toString(), args: [2] } execute(params) .then(console.log) .catch(console.error)  Function with context import { execute } from 'web-threads' function Func(value){ this.value = value } Func.prototype.foo = function(){ return this.value * this.value }; var instance = new Func(2) let params = { fn: instance.foo, context: instance } execute(params) .then(console.log) .catch(console.error)  Function with context and arguments import { execute } from 'web-threads' function Func(value){ this.value = value } Func.prototype.foo = function(otherValue){ return this.value * otherValue }; var instance = new Func(2) let params = { fn: instance.foo, context: instance, args: [4] } execute(params) .then(console.log) .catch(console.error)  ES6 class call function with arguments import { execute } from 'web-threads' class someClass { constructor(val){ this.val = val } foo(some){ return this.val * some } } var instance = new someClass(2) let params = { fn: instance.foo, context: instance, args: [4] } execute(params) .then(console.log) .catch(console.error)  Inspired in:   work done pairing with @kmruiz for ui.wind.js  scottlogic.com post  @vkiryukhin  Web graphic by picol from Flaticon is licensed under CC BY 3.0. Check out the new logo that I created on LogoMakr.com https://logomakr.com/09u4Zz ","date":1524787200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1524787200,"objectID":"1582d48785630533e80ef00083501322","permalink":"https://www.kanekotic.com/project/web-threds/","publishdate":"2018-04-27T00:00:00Z","relpermalink":"/project/web-threds/","section":"project","summary":"generic threads using web workers for the web\nInstallation add it to your project using npm install web-threads --save or yarn add web-threads","tags":["web worker","webworker","threads","multithreading","parallel","promise","generic"],"title":"Web Threads","type":"project"},{"authors":null,"categories":null,"content":"       \nMotivation Type definitions in javascript can help adding type safety for classes. But should not make more complicated property based testing. This package aims to generate random objects based on their flow definitions\nInstallation yarn add flow-runtime-faker -D or npm install flow-runtime-faker --save-dev\nif you use only flow and not flow-runtime. You can use this plugin by:\n yarn add flow-runtime babel-plugin-flow-runtime -D or npm install flow-runtime babel-plugin-flow-runtime --save-dev add the next configuration for tests phase on your .babelrc  { ... \u0026quot;env\u0026quot;: { \u0026quot;test\u0026quot;: { \u0026quot;plugins\u0026quot;: [[\u0026quot;flow-runtime\u0026quot;, { \u0026quot;assert\u0026quot;: false, \u0026quot;annotate\u0026quot;: false }]] } } }  Usage import faker from 'flow-runtime-faker' type otherType { fuz: 42 | 7 | 32 | \u0026quot;Some\u0026quot; | \u0026quot;Some Other\u0026quot; | false } type myType = { foo: number, bar: number[], daz: string, don: otherType } let value = fake(test) console.log(value) /* type myType = { foo: 10, bar: [1,6.40], daz: \u0026quot;something\u0026quot;, don: { fuz: 42 } } */  Support    Done? Flow Type     ✅ number   ✅ string   ✅ boolean   ✅ null   ✅ void   ✅ numeric literals   ✅ string literals   ✅ boolean literals   ✅ union   ✅ maybe   ✅ optional   ✅ arrays   ✅ subtypes   ✅ function    ","date":1522108800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1522108800,"objectID":"7b368d822d80dcb2760ac40e3b907c9c","permalink":"https://www.kanekotic.com/project/flow-runtime-faker/","publishdate":"2018-03-27T00:00:00Z","relpermalink":"/project/flow-runtime-faker/","section":"project","summary":"Motivation Type definitions in javascript can help adding type safety for classes. But should not make more complicated property based testing. This package aims to generate random objects based on their flow definitions","tags":["faker","flow","flow-runtime","property","testing"],"title":"Flow Runtime Faker","type":"project"},{"authors":null,"categories":null,"content":"       \nMotivation Provide an async promise based unofficial sdk for the tello drone based on the official documentation.\nInstallation add it to your project using npm install tellojs --save or yarn add tellojs\nUsage this sdk provide functions when you import for the next capabilities:\nconst sdk = require('tellojs') const x = number, y = number, z = number, speed = number, start = {x, y, z}, end = {x, y, z} //CONTROL COMMANDS await sdk.control.connect() // Enter SDK mode. await sdk.control.takeoff() // Auto takeoff. await sdk.control.land() // Auto landing. await sdk.control.emergency() // Stop motors immediately await sdk.control.stop() // Hovers in the air await sdk.control.move.up(x) // Ascend to “x” cm. await sdk.control.move.down(x) // Descend to “x” cm. await sdk.control.move.left(x) // move left to “x” cm. await sdk.control.move.right(x) // move right to “x” cm. await sdk.control.move.front(x) // move forward to “x” cm. await sdk.control.move.back(x) // move backwards to “x” cm. await sdk.control.move.go(end, speed ) // fly to x y z in speed (cm/s) await sdk.control.move.curve(start, end, speed) // fly to x y z in speed (cm/s) await sdk.control.rotate.clockwise(x) // rotate clockwise 'x' degrees. await sdk.control.rotate.counterClockwise(x) // rotate counter clockwise 'x' degrees. await sdk.control.flip.left() // Flip to the left. await sdk.control.flip.right() // Flip to the right. await sdk.control.flip.back() // Flip in backward. await sdk.control.flip.front() // Flip in forward. //SET COMMANDS await sdk.set.speed(x) // set speed to x cm/s await sdk.set.rc(x, y, z, yaw) // Send RC control via four channels. await sdk.set.wifi(ssid, password) // Set Wi-Fi with SSID password //READ COMMANDS await sdk.read.speed() // Obtain current speed (cm/s). await sdk.read.battery() // Obtain current battery percentage. await sdk.read.time() // Obtain current flight time. await sdk.read.height() // Obtain get height (cm) await sdk.read.temperature() // Obtain temperature (°C) await sdk.read.attitude() // Obtain IMU attitude data await sdk.read.barometer() // Obtain barometer value (m) await sdk.read.tof() // Obtain distance value from TOF（cm） await sdk.read.acceleration() // Obtain IMU angular acceleration data (0.001g) await sdk.read.wifi() // Obtain Wi-Fi SNR.  Web graphic by picol from Flaticon is licensed under CC BY 3.0. Check out the new logo that I created on LogoMakr.com https://logomakr.com/09u4Zz ","date":1519689600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1519689600,"objectID":"5b671c77599410b564e652eed178ed1c","permalink":"https://www.kanekotic.com/project/tellojs/","publishdate":"2018-02-27T00:00:00Z","relpermalink":"/project/tellojs/","section":"project","summary":"Motivation Provide an async promise based unofficial sdk for the tello drone based on the official documentation.\nInstallation add it to your project using npm install tellojs --save or yarn add tellojs","tags":["tello","dji","drone","iot"],"title":"tellojs","type":"project"},{"authors":null,"categories":null,"content":"       \nextend array functionality to allow peek method.\npeek vs forEach peek as forEach allows you to execute a callback on each of the elements of an array, not affecting the content of itself.\nThe difference is that forEach returns void so no further processing can be done, while peek will return the array so you can continue the transformations necesary for your processing\nInstallation add it to your project using npm install array-peek --save or yarn add array-peek\nUsage to use this package just add it before the usage of any array to extend its prototype. From then on you will have access to the peek function as seen in the next example.\nrequire('array-peek') [1,2,3] .peek(console.log) .map((value) =\u0026gt; value * value) .peek(console.log) // Output: //\u0026gt; 1 //\u0026gt; 2 //\u0026gt; 3 //\u0026gt; 1 //\u0026gt; 4 //\u0026gt; 9  Created my free logo at LogoMakr.com ","date":1517011200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1517011200,"objectID":"6ba2f746a26c9580ed9fea6a0b80dfb7","permalink":"https://www.kanekotic.com/project/array-peek/","publishdate":"2018-01-27T00:00:00Z","relpermalink":"/project/array-peek/","section":"project","summary":"extend array functionality to allow peek method.\npeek vs forEach peek as forEach allows you to execute a callback on each of the elements of an array, not affecting the content of itself.","tags":["faker","flow","flow-runtime","property","testing"],"title":"Array Peek","type":"project"},{"authors":null,"categories":null,"content":" Motivation This package was created to add a general way to handle exception for express application with the expectation to make it simpler to handle all possible requests.\nInstallation add it to your project with npm install express-exception-handler or yarn add express-exception-handler\nUse there are 2 diferent ways to integrate the main functionality of this package, either by adding the handle that gets injected to the router framework\nvar exceptionHandler = require('express-exception-handler') exceptionHandler.handle() const app = require('express')()  or by wraping manually the routes\nvar wrap = require('express-exception-handler').wrap router.post('/', wrap(async (req, res) =\u0026gt; { ... }))  it also integrates an extended class from Error that contains a message and a status that can be used to pass diferent information to the error handle\nvar httpError = require('express-exception-handler').exception router.post('/', async (req, res) =\u0026gt; { throw new HttpError('Great Message', 400, \u0026quot;{Response: awesome}\u0026quot;) }))  last but not least it also contains a middleware that can be added directly to express that handles the previous named errors.\nvar middleware = require('express-exception-handler').middleware const app = require('express')() app.use(middleware)  Logo Arrows graphic by madebyoliver from Flaticon is licensed under CC BY 3.0. Check out the new logo that I created on LogoMaker.com https://logomakr.com/6nL7006nL700\n","date":1501372800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1501372800,"objectID":"52e901c23811c09eb96d57388395fb30","permalink":"https://www.kanekotic.com/project/express-exception-handler/","publishdate":"2017-07-30T00:00:00Z","relpermalink":"/project/express-exception-handler/","section":"project","summary":"Motivation This package was created to add a general way to handle exception for express application with the expectation to make it simpler to handle all possible requests.\nInstallation add it to your project with npm install express-exception-handler or yarn add express-exception-handler","tags":["express","expressjs","exception-handling","exception-handler","exceptions","express-middleware"],"title":"Express Exception Handler","type":"project"},{"authors":null,"categories":null,"content":"   \nThis project will provide a command line and a library to export google analytics to your prefered endpoint (console, log management, or db).\nUse as Command Line install globally with npm install gatoo -g. Aftyer this it can be run with the next command:\ngatoo console \u0026lt;email\u0026gt; \u0026lt;ReplativePath\u0026gt; \u0026lt;viewId\u0026gt; \u0026lt;startDate\u0026gt; \u0026lt;endDate\u0026gt; \u0026lt;metrics\u0026gt; \u0026lt;dimensions\u0026gt;  Use as library first step is to add this to your project throught yarn add gatoo or npm install gatoo\ncurrently you can retrieve in a simple way data from google analytics and route it to your prefered output. An example of retrieval is the next one.\nImport const importer = require('../lib/index').importer path = require('path') const email = 'your email' //email account from the user credentials keyPath = path.join(__dirname, 'your credentials')// path to credentials json or pem config = { viewId: \u0026quot;some viewId\u0026quot;,//the view id to query daterange:{ \u0026quot;endDate\u0026quot;:\u0026quot;2017-06-30\u0026quot;, \u0026quot;startDate\u0026quot;:\u0026quot;2016-06-30\u0026quot; }, metrics: \u0026quot;ga:users\u0026quot;, dimensions: \u0026quot;ga:date\u0026quot; } const example = async () =\u0026gt; { const result = await importer(email, keyPath, config) console.log(JSON.stringify(result.data)) } example()  Export const exporter = require('../lib/index').exporter path = require('path') const email = 'your email' //email account from the user credentials keyPath = path.join(__dirname, 'your credentials')// path to credentials json or pem config = { viewId: \u0026quot;some viewId\u0026quot;,//the view id to query daterange:{ \u0026quot;endDate\u0026quot;:\u0026quot;2017-06-30\u0026quot;, \u0026quot;startDate\u0026quot;:\u0026quot;2016-06-30\u0026quot; }, metrics: \u0026quot;ga:users\u0026quot;, dimensions: \u0026quot;ga:date\u0026quot; } const doSomething () =\u0026gt; {} const example = async () =\u0026gt; { const result = await exporter(email, keyPath, config, doSomething) } example()  Export to console const exporter = require('../lib/index').outputTo path = require('path') const email = 'your email' //email account from the user credentials keyPath = path.join(__dirname, 'your credentials')// path to credentials json or pem config = { viewId: \u0026quot;some viewId\u0026quot;,//the view id to query daterange:{ \u0026quot;endDate\u0026quot;:\u0026quot;2017-06-30\u0026quot;, \u0026quot;startDate\u0026quot;:\u0026quot;2016-06-30\u0026quot; }, metrics: \u0026quot;ga:users\u0026quot;, dimensions: \u0026quot;ga:date\u0026quot; } const example = async () =\u0026gt; { const result = await outputTo.console(email, keyPath, config) } example()  TODO  Retrieve data from google analytics Create library Create adapter for output console Create command line tool console Create adapter logstash Create adapter fluentd Create adapter ES Create command line tool logstash Create command line tool fluentd Create command line tool ES  Logo Check out the new logo that I created on LogoMakr.com https://logomakr.com/32f2Md\n","date":1501286400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1501286400,"objectID":"ed405b44d653d4be750342d03e4c7c45","permalink":"https://www.kanekotic.com/project/gatoo/","publishdate":"2017-07-29T00:00:00Z","relpermalink":"/project/gatoo/","section":"project","summary":"This project will provide a command line and a library to export google analytics to your prefered endpoint (console, log management, or db).\nUse as Command Line install globally with npm install gatoo -g.","tags":["google","google-analytics","export","command line","analytics"],"title":"Gatoo","type":"project"},{"authors":null,"categories":null,"content":" This show how multiple containers can aggregate log to logging infrastructure with docker compose using logstash, elastic search and kibana\nRun you will need docker installed in your computer, after it :\n Run  docker-compose up  run to get some logs from httpd  repeat 10 curl http://localhost:80/   Kibana:\n this might take a bit Navigate to http://localhost:5601 Add logstash-* as index with @timestamp as Time-field name Go to Discover    Grafana:\n Navigate to http://localhost:3000 username and password are admin Navigate and create dashboards    Architecture the target architecture would be to allow gathering information from applications but also sync with hadoop to enable having a data lake to improve analytics, and pull directly from google analytics to logstash.\n(current architecture is missing google analytics and hadoop as seen in TODO list)\nBacklog  Add kibana container Add Grafana container visualization Add elasticsearch container Add logstash container and configuration Add aplication containers Add dashboard as code for grafana Add import fron google analytics through logstash and http_poller Add hadoop infrastructure for data analytics extension  References \u0026amp; further readings   docker logging article  gist eunomie  http poller  hadoop elastic search  hadoop vs elastic search  Logo Check out the new logo that I created on LogoMakr.com https://logomakr.com/5axvTc\n","date":15012e5,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":15012e5,"objectID":"f40f55a680fdbff8cc5d097f9e47e0ef","permalink":"https://www.kanekotic.com/project/elk-docker/","publishdate":"2017-07-28T00:00:00Z","relpermalink":"/project/elk-docker/","section":"project","summary":"This show how multiple containers can aggregate log to logging infrastructure with docker compose using logstash, elastic search and kibana\nRun you will need docker installed in your computer, after it :","tags":["elk-stack","elasticsearch","grafana","kibana","logstash","infrastructure"],"title":"ELK Docker","type":"project"},{"authors":null,"categories":null,"content":" This plugin has been done to be able to have certain level of compatibility in between Jenkins, Travis-CI and other YML based build services.\nUse Install by navigating and selecting Manage Jenkins -\u0026gt; Manage Plugins -\u0026gt; Travis YML Plugin\nAdd to your workspace on the root folder a .travis.yml, this plugin accept the next phases of lifecycle:\n before_install install before_script script after_success after_failure before_deploy deploy after_deploy after_script  If you have any failure on your build and want to review the final generated, you should declare the environment variable DEBUG_TRAVIS_YML either on your build node or in jenkins.\nDevelopment If you want to help on the development of this plugin you will need Jruby and the next prerequisites:\ngem install bundler  For development and to see this plugin in a test Jenkins server:\n$ bundle install $ jpi server  after that open a pull request to add your changes.\nIf you have any further request open an issue on the main repository or contact the sustainers:\n @kanekotic @masaki  Logo People graphic by Freepik from Flaticon is licensed under CC BY 3.0. Made with Logo Maker\n","date":1498780801,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1498780801,"objectID":"e41cb69549c0d5b3ec0a4c5f913d427d","permalink":"https://www.kanekotic.com/project/travis-yml-plugin/","publishdate":"2017-06-30T00:00:01Z","relpermalink":"/project/travis-yml-plugin/","section":"project","summary":"This plugin has been done to be able to have certain level of compatibility in between Jenkins, Travis-CI and other YML based build services.\nUse Install by navigating and selecting Manage Jenkins -\u0026gt; Manage Plugins -\u0026gt; Travis YML Plugin","tags":["jenkins","plugin","travis","yml"],"title":"Travis YML Plugin","type":"project"},{"authors":null,"categories":null,"content":" Search and play youtube videos inside atom. Follow your favorite tutorials inside the development environment in a floating window\nUse  \u0026lsquo;playyoutube-atom:search\u0026rsquo; (\u0026lsquo;ctrl-shift-y\u0026rsquo;): Display the search window:  input some search terms and hit enter. Navigate the results:  Using the mouse. Using up and down key.   Play video:  Click. Using side key.     \u0026lsquo;playyoutube-atom:hide\u0026rsquo; (\u0026lsquo;ctrl-shift-h\u0026rsquo;): Hides the player \u0026lsquo;playyoutube-atom:show\u0026rsquo; (\u0026lsquo;ctrl-shift-j\u0026rsquo;): Shows the player \u0026lsquo;playyoutube-atom:close\u0026rsquo; (\u0026lsquo;ctrl-shift-c\u0026rsquo;): Clear current search and video content  Authors and Contributors @kanekotic\nSupport or Contact Having trouble with \u0026lsquo;playyoutube\u0026rsquo;? Any idea of how to improve it? Review our documentation or add issue/recomendation and we will sort it out.\n###Todo:\n make video frame draggable  Logo Check out the new logo that I created on LogoMakr.com https://logomakr.com/0IWkNv\n","date":1498698060,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1498698060,"objectID":"f33fab521a46cc3642efe0eb2a3f8e52","permalink":"https://www.kanekotic.com/project/playoutube-atom/","publishdate":"2017-06-29T01:01:00Z","relpermalink":"/project/playoutube-atom/","section":"project","summary":"Search and play youtube videos inside atom. Follow your favorite tutorials inside the development environment in a floating window\nUse  \u0026lsquo;playyoutube-atom:search\u0026rsquo; (\u0026lsquo;ctrl-shift-y\u0026rsquo;): Display the search window:  input some search terms and hit enter.","tags":["atom","plugin","video","youtube"],"title":"PlayYoutube Atom","type":"project"},{"authors":null,"categories":null,"content":"  \nPlugin for Visual studio that allows you to search and play youtube videos inside your development enviroment.\nfollow tutorials or listen what you want, without the pain of having to toggle between multiple windows.\nUse put your query on the search combo box and hit enter. You will be provided with a list of results, the selected results will be displayed and be streamed\nAuthors and Contributors @kanekotic\nSupport or Contact Having trouble with \u0026lsquo;PlayYouTube\u0026rsquo;? Any idea of how to improve it? Review our documentation or add issue/recomendation and we’ll sort it out.\n###Build State CI: \nRelease: \n","date":1498698010,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1498698010,"objectID":"424ac2c4099b7b3c46b6ad1c9d2c561e","permalink":"https://www.kanekotic.com/project/playoutube-vs/","publishdate":"2017-06-29T01:00:10Z","relpermalink":"/project/playoutube-vs/","section":"project","summary":"Plugin for Visual studio that allows you to search and play youtube videos inside your development enviroment.\nfollow tutorials or listen what you want, without the pain of having to toggle between multiple windows.","tags":["Visual Studio","plugin","video","youtube"],"title":"PlayYoutube Visual Studio","type":"project"},{"authors":null,"categories":null,"content":"  \nThis plugin for visual studio has been created to be able to find the errors generated during compilation time on your favourite web browser.\nUse Select one or more errors in your Error List Window. Right click and hit \u0026lsquo;Search Error On\u0026rsquo;.\nConfigure Under \u0026lsquo;Tools -\u0026gt; Options-\u0026gt; Search Error On\u0026rsquo; you will be able to select one of your favourite search engines. Authors and Contributors @kanekotic\nSupport or Contact Having trouble with \u0026lsquo;Search Error On\u0026hellip;\u0026rsquo;? Any idea of how to improve it? Review our documentation or add issue/recomendation and we’ll sort it out.\n###Build State CI: \nRelease: \n","date":1498698010,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1498698010,"objectID":"f06988b8cd26984baeb7da818234034b","permalink":"https://www.kanekotic.com/project/search-error-on/","publishdate":"2017-06-29T01:00:10Z","relpermalink":"/project/search-error-on/","section":"project","summary":"This plugin for visual studio has been created to be able to find the errors generated during compilation time on your favourite web browser.\nUse Select one or more errors in your Error List Window.","tags":["Visual Studio","plugin","error","compilation","search"],"title":"Search Error On","type":"project"},{"authors":null,"categories":null,"content":"     \nUse Case command line and library to convert guids from oracle raw format to formated guid and viceversa\nInstallation if you want ot use in a package yarn add raw-guid-converter or npm i raw-guid-converter\nif you want to use it as a command install globally with npm i raw-guid-converter -g\nUsage Raw to Guid String Code const convert = require('raw-guid-converter').convertRaw let guid = convert('4630880E6D0B3640AB446C6FB3C44FE3') //guid =\u0026gt; 0e883046-0b6d-4036-ab44-6c6fb3c44fe3  Command line convert-guid fromRaw 4630880E6D0B3640AB446C6FB3C44FE3 #0e883046-0b6d-4036-ab44-6c6fb3c44fe3  you can pass multiple guids to convert all of them in one go\nGuid string to Raw Code const convert = require('raw-guid-converter').convertString let guid = convert('0e883046-0b6d-4036-ab44-6c6fb3c44fe3') //guid =\u0026gt; '4630880E6D0B3640AB446C6FB3C44FE3'  Command line convert-guid fromString 0e883046-0b6d-4036-ab44-6c6fb3c44fe3 #'4630880E6D0B3640AB446C6FB3C44FE3'  you can pass multiple guids to convert all of them in one go\nLogo  Check out the new logo that I created on LogoMakr.com https://logomakr.com/5c2oEE\n","date":1498698e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1498698e3,"objectID":"1857fc7c114d5ab4e8bdefcd389a9e80","permalink":"https://www.kanekotic.com/project/raw-guid-converter/","publishdate":"2017-06-29T01:00:00Z","relpermalink":"/project/raw-guid-converter/","section":"project","summary":"Use Case command line and library to convert guids from oracle raw format to formated guid and viceversa\nInstallation if you want ot use in a package yarn add raw-guid-converter or npm i raw-guid-converter","tags":["guid","converter","oracle","raw"],"title":"Raw Guid Converter","type":"project"},{"authors":null,"categories":null,"content":" Mission Easy generation or integration of prebuilt packages. It helps fetchs prebuilt binaries from github releases.\nGenerate a prebuilt package  Create new project  npm init  Add this package as dependency  npm install any-prebuilt --save  Create postinstall.js file with content:  require('any-prebuilt').install(require('./package.json').prebuilt)  Create index.js file with content:  var anyPrebuilt = require('any-prebuilt') anyPrebuilt.initialize(__dirname, require('./package.json').prebuilt) module.exports.path = anyPrebuilt.path  On the package.json add a prebuilt element (you can also add this to any other file that provides a jason object to both index and postinstall.js).   \u0026quot;prebuilt\u0026quot;: { \u0026quot;arch\u0026quot;: \u0026lt;string\u0026gt;, // Target architecture (supported: `ia32` / `x64`. Default value: machine's architecture) \u0026quot;platform\u0026quot;: \u0026lt;string\u0026gt;, //Target platform (supported: `win` / `osx` / `linux`. Default value: machine's platform) \u0026quot;version\u0026quot;: \u0026lt;string\u0026gt;, //Target version (format: `vX.Y.Z`. Default value: latest) \u0026quot;targetDir\u0026quot;: \u0026lt;string\u0026gt;, //Target directory (where to install the binaries. Default value: `./bin`) \u0026quot;targetBin\u0026quot;: \u0026lt;string\u0026gt;, //Target binary (the precompiled binary to be required in node. No default value) \u0026quot;version\u0026quot;: \u0026lt;string\u0026gt;, //Target version (format: `vX.Y.Z`. Default value: latest) \u0026quot;user\u0026quot;: \u0026lt;string\u0026gt;, // user or Organization (format: string. Is `required`) \u0026quot;repo\u0026quot;: \u0026lt;string\u0026gt;, //Origin repo (format: string. Is `required`) \u0026quot;token\u0026quot;: \u0026lt;string\u0026gt; //Github token (format: string. `required` if private repo) }  In your package .json add the next script:  \u0026quot;scripts\u0026quot;: { \u0026quot;postinstall\u0026quot;: \u0026quot;node postinstall.js\u0026quot; }  As seen before this can be configured using a json object but also can be configured or overrided using the next enviroment variables PREBUILT_ARCH, PREBUILT_PLATFORM, PREBUILT_VERSION, PREBUILT_BINARY, PREBUILT_TOKEN, PREBUILT_REPO, PREBUILT_USER and PREBUILT_TARGET_DIR environment variables.\nSpecial thanks to all the contributors to wcjs-prebuilt that this package is based on.\nLogo Hours graphic by Freepik from Flaticon is licensed under CC BY 3.0. Made with Logo Maker\n","date":1498694400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1498694400,"objectID":"a5836385805066267d7fd8fdb89a34fb","permalink":"https://www.kanekotic.com/project/any-prebuild/","publishdate":"2017-06-29T00:00:00Z","relpermalink":"/project/any-prebuild/","section":"project","summary":"Mission Easy generation or integration of prebuilt packages. It helps fetchs prebuilt binaries from github releases.\nGenerate a prebuilt package  Create new project  npm init  Add this package as dependency  npm install any-prebuilt --save  Create postinstall.","tags":["prebuilt","prebuilt-packages"],"title":"Any Prebuilt","type":"project"},{"authors":null,"categories":null,"content":"  \n   This is a plugin based crossplatform social network manager application based on electron.\nUsage (Alpha) This project is still on development and is not ready for public use\n Current early use can be done by cloning repo  # Clone the repository $ git clone https://github.com/Hatisoft/koteky.git   Plugins can be installed in app or modifying the package.json  { ... \u0026quot;plugins\u0026quot;: { \u0026quot;name_of_plugin\u0026quot; : \u0026quot;version_or_repo\u0026quot; } }   Run:  # Go into the repository $ cd koteky # Install the dependencies and run $ npm install \u0026amp;\u0026amp; npm start  Roadmap  Use plugin based architecture Style and Display posts Authentication based on Oauth for social networks Implement Twitter plugin Implement Facebook plugin Implement LinkedIn plugin  Credits Social Network graphic by Freepik from Flaticon is licensed under CC BY 3.0.Dog graphic by Freepik from Flaticon is licensed under CC BY 3.0. Made with Logo Maker\n","date":1498694400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1498694400,"objectID":"132853c913fb1ef906cc29f3d4e9c1b2","permalink":"https://www.kanekotic.com/project/koteky/","publishdate":"2017-06-29T00:00:00Z","relpermalink":"/project/koteky/","section":"project","summary":"This is a plugin based crossplatform social network manager application based on electron.\nUsage (Alpha) This project is still on development and is not ready for public use","tags":["social","social network","twitter","facebook"],"title":"Koteky","type":"project"},{"authors":null,"categories":null,"content":"   \nfeature toggle by configuration file for scala applications\nInstall //Use version in badge libraryDependencies += \u0026quot;com.github.kanekotic\u0026quot; %% \u0026quot;scala-local-toggle\u0026quot; % \u0026lt;version\u0026gt;  Use  Instantiate can be done by newing the class, it can also be register in guice or dependency injection frameworks.  val toggle = new ToggleManager();  use default files for loading configuration, it will try to load toggles from the following (first-listed are higher priority):   system properties application.conf (all resources on classpath with this name) application.json (all resources on classpath with this name) application.properties (all resources on classpath with this name) reference.conf (all resources on classpath with this name)  this files will require to have an setting for the toggles HOCON or JSON complient configuration similar to this, in any other case toggles will default to false:\nfeature.local.toggles: [ { \u0026quot;name\u0026quot;: \u0026quot;NAME_OF_YOUR_TOGGLE\u0026quot;, \u0026quot;local\u0026quot;: true \u0026quot;development\u0026quot;: true \u0026quot;production\u0026quot;: false }, { \u0026quot;name\u0026quot;: \u0026quot;NAME_OF_OTHER_YOUR_TOGGLE\u0026quot;, \u0026quot;local\u0026quot;: true \u0026quot;development\u0026quot;: false \u0026quot;production\u0026quot;: false } ]  the boolean denotes the state of the toggle depending on the environment, and the name is the identifying the value of the environment variable:\n local maps to environment variable value LOCAL. development maps to environment variable value DEVELOPMENT. production maps to environment variable value PRODUCTION.  aditionally the enviroment variable that will be track to know the current environment of execution can be modified by\nfeature.local.environment: \u0026quot;SOME_ENVIROMENT_VARIABLE_NAME\u0026quot; #Defaults to ENVIRONMENT  Use with the name identifier defined in the previous step  if (toggle.isEnabled(\u0026quot;NAME_OF_YOUR_TOGGLE\u0026quot;)) { //your code under toggle here }  LOGO Check out the new logo that I created on LogoMakr.com https://logomakr.com/6ETKtj\n","date":1498608001,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1498608001,"objectID":"4738552a22ce7d42083777052c705f7e","permalink":"https://www.kanekotic.com/project/scala-local-toggle/","publishdate":"2017-06-28T00:00:01Z","relpermalink":"/project/scala-local-toggle/","section":"project","summary":"feature toggle by configuration file for scala applications\nInstall //Use version in badge libraryDependencies += \u0026quot;com.github.kanekotic\u0026quot; %% \u0026quot;scala-local-toggle\u0026quot; % \u0026lt;version\u0026gt;  Use  Instantiate can be done by newing the class, it can also be register in guice or dependency injection frameworks.","tags":["feature-toggle","toggle","feature-toggles","feature-flags"],"title":"Scala Local Toggle","type":"project"},{"authors":null,"categories":null,"content":" Mission a command line tool to check what dependencies of an executable are really critical and not\nInstallation npm install dependency-shrinker  use this command will list the runtime dependencies that can be possible removed (will only detect the ones that will cause a crash if removed).\ndepshrink list \u0026lt;Path to executable\u0026gt; \u0026lt;boot time\u0026gt; [Paths to dependencies folders]  Warning if you kill the process of the command line tool at any point of execution you might end up in a situation where a dependency is missing.\nI will not take resposability on the issues generated by this package, so use at your own risk and make sure you backup all before using. And use with caution.\nLogo Arrows graphic by Stephen Hutchings from Flaticon is licensed under CC BY 3.0. Made with Logo Maker\n","date":1498608e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1498608e3,"objectID":"64f66dea7c5372923d11f279dc9b62e8","permalink":"https://www.kanekotic.com/project/dependency-shirnker/","publishdate":"2017-06-28T00:00:00Z","relpermalink":"/project/dependency-shirnker/","section":"project","summary":"Mission a command line tool to check what dependencies of an executable are really critical and not\nInstallation npm install dependency-shrinker  use this command will list the runtime dependencies that can be possible removed (will only detect the ones that will cause a crash if removed).","tags":["dependencies","executable","command-line","command-line-tool"],"title":"Dependency Shrinker","type":"project"},{"authors":null,"categories":null,"content":" Motivation Engine and electron app that allows to add pgp encrytion to gmail. To ensure privacy of data.\nLogo Check out the new logo that I created on LogoMakr.com https://logomakr.com/9AMIGX\n","date":1498608e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1498608e3,"objectID":"06ae28ade9feb5bc29fb6eadfccaad83","permalink":"https://www.kanekotic.com/project/mail-crypt/","publishdate":"2017-06-28T00:00:00Z","relpermalink":"/project/mail-crypt/","section":"project","summary":"Motivation Engine and electron app that allows to add pgp encrytion to gmail. To ensure privacy of data.\nLogo Check out the new logo that I created on LogoMakr.com https://logomakr.","tags":["email","encrypted","pgp"],"title":"MailCrypt","type":"project"},{"authors":null,"categories":null,"content":" dynamo operations command line (In development not production ready, use with caution.)\nUse Case provides a easy to use command line interface to interact with DynamoDb.\nSupported commands current implementation requires you to have correct setup of enviroment variables logind for aws in your command line.\nUpload from CSV dynamo-cli upload \u0026lt;path to csv\u0026gt;  TODO  Add more credentials support Add download Command TBD  Logo Check out the new logo that I created on LogoMakr.com https://logomakr.com/31ffss\n","date":1498521600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1498521600,"objectID":"190aea5bb4ee83d5a65ad46d804f5342","permalink":"https://www.kanekotic.com/project/dynamo-cli/","publishdate":"2017-06-27T00:00:00Z","relpermalink":"/project/dynamo-cli/","section":"project","summary":"dynamo operations command line (In development not production ready, use with caution.)\nUse Case provides a easy to use command line interface to interact with DynamoDb.\nSupported commands current implementation requires you to have correct setup of enviroment variables logind for aws in your command line.","tags":["command line","dynamoDB","cli","aws"],"title":"DynamoDB CLI","type":"project"},{"authors":null,"categories":null,"content":" chat bot for messenger for el done for european proposal to promote eating goat.\nLogo Check out the new logo that I created on LogoMakr.com https://logomakr.com/9M3Zaw\n","date":1496102460,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1496102460,"objectID":"19e89e76008058b2a5a7fed4cf58be16","permalink":"https://www.kanekotic.com/project/cabrito-bot/","publishdate":"2017-05-30T00:01:00Z","relpermalink":"/project/cabrito-bot/","section":"project","summary":"chat bot for messenger for el done for european proposal to promote eating goat.\nLogo Check out the new logo that I created on LogoMakr.com https://logomakr.com/9M3Zaw","tags":["bot","messenger","advert","goat"],"title":"CabritoBot","type":"project"},{"authors":null,"categories":null,"content":" Augmented reality project, spawns a rose on a glyph.\nLOGO Check out the new logo that I created on LogoMakr.com https://logomakr.com/1p2i5d\n","date":1496102410,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1496102410,"objectID":"b3ff44f6814988121e87411c65310902","permalink":"https://www.kanekotic.com/project/little-box/","publishdate":"2017-05-30T00:00:10Z","relpermalink":"/project/little-box/","section":"project","summary":"Augmented reality project, spawns a rose on a glyph.\nLOGO Check out the new logo that I created on LogoMakr.com https://logomakr.com/1p2i5d","tags":["augmented reality","android"],"title":"LittleBox","type":"project"},{"authors":null,"categories":null,"content":"Coin Run Run and Jump around without touching the stones to get as many coins as you can. Use the accelerometer and tap the screen. This is my first app, so very simple game. Developed using:\n Unreal Engine Kenney 2D Assests  ","date":1496102401,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1496102401,"objectID":"e5f27fc9e214d89eb158dbadbfb5b77a","permalink":"https://www.kanekotic.com/project/coin-run/","publishdate":"2017-05-30T00:00:01Z","relpermalink":"/project/coin-run/","section":"project","summary":"Coin Run Run and Jump around without touching the stones to get as many coins as you can. Use the accelerometer and tap the screen. This is my first app, so very simple game.","tags":["game","android","survival"],"title":"Coin Run","type":"project"},{"authors":null,"categories":null,"content":" This is a promise based unofficial runtastic api.\ninstallation npm install runtastic-unofficial-api  Use the API provides the next functionalities\nAuthentication Get login information and tokens. The next snippet describes an example of the call:\nvar authenticate = require('runtastic-unofficial-api').authenticate authenticate({email: \u0026lt;email\u0026gt;, password: \u0026lt;password\u0026gt;}) .then((result) =\u0026gt; console.log(result)) .catch((result) =\u0026gt; console.log(result))  the complete set of parameters get determined by:\n{ 'user[email]': params.email, 'user[password]': params.password, grant_type: 'password' }  The result of the promise will be if failed the error that caused it and if success an result object similar to this:\n{ authToken: token, user: user, cookieString: cookieString, cookies: cookie }  Workouts Get a list of your workouts. The next snippet describes an example of the call:\nvar workouts = require('runtastic-unofficial-api').workouts var token = 'authToken' workouts({authToken: token, user: user}) .then((result) =\u0026gt; { console.log(result) }) .catch((result) =\u0026gt; console.log(result))  the complete set of parameters get determined by:\n{ user_id: params.user.id, authenticity_token: params.authToken, items: ids.join(',') }  The result of the promise will be if failed the error that caused it and if success an result object similar to this:\n[\u0026lt;sessions\u0026gt;]  Workout (get) Get a specific workout. The next snippet describes an example of the call:\nvar workoutGet = require('runtastic-unofficial-api').workout.get var token = 'authToken' var user = {} var sessions = [] workoutGet(user, sessions[0],{authToken : token, user : user}) .then((result) =\u0026gt; { console.log(result) }) .catch((result) =\u0026gt; console.log(result))  the complete set of parameters are determined by:\n//const defaultIncludes = ['city','country','creation_application','sport_type','trace_collection','zones','sharing_token','neighbourhood'] //var includes = params.includes || defaultIncludes { user_id: params.user.id, authenticity_token: params.authToken, includes: includes.join(',') }  The result of the promise will be if failed the error that caused it and if success an result object that is quite complex to describe just try it ;) .\nWorkout (set) Set (or create) a specific workout. The next snippet describes an example of the call:\nvar workoutSet = require('runtastic-unofficial-api').workout.set var token = 'authToken' var user = {} var sessions = [] workoutSet(user, sessions[0] ,{authToken : token, user : user}) .then((result) =\u0026gt; { console.log(result) }) .catch((result) =\u0026gt; console.log(result))  the complete set of parameters are determined by:\n//var duration = params.duration ? moment.duration(params.duration) : moment.duration(0) //var pause = params.pause ? moment.duration(params.pause) : moment.duration(0) //var datetime = params.date ? moment(params.date) : moment() { authenticity_token: params.authToken, 'run_session[start_time_day]': datetime.format('YYYY-MM-DD'), \u0026quot;run_session[sport_type_id]\u0026quot;: params.type || 1, \u0026quot;run_session[distance]\u0026quot;: params.distance || 0, \u0026quot;run_session[distance_from_user]\u0026quot;: params.distance || 0, \u0026quot;run_session[elevation_gain]\u0026quot;: params.elevation_gain || 0, \u0026quot;run_session[elevation_loss]\u0026quot;: params.elevation_loss || 0, \u0026quot;run_session[elevation_gain_from_user]\u0026quot;: params.elevation_gain || 0, \u0026quot;run_session[elevation_loss_from_user]\u0026quot;: params.elevation_loss || 0, \u0026quot;run_session[start_time_hour]\u0026quot;: datetime.format('hh'), \u0026quot;run_session[start_time_minutes]\u0026quot; : datetime.format('mm'), \u0026quot;run_session[start_time_seconds]\u0026quot;: datetime.format('ss'), \u0026quot;run_session[duration]\u0026quot;: duration.asMilliseconds(), \u0026quot;run_session[duration_hours]\u0026quot;: duration.hours(), \u0026quot;run_session[duration_minutes]\u0026quot;: duration.minutes(), \u0026quot;run_session[duration_seconds]\u0026quot;:duration.seconds(), \u0026quot;run_session[pause_duration]\u0026quot;: pause.asMilliseconds(), \u0026quot;run_session[pause_duration_hours]\u0026quot;: pause.hours(), \u0026quot;run_session[pause_duration_minutes]\u0026quot;: pause.minutes(), \u0026quot;run_session[pause_duration_seconds]\u0026quot;: pause.seconds(), \u0026quot;run_session[calories]\u0026quot;: params.calories || 0, \u0026quot;run_session[calories_from_user]\u0026quot;: params.calories || 0, \u0026quot;run_session[avg_cadence]\u0026quot;: params.avg_cadence || undefined, \u0026quot;run_session[max_cadence]\u0026quot;:params.max_cadence || undefined, \u0026quot;run_session[avg_cadence_from_user]\u0026quot;: params.avg_cadence || undefined, \u0026quot;run_session[max_cadence_from_user]\u0026quot;: params.max_cadence || undefined, \u0026quot;run_session[total_crank_revolutions]\u0026quot;: params.total_crank_revolutions || undefined, \u0026quot;run_session[total_crank_revolutions_from_user]\u0026quot;: params.total_crank_revolutions || undefined, \u0026quot;run_session[wheel_circumference]\u0026quot;: params.wheel_circumference || undefined, \u0026quot;run_session[wheel_circumference_from_user]\u0026quot;: params.wheel_circumference || undefined, \u0026quot;run_session[pulse_avg]\u0026quot;: params.pulse_avg || undefined, \u0026quot;run_session[pulse_max]\u0026quot;: params.pulse_max || undefined, \u0026quot;run_session[pulse_avg_from_user]\u0026quot;: params.pulse_avg || undefined, \u0026quot;run_session[pulse_max_from_user]\u0026quot;: params.pulse_max || undefined, \u0026quot;run_session[temperature]\u0026quot;: params.temperature || 0, \u0026quot;run_session[temperature_from_user]\u0026quot;: params.temperature || 0, \u0026quot;run_session[notes]\u0026quot;: params.notes || '', \u0026quot;run_session[subjective_feeling_id]\u0026quot;: params.feeling || 5, \u0026quot;run_session[weather_condition_id]\u0026quot;: params.weather || 1, \u0026quot;run_session[surface_id]\u0026quot; : params.surface || 1 }  The result of the promise will be if failed the error that caused it and if success an result object like this:\n{ workoutId: \u0026lt;workoutId\u0026gt; }  Logo Sports graphic by Freepik from Flaticon is licensed under CC BY 3.0. Made with Logo Maker\nDisclaimer, legalese and everything else. This is not affiliated or endorset by runtastic, or any other party. This software available on the site is provided \u0026ldquo;as is\u0026rdquo; and any expressed or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. In no event shall the user under the pseudonym Kanekotic, or any of their contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage.\n","date":1496102400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1496102400,"objectID":"c78ac59c6680ea573303f5ed753450f5","permalink":"https://www.kanekotic.com/project/runtastic-unofficial-api/","publishdate":"2017-05-30T00:00:00Z","relpermalink":"/project/runtastic-unofficial-api/","section":"project","summary":"This is a promise based unofficial runtastic api.\ninstallation npm install runtastic-unofficial-api  Use the API provides the next functionalities\nAuthentication Get login information and tokens. The next snippet describes an example of the call:","tags":["runtastic","unofficial","api"],"title":"Runtastic Unofficial API","type":"project"},{"authors":null,"categories":null,"content":" unofficial nike api\nThis is a promise based unofficial nikeplus api.\ninstallation npm install nike-unofficial-api  Use the API provides the next functionalities\nAuthentication Get login information and tokens. The next snippet describes an example of the call:\nvar authenticate = require('nike-unofficial-api').authenticate authenticate({email: \u0026lt;email\u0026gt;, password: \u0026lt;password\u0026gt;}) .then((result) =\u0026gt; console.log(result)) .catch((result) =\u0026gt; console.log(result))  the complete set of parameters get determined by:\n{ email: params.email, password: params.password }  The result of the promise will be if failed the error that caused it and if success an result object similar to this:\n{ access_token: \u0026lt;token\u0026gt;, expires_in: \u0026lt;expiration time\u0026gt;, profile_img_url: \u0026lt;profile image\u0026gt;, token_type: \u0026lt;token type\u0026gt; }  Workouts Get a list of your workouts. The next snippet describes an example of the call:\nvar workouts = require('nike-unofficial-api').workouts var token = 'access_token' workouts({access_token: token}) .then((result) =\u0026gt; { console.log(result) }) .catch((result) =\u0026gt; console.log(result))  Logo Speed graphic by Freepik from Flaticon is licensed under CC BY 3.0. Made with Logo Maker\nDisclaimer, legalese and everything else. This is not affiliated or endorset by Nike , or any other party. This software available on the site is provided \u0026ldquo;as is\u0026rdquo; and any expressed or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. In no event shall the user under the pseudonym Kanekotic, or any of their contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage.\n","date":1496016e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1496016e3,"objectID":"8f845ba1cbce8daf0c5b3907102bedbb","permalink":"https://www.kanekotic.com/project/nike-unofficial-api/","publishdate":"2017-05-29T00:00:00Z","relpermalink":"/project/nike-unofficial-api/","section":"project","summary":"unofficial nike api\nThis is a promise based unofficial nikeplus api.\ninstallation npm install nike-unofficial-api  Use the API provides the next functionalities\nAuthentication Get login information and tokens. The next snippet describes an example of the call:","tags":["nike","unofficial","api"],"title":"Nike Unofficial API","type":"project"},{"authors":null,"categories":null,"content":" This is a promise based unofficial endomondo api.\ninstallation npm install endomondo-unofficial-api  Use the API provides the next functionalities\nAuthentication Get login information and tokens. The next snippet describes an example of the call:\nvar authenticate = require('endomondo-unofficial-api').authenticate authenticate({email: \u0026lt;email\u0026gt;, password: \u0026lt;password\u0026gt;}) .then((result) =\u0026gt; console.log(result)) .catch((result) =\u0026gt; console.log(result))  the complete set of parameters get determined by:\n{ email: params.email, password: params.password, deviceId: params.uuid || uuid, country: params.country || 'ES', action: params.action || 'pair' }  The result of the promise will be if failed the error that caused it and if success an result object similar to this:\n{ authToken: \u0026lt;token\u0026gt;, measure: \u0026lt;mesure unit\u0026gt;, displayName: \u0026lt;user name\u0026gt;, userId: \u0026lt;user id\u0026gt;, facebookConnected: \u0026lt;true|false\u0026gt;, secureToken: \u0026lt;token\u0026gt; }  Workouts Get a list of your workouts. The next snippet describes an example of the call:\nvar workouts = require('endomondo-unofficial-api').workouts var token = 'authToken' workouts({authToken: token}) .then((result) =\u0026gt; { console.log(result) }) .catch((result) =\u0026gt; console.log(result))  the complete set of parameters get determined by:\n{ authToken: params.authToken, fields: params.fields || undefined, maxResults: params.maxResults || undefined, deflate: params.deflate || undefined, compression: params.compression || undefined, before: params.before || undefined, after: params.after || undefined, }  The result of the promise will be if failed the error that caused it and if success an result object similar to this:\n{ \u0026quot;data\u0026quot;:[\u0026lt;activities\u0026gt;], \u0026quot;more\u0026quot;:false }  Workout (get) Get a specific workout. The next snippet describes an example of the call:\nvar workoutGet = require('endomondo-unofficial-api').workout.get var token = 'authToken' var workoutId = 'workoutId' workoutGet({authToken: token, workoutId: workoutId}) .then((result) =\u0026gt; { console.log(result) }) .catch((result) =\u0026gt; console.log(result))  the complete set of parameters are determined by:\n{ workoutId: params.id, sport: params.sport || 0, duration: params.duration || 0, gzip: params.gzip || true, audioMessage: params.audioMessage || false, goalType: params.goalType || 'BASIC', extendedResponse: params.extendedResponse || undefined, calories: params.calories || undefined, hydration: params.hydration || undefined }  The result of the promise will be if failed the error that caused it and if success an result object that is quite complex to describe just try it ;) .\nWorkout (set) Set (or create) a specific workout. The next snippet describes an example of the call:\nvar workoutSet = require('endomondo-unofficial-api').workout.set var token = 'authToken' var userId = 'userId' workoutSet({authToken: token, userId: userId, time: Date.now()-70, duration: 60, distance: 0.05 }) .then((result) =\u0026gt; { console.log(result) }) .catch((result) =\u0026gt; console.log(result))  the complete set of parameters are determined by:\n{ authToken: params.authToken, duration: params.duration, trackPoints: [ { dateTime, inst, latitude, longitude, distance, speed, altitude, heartRate }], workoutId: params.workoutId || Math.floor(Math.random() * Number.MAX_SAFE_INTEGER) }  or\n{ authToken: params.authToken, duration: params.duration, time: params.time, distance: params.distance, workoutId: params.workoutId || Math.floor(Math.random() * Number.MAX_SAFE_INTEGER) }  The result of the promise will be if failed the error that caused it and if success an result object like this:\n{ workoutId: \u0026lt;workoutId\u0026gt; }  Thanks Special thanks to @aperezm85 whos code was used as inspiration for this package.\nLogo Sport graphic by Webalys from Flaticon is licensed under CC BY 3.0. Made with Logo Maker\nDisclaimer, legalese and everything else. This is not affiliated or endorset by Endomondo, or any other party. This software available on the site is provided \u0026ldquo;as is\u0026rdquo; and any expressed or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. In no event shall the user under the pseudonym Kanekotic, or any of their contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage.\n","date":1495929600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1495929600,"objectID":"b1daaa42d1c4c34a446e093c03e42caf","permalink":"https://www.kanekotic.com/project/endomondo-unofficial-api/","publishdate":"2017-05-28T00:00:00Z","relpermalink":"/project/endomondo-unofficial-api/","section":"project","summary":"This is a promise based unofficial endomondo api.\ninstallation npm install endomondo-unofficial-api  Use the API provides the next functionalities\nAuthentication Get login information and tokens. The next snippet describes an example of the call:","tags":["endomondo","unofficial","api"],"title":"Endomondo Unofficial API","type":"project"},{"authors":null,"categories":null,"content":" this package is currently in development and is not available for use\nUse OAuth in a simple way inside your electron App.\nInstallation add it to your elenctron project using npm command\nnpm install oauth-electron --save  Usage Oauth1 add the require for ouath and twitter specific code from this package\nvar oauth = require('oauth-electron-twitter').oauth2; var data = require('oauth-electron-twitter').oauth2_data;  use or extend the oauth object as per your requirements\n{ \u0026quot;key\u0026quot; : \u0026quot;\u0026quot;, \u0026quot;secret\u0026quot; : \u0026quot;\u0026quot;; \u0026quot;window\u0026quot; : \u0026quot;\u0026quot;; \u0026quot;url\u0026quot; : \u0026quot;\u0026quot;; \u0026quot;request_token\u0026quot; : \u0026quot;\u0026quot;; \u0026quot;access_token\u0026quot; : \u0026quot;\u0026quot;; \u0026quot;version\u0026quot; : \u0026quot;\u0026quot;; \u0026quot;callback\u0026quot; : \u0026quot;\u0026quot;; \u0026quot;signature_method\u0026quot; : \u0026quot;\u0026quot;; }  pass the previously named object and a the widow to display into the login process.\nvar auth = new oauth(); auth.login(info, window);  the login function will return a Promise with the acces token and secret\n{ oauth_access_token: ***, oauth_access_token_secret: *** }  Oauth2 add the require for ouath and twitter specific code from this package\nvar oauth = require('oauth-electron-twitter').oauth2; var data = require('oauth-electron-twitter').oauth2_data;  use or extend the oauth object as per your requirements\n{ \u0026quot;key\u0026quot; : \u0026quot;\u0026quot;, \u0026quot;secret\u0026quot; : \u0026quot;\u0026quot;; \u0026quot;window\u0026quot; : \u0026quot;\u0026quot;; \u0026quot;base_url\u0026quot; : \u0026quot;\u0026quot;; \u0026quot;auth_path\u0026quot; : \u0026quot;\u0026quot;; \u0026quot;token_path\u0026quot; : \u0026quot;\u0026quot;; \u0026quot;customHeaders\u0026quot; : \u0026quot;\u0026quot;; \u0026quot;scope\u0026quot; : \u0026quot;\u0026quot;; }  pass the previously named object and a the widow to display into the login process.\nvar auth = new oauth(); auth.login(info, window);  the login function will return a Promise with the acces token and secret\n{ oauth_access_token: ***, oauth_refresh_token: *** }  logo Award,Passport graphics by Freepik from Flaticon are licensed under CC BY 3.0. Made with Logo Maker ","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"86c534df899b55801b1f5128c9ed7c30","permalink":"https://www.kanekotic.com/project/oauth-electron/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/oauth-electron/","section":"project","summary":"this package is currently in development and is not available for use\nUse OAuth in a simple way inside your electron App.\nInstallation add it to your elenctron project using npm command","tags":["oauth","electron"],"title":"OAuth Electron","type":"project"},{"authors":null,"categories":null,"content":" this package is currently in development and is not available for use\nUse Facebook OAuth in a simple way inside your electron App.\nInstallation add it to your elenctron project using npm command\nnpm install oauth-electron-facebook --save  Usage add the require for ouath and twitter specific code from this package\nvar oauth = require('oauth-electron-facebook').oauth; var facebook = require('oauth-electron-facebook').facebook;  declare a twitter object, and use it as parameter for the oauth in conjuntion with the electron window used to display the login\nvar info = new facebook(\u0026quot;key\u0026quot;,\u0026quot;secret\u0026quot;, \u0026lt;scope\u0026gt;, \u0026lt;params\u0026gt;); var auth = new oauth(); auth.login(info, window);  the login function will return a Promise with the acces token and secret\n{ oauth_access_token: ***, oauth_refresh_token: *** }  logo: Award graphic by Freepik and Letter F graphic by Icomoon from Flaticon are licensed under CC BY 3.0. Made and modified with Logo Maker ","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"8a3bed0acdc1336dfa4ff6ac56e76ae2","permalink":"https://www.kanekotic.com/project/oauth-electron-facebook/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/oauth-electron-facebook/","section":"project","summary":"this package is currently in development and is not available for use\nUse Facebook OAuth in a simple way inside your electron App.\nInstallation add it to your elenctron project using npm command","tags":["oauth","electron","facebook"],"title":"OAuth Electron Facebook","type":"project"},{"authors":null,"categories":null,"content":" Use Twitter OAuth in a simple way inside your electron App.\nInstallation add it to your elenctron project using npm command\nnpm install oauth-electron-twitter --save  Usage add the require for ouath and twitter specific code from this package\nvar oauth = require('oauth-electron-twitter').oauth; var twitter = require('oauth-electron-twitter').twitter;  declare a twitter object, and use it as parameter for the oauth in conjuntion with the electron window used to display the login. the login method return a promise with the result or the errror provided by the login pase.\nvar window = new BrowserWindow({webPreferences: {nodeIntegration: false}}); var info = new twitter(\u0026quot;key\u0026quot;,\u0026quot;secret\u0026quot;); var auth = new oauth(); auth.login(info, window).then((result) =\u0026gt; { console.log(result); }).catch((error) =\u0026gt; { console.log(error); });;  the result of this promise is a json object similar to next one\n{ oauth_access_token: ***, oauth_access_token_secret: *** }  logo: Award graphic by Freepik and Twitter graphic by Icomoon from Flaticon are licensed under CC BY 3.0. Made and modified with Logo Maker  ","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"174c4dd94b6547739a2acb34ba390ea3","permalink":"https://www.kanekotic.com/project/oauth-electron-twitter/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/oauth-electron-twitter/","section":"project","summary":"Use Twitter OAuth in a simple way inside your electron App.\nInstallation add it to your elenctron project using npm command\nnpm install oauth-electron-twitter --save  Usage add the require for ouath and twitter specific code from this package","tags":["oauth","electron","twitter"],"title":"OAuth Electron Twitter","type":"project"},{"authors":null,"categories":null,"content":" ##Intro\nProtocol capable of P2P (master to master) syncing key-value datastores. using c++ high performance web server with a redis backend. The path to requests is /rpc and takes only POST requests in JSON-RPC 2.0. The methods that have been implemented are:\n datastorePut({ collection: String, changes: [Object] }) -\u0026gt; : sync objects to the server. datastoreGet({ collection: String, all: Boolean, ids: [String] }) -\u0026gt; [Object]: retrieve all of the objects which are newer on the server. datastoreMeta({ collection: String }) -\u0026gt; [id,mtime]: get last modification times of all objects upstream.  Arguments explanation:\n collection: this is a string identifier of the collection we want to sync. changes: this is an array of objects to save in the collection; every object can be anything (JSON object). Has three special properties:  _id: (always required) is the object key/id. _mtime: is the last time the object was modified. This is a POSIX time in millisecons. _delete: is set to true if we want to remove this object from the collection. If not it can be either false or not included.   all: this is a boolean which, when set to true, makes datastoreGet return all objects in the collection ids: array of strings, specifies which objects to fetch from the database.  The implementation is integrated in Travis-CI, that will generate and publish automatically containers to easy deploy the application.\nDeployment Download the container from the docker-hub\ndocker pull kanekotic/p2s  And execute with the next command\ndocker run -p \u0026lt;service port\u0026gt; -e PORT=\u0026lt;service port\u0026gt; -e REDIS_IP=\u0026lt;redis ip\u0026gt; -e REDIS_PORT=\u0026lt;redis port\u0026gt; --net=host kanekotic/p2s  Development Current development enviroment is based on un an Ubuntu machine. Please follow the next steps to setup the enviroment:\n Basic building will require the next packages  sudo apt-get install redis-server libboost-all-dev gcc-5 g++-5 libgtest-dev cmake qt5-qmake qt5-default qtbase5-dev qttools5-dev-tools   To build gtest run  cd /usr/src/gtest sudo cmake . sudo cmake --build . sudo mv libg* /usr/local/lib/   you will also need to pull the dependency for the redis client trought  git clone https://github.com/Cylix/cpp_redis.git cd cpp_redis mkdir build cd build cmake .. make -j sudo make install -j sudo cp /usr/local/lib/libcpp_redis.so /usr/lib/libcpp_redis.so   the code can be build using the next command line on the directory  qmake make  optional\n Use Qt Creator as development enviroment, it can be installed by:  sudo apt-get install qtcreator   Install and use Postman for integration testing (./test/Test_P2S_Postman.json).  ","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"8493d93b39bc4ae034cabe53d69c3080","permalink":"https://www.kanekotic.com/project/peer-2-sync/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/peer-2-sync/","section":"project","summary":"##Intro\nProtocol capable of P2P (master to master) syncing key-value datastores. using c++ high performance web server with a redis backend. The path to requests is /rpc and takes only POST requests in JSON-RPC 2.","tags":["p2p","sync","json-rpc"],"title":"Peer2Sync","type":"project"},{"authors":null,"categories":null,"content":"  \nIntent Integration of Specflow autogeneration for Rider\nSetup clone this repo, and make sure you have intellij installed the community version should be enough. you can use the next Gradle commands from command line:\ngradle compile # generate the code gradle check # gnerate the code and test  TODO  Table Support Parameters Support Move to Rider style plugin XUnit Support MSTest Support Add Files to project  Logo Check out the new logo that I created on LogoMaker.com https://logomakr.com/8dchdu8dchdu\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"09b451d9b54c56f29584ae9708af2b55","permalink":"https://www.kanekotic.com/project/specflow-rider/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/specflow-rider/","section":"project","summary":"Intent Integration of Specflow autogeneration for Rider\nSetup clone this repo, and make sure you have intellij installed the community version should be enough. you can use the next Gradle commands from command line:","tags":["specflow","rider","intellij","intellij-plugin"],"title":"Specflow.Rider","type":"project"},{"authors":null,"categories":null,"content":"While upgrading Sonarqube i am getting the next error message\n An error happened, some parts of the page might not render correctly. Please contact the administrator if you keep on experiencing this error\n As you can see the message is not to explicit, in reality it doesnt have anything to do with reality. In my case i had copy as per the instructions the sonar.properties file. after searching i fouund this discussion post.\nThe problem at this point became clear, LDAP is a plugin inside Sonarqube. During the upgrade process the plugins must have not been loaded causing an unidentified section in the upgrade.\nThe solution is simple:\n Comment the LDAP section. Go through the upgrade process of Sonarqube. Stop Sonarqube. Uncomment LDAP section. Start Sonarqube.  ","date":1458201409,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1458201409,"objectID":"74f1d0627608008743d5059deb29bb2a","permalink":"https://www.kanekotic.com/post/04-18-sonarqube-update-when-ldapmd/","publishdate":"2016-03-17T09:56:49+02:00","relpermalink":"/post/04-18-sonarqube-update-when-ldapmd/","section":"post","summary":"While upgrading Sonarqube i am getting the next error message\n An error happened, some parts of the page might not render correctly. Please contact the administrator if you keep on experiencing this error","tags":["daily","learn"],"title":"Sonarqube Upgrade Error due LDAP","type":"post"},{"authors":null,"categories":null,"content":"Lately I have been getting tired of my operating system just not wanting to reboot or sometimes not turning off. This happens in my version off ubuntu due a problem with the energy management. The way to solve this is changing the boot parameters for the operating system. So you will need to follow the next steps:\n Edit the grub settings file (if you use nano as at the end do CTRL+O to save CTRL+X to close)  sudo nano /etc/default/grub  Eddit the next line to look similar to the next one.  GRUB_CMDLINE_LINUX_DEFAULT=\u0026quot;quiet splash acpi=force reboot=pci\u0026quot;  Call the command line to update the grub (os selector for operating system)  sudo update-grub  first reboot this will not make any difference but after your first reboot as the computer will boot with the new parameters this should solve the issue.\nDisclaimer: this works in my case, every installation in different hardware than the one in my computer could have different outcomes (that i cannot be held accountable for, so use at your discretion), including booting issues that you might solve by removing the previous parameters before booting Ubuntu from grub.\n","date":1458201409,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1458201409,"objectID":"7d3e5156e6c2ee7709a6e858988002c0","permalink":"https://www.kanekotic.com/post/04-17-ubuntu-not-turning-off-or-restartingmd/","publishdate":"2016-03-17T09:56:49+02:00","relpermalink":"/post/04-17-ubuntu-not-turning-off-or-restartingmd/","section":"post","summary":"Lately I have been getting tired of my operating system just not wanting to reboot or sometimes not turning off. This happens in my version off ubuntu due a problem with the energy management.","tags":["daily","learn"],"title":"ubuntu not restarting or turning off","type":"post"},{"authors":null,"categories":null,"content":"##mstest\nlinks:\n  assert  collection assert  ##Nunit\nlinks:\n  Attributes  Assertion  ##MOQ Example\npublic interface IFoo { public bool DoSomething(string); } int calls; var mock = new Mock\u0026lt;IFoo\u0026gt;(); mock.Setup(foo =\u0026gt; foo.DoSomething(It.IsAny\u0026lt;string\u0026gt;())). Returns((string s) =\u0026gt; s.ToLower()) .Callback(() =\u0026gt; ++calls); mock.SetupProperty(f =\u0026gt; f.Name, \u0026quot;foo\u0026quot;); mock.VerifySet(foo =\u0026gt; foo.Name = \u0026quot;foo\u0026quot;); mock.Verify(foo =\u0026gt; foo.DoSomething(It.IsAny\u0026lt;string\u0026gt;()), Times.Never());  ##Test internal Classes\nIn assembly info to test internal classes you will need to know the name of the file\n[assembly: InternalsVisibleToAttribute(\u0026quot;\u0026lt;Project Name\u0026gt;\u0026quot;)]  ","date":1456905409,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1456905409,"objectID":"18bb6a31e614e79b5d97414354daa493","permalink":"https://www.kanekotic.com/post/03-02-unit-test-cheatsheet/","publishdate":"2016-03-02T09:56:49+02:00","relpermalink":"/post/03-02-unit-test-cheatsheet/","section":"post","summary":"##mstest\nlinks:\n  assert  collection assert  ##Nunit\nlinks:\n  Attributes  Assertion  ##MOQ Example\npublic interface IFoo { public bool DoSomething(string); } int calls; var mock = new Mock\u0026lt;IFoo\u0026gt;(); mock.","tags":["daily","learn"],"title":"Unit Test CheatSheet","type":"post"},{"authors":null,"categories":null,"content":"This package is a very useful to define the navigation on your client side application. To add it just use the next command line:\nmeteor add kadira:flow-router  a static route can be done as the next code. Where name needs to be a unique identifier, and the render string has to be the name of the template.\nFlowRouter.route('/', { name: 'homeId', action(){ BlazeLayout.render('homeTemplate'); } });  in case of requiring a dynamic page. Where the change is just the second objects where you defined the child template.\nFlowRouter.route('/', { name: 'mainId', action(){ BlazeLayout.render('mainTemplate', {mainTemplate: 'dynamicTemplate'}); } });  Other interesting parts of this package is the definition of variables on the route definition (like :id in the next code).\nFlowRouter.route('/playlist/:id', { name: 'playlist', action(){ BlazeLayout.render('main', {main: 'playlist'}); } });  there is also a possibility to use it in any part of the client javascript code to do redirection by using:\nFlowRouter.go('home');  ","date":1454659009,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1454659009,"objectID":"c4a249735321b2d85391fc2347f5077f","permalink":"https://www.kanekotic.com/post/02-05-meteor-flowrouter/","publishdate":"2016-02-05T09:56:49+02:00","relpermalink":"/post/02-05-meteor-flowrouter/","section":"post","summary":"This package is a very useful to define the navigation on your client side application. To add it just use the next command line:\nmeteor add kadira:flow-router  a static route can be done as the next code.","tags":["daily","learn"],"title":"Meteor - FlowRouter","type":"post"},{"authors":null,"categories":null,"content":"When using path.Combine if the second argument starts with a /. the first path is ignored and will give a path based on the C: drive.\nvar path = Path.Combine(firstpath,$@\u0026quot;\\myfolder\\myfile.txt\u0026quot;);  will not return \u0026lt;firstpath\\myfolder\\myfile.txt\u0026gt; will return \u0026lt;C:\\\\myfolder\\myfile.txt\u0026gt;.\nMeteor - Session variables Session variables are easy to use in meteor. the can ve get and set from the javascript code using:\nSession.get('variableName'); Session.set('variableName', true);  on your HTML you can reference the get method easily by:\n\u0026lt;template name=\u0026quot;admin\u0026quot;\u0026gt; {{#if $.Session.get 'variableName'}} I am here {{else}} I am not here {{/if}} \u0026lt;/template\u0026gt;  ","date":1454572609,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1454572609,"objectID":"8c3b7cb4e5af944ffee35f3d2dd298db","permalink":"https://www.kanekotic.com/post/02-04-csharp-path-combine/","publishdate":"2016-02-04T09:56:49+02:00","relpermalink":"/post/02-04-csharp-path-combine/","section":"post","summary":"When using path.Combine if the second argument starts with a /. the first path is ignored and will give a path based on the C: drive.\nvar path = Path.Combine(firstpath,$@\u0026quot;\\myfolder\\myfile.txt\u0026quot;);  will not return \u0026lt;firstpath\\myfolder\\myfile.","tags":["daily","learn"],"title":"C# - Path.Combine","type":"post"},{"authors":null,"categories":null,"content":"Session variables are easy to use in meteor. the can ve get and set from the javascript code using:\nSession.get('variableName'); Session.set('variableName', true);  on your HTML you can reference the get method easily by:\n\u0026lt;template name=\u0026quot;admin\u0026quot;\u0026gt; {{#if $.Session.get 'variableName'}} I am here {{else}} I am not here {{/if}} \u0026lt;/template\u0026gt;  ","date":1454572609,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1454572609,"objectID":"70c5d6d554357760d9ec2d0039c5aed8","permalink":"https://www.kanekotic.com/post/02-04-meteor-session-variables/","publishdate":"2016-02-04T09:56:49+02:00","relpermalink":"/post/02-04-meteor-session-variables/","section":"post","summary":"Session variables are easy to use in meteor. the can ve get and set from the javascript code using:\nSession.get('variableName'); Session.set('variableName', true);  on your HTML you can reference the get method easily by:","tags":["daily","learn"],"title":"Meteor - Session variables","type":"post"},{"authors":null,"categories":null,"content":"To make a query over a subdocument in meteor is not posible to use directly the \u0026lsquo;$\u0026rsquo; or \u0026lsquo;$elemMatch\u0026rsquo; notation. It is necesary to use the keyword \u0026lsquo;fields:\u0026rsquo; to do this. To publish just part of a mongo document you should do a query similar to this:\nMeteor.publish('chapter', function(id, name){ check(id,String); check(name,String); return Playlists.find({ _id: id }, { fields: { chapters: { $elemMatch: { name: name }}}}); });  That from the original document:\n{ \u0026quot;_id\u0026quot;: \u0026quot;cx8cmw5KMjHQm8czw\u0026quot;, \u0026quot;name\u0026quot;: \u0026quot;Test\u0026quot;, \u0026quot;description\u0026quot;: \u0026quot;this is a test\u0026quot;, \u0026quot;chapters\u0026quot;: [ { \u0026quot;name\u0026quot;: \u0026quot;First chapter\u0026quot;, \u0026quot;description\u0026quot;: \u0026quot;this is a video about blah blah blah\u0026quot;, \u0026quot;video\u0026quot;: { \u0026quot;youtube\u0026quot;: \u0026quot;yoAFDy1WS94\u0026quot; } }, { \u0026quot;name\u0026quot;: \u0026quot;Second chapter\u0026quot;, \u0026quot;description\u0026quot;: \u0026quot;this is a video about blah blah blah\u0026quot;, \u0026quot;video\u0026quot;: { \u0026quot;youtube\u0026quot;: \u0026quot;yoAFDy1WS94\u0026quot; } } ], \u0026quot;createdAt\u0026quot;: \u0026quot;2016-02-03T07:18:52.371Z\u0026quot;, \u0026quot;isPublic\u0026quot;: false }  Will return:\n{ \u0026quot;_id\u0026quot;: \u0026quot;cx8cmw5KMjHQm8czw\u0026quot;, \u0026quot;chapters\u0026quot;: [ { \u0026quot;name\u0026quot;: \u0026quot;First chapter\u0026quot;, \u0026quot;description\u0026quot;: \u0026quot;this is a video about blah blah blah\u0026quot;, \u0026quot;video\u0026quot;: { \u0026quot;youtube\u0026quot;: \u0026quot;ldkfkfkdlfjdkf\u0026quot; } } ] }  This is useful if you have big documents or don\u0026rsquo;t want the complexity of having 2 different collections that need to be related. It will help with the performance and resources that your application uses.\nnow if you want to use the sub-document in your UI, you should just subscribe and add a helper to access this array item, like for example:\nTemplate.chapter.onCreated(function(){ var self = this; self.autorun(function(){ var id = FlowRouter.getParam('id'); var name = FlowRouter.getParam('name'); self.subscribe('chapter', id, name); }); }); Template.chapter.helpers({ chapter: () =\u0026gt; { return Playlists.findOne({}).chapters[0]; } });  Finally your HTML just needs to reference the helper defined to show the information\n\u0026lt;template name=\u0026quot;chapter\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;chapter-body\u0026quot;\u0026gt; \u0026lt;h3\u0026gt;{{ chapter.name }}\u0026lt;/h3\u0026gt; \u0026lt;iframe width=\u0026quot;560\u0026quot; height=\u0026quot;315\u0026quot; class=\u0026quot;video\u0026quot; src=\u0026quot;https://www.youtube.com/embed/{{ chapter.video.youtube }}\u0026quot; frameborder=\u0026quot;0\u0026quot; allowfullscreen\u0026gt;\u0026lt;/iframe\u0026gt; {{ #markdown }}{{ chapter.description }}{{ /markdown }} \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt;  ","date":1454486209,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1454486209,"objectID":"e71fa6e3a21c01edf240e2c4f278d4b4","permalink":"https://www.kanekotic.com/post/02-03-meteor-query-subdocument/","publishdate":"2016-02-03T09:56:49+02:00","relpermalink":"/post/02-03-meteor-query-subdocument/","section":"post","summary":"To make a query over a subdocument in meteor is not posible to use directly the \u0026lsquo;$\u0026rsquo; or \u0026lsquo;$elemMatch\u0026rsquo; notation. It is necesary to use the keyword \u0026lsquo;fields:\u0026rsquo; to do this.","tags":["daily","learn"],"title":"Meteor - Query subdocument","type":"post"},{"authors":null,"categories":null,"content":"The modifications required to use the integrated sonarqube steps are:\n On your administration panel add a new Generic Endpoint with the connection name you decide and the sonarqube server address.  Configure the start step as per the next image  select the endpoint configured before Add the project parameters:  key (this is an unique identifier). Name (display name for your software). Version (related software version).      ","date":1454313409,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1454313409,"objectID":"dde8de979981a549c0bcff7d55f3ff73","permalink":"https://www.kanekotic.com/post/02-01-vnext-sonarqube-integration/","publishdate":"2016-02-01T09:56:49+02:00","relpermalink":"/post/02-01-vnext-sonarqube-integration/","section":"post","summary":"The modifications required to use the integrated sonarqube steps are:\n On your administration panel add a new Generic Endpoint with the connection name you decide and the sonarqube server address.","tags":["daily","learn"],"title":"TFS 2015 - vnext and sonarqube integration","type":"post"},{"authors":null,"categories":null,"content":"In the Environment class there is a property called SpecialFolder. This will provide the paths to folders like: Program files, desktop, AppData, etc. The use is the next one:\nEnvironment.SpecialFolder.\u0026lt;NameSpecialFolder\u0026gt;  Where  is the given name of the folder required, for example the AppData Local folder will be\nEnvironment.SpecialFolder.LocalApplicationData  ","date":1454054209,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1454054209,"objectID":"314c3657a4f44b8279ff0cbb01570e6a","permalink":"https://www.kanekotic.com/post/01-29-csharp-path-to-system-folders/","publishdate":"2016-01-29T09:56:49+02:00","relpermalink":"/post/01-29-csharp-path-to-system-folders/","section":"post","summary":"In the Environment class there is a property called SpecialFolder. This will provide the paths to folders like: Program files, desktop, AppData, etc. The use is the next one:\nEnvironment.SpecialFolder.\u0026lt;NameSpecialFolder\u0026gt;  Where  is the given name of the folder required, for example the AppData Local folder will be","tags":["daily","learn"],"title":"C# - Paths to system folders","type":"post"},{"authors":null,"categories":null,"content":"##GIT - Branches, Tags and Commits\nI was concern what will happend with my comments in the case i remove a branch.\nIn git Commits are independents of branch\u0026rsquo;s and Tag\u0026rsquo;s. This last two are just pointers to certain commit. Trying to delete a Branch could create unreachable commits but if this are tag they become reachable.\nRemoving branches will not remove commits, they will just become unreachable. Unless they are deleted with the git-gc command for example.\n","date":1454054209,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1454054209,"objectID":"db715f214ab23d20ab7e566fca0efad4","permalink":"https://www.kanekotic.com/post/01-29-git-branches-tags-and-commits/","publishdate":"2016-01-29T09:56:49+02:00","relpermalink":"/post/01-29-git-branches-tags-and-commits/","section":"post","summary":"##GIT - Branches, Tags and Commits\nI was concern what will happend with my comments in the case i remove a branch.\nIn git Commits are independents of branch\u0026rsquo;s and Tag\u0026rsquo;s.","tags":["daily","learn"],"title":"C# - Paths to system folders","type":"post"},{"authors":null,"categories":null,"content":"I have hit a corner case of extension methods and LINQ. Today I was declaring some extension methods to make my code more readable.So I created an extension method that gets an object and performs a direct cast:\npublic static class GeneralExtensions { public static T Cast\u0026lt;T\u0026gt;(this object o) { return (T)o; } }  The intention was to be able to call my direct castings by something like this:\nMyObject.CastTo\u0026lt;MyInterface\u0026gt;();  It happens that in the same namespace I have an extension method that has a LINQ expression\nusing System; using System.Collections.Generic; using System.Linq; public static class EnumExtenstions { public static IEnumerable\u0026lt;string\u0026gt; UseLinq(this IEnumerable\u0026lt;object\u0026gt; collection) { return (from object value in collection select value.ToString() ).ToList(); } }  Adding this first extension method to my code base cause the next error\nError\tCS1936\tCould not find an implementation of the query pattern for source type 'object'. 'Select' not found.  Having both extension methods in different namespaces (and not referred), or rename Cast\u0026lt;T\u0026gt; to something different solves the issue. This is caused for an overlap of the extension methods where the nearest one to the code is the one called.\n##How bad Extension Methods over object could go?\nThis is an extract from the answer of Eric Lippert, regarding the code:\npublic static class GeneralExtensions { public static T Cast\u0026lt;T\u0026gt;(this object o) { return (T)o; } }  Side Effects of the cast\u0026lt;T\u0026gt;:\n Cast\u0026lt;int\u0026gt;(123) unnecessarily boxes the int, (int)123 does not. Cast\u0026lt; short \u0026gt;(123) fails but (short)123 succeeds. There is no conversion from a boxed int to a short. Suppose you have a user-defined conversion from Animal to Shape. Cast\u0026lt;Shape\u0026gt;(new Tiger()) fails but (Shape) new Tiger() succeeds. Suppose q is a nullable int that happens to be null. Cast\u0026lt;string\u0026gt;(q) succeeds! But (string)q would fail at compile time Etc  Cast method has some overlap with the real cast operator but is not a substitute for it. To capture the semantics of the cast operator there is a need to use dynamic, which starts the compiler at runtime and does the compile time analysis on runtime types.\n","date":1453967809,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1453967809,"objectID":"03f2c610ec7838bccad13d02cdcf0e15","permalink":"https://www.kanekotic.com/post/01-28-extension-methods-overlap-with-linq/","publishdate":"2016-01-28T09:56:49+02:00","relpermalink":"/post/01-28-extension-methods-overlap-with-linq/","section":"post","summary":"I have hit a corner case of extension methods and LINQ. Today I was declaring some extension methods to make my code more readable.So I created an extension method that gets an object and performs a direct cast:","tags":["daily","learn"],"title":"C# - Extension methods overlap with linq","type":"post"},{"authors":null,"categories":null,"content":"I have not experiment to much with fluent interfaces. But is something cool especially to make code that is expressive.\npublic struct Coordenates { public double X { get; set; } public double Y { get; set; } public double Z { get; set; } } public static class CoordenatesExtensions { public static Coordenates X(this Coordenates coordenates, double value) { coordenates.X = value; return coordenates; } public static Coordenates Y(this Coordenates coordenates, double value) { coordenates.Y = value; return coordenates; } public static Coordenates Z(this Coordenates coordenates, double value) { coordenates.Z = value; return coordenates; } } public class Points { private Coordenates point; public Points() { point = new Coordenates().X(2.1).Y(2.4).Z(3.2); } }  also can be used with some language properties to make it more expressive\npublic static class GeneralExtensions { public static T As\u0026lt;T\u0026gt;(this object o) where T : class { return o as T; } public static T Cast\u0026lt;T\u0026gt;(this object o) { return (T)o; } public static bool Is\u0026lt;T\u0026gt;(this object o) { return o is T; } }  ","date":1453881409,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1453881409,"objectID":"0be0bc32a892bf99fa7f2ae4c2f7cc76","permalink":"https://www.kanekotic.com/post/01-27-interface-with-extension-methods/","publishdate":"2016-01-27T09:56:49+02:00","relpermalink":"/post/01-27-interface-with-extension-methods/","section":"post","summary":"I have not experiment to much with fluent interfaces. But is something cool especially to make code that is expressive.\npublic struct Coordenates { public double X { get; set; } public double Y { get; set; } public double Z { get; set; } } public static class CoordenatesExtensions { public static Coordenates X(this Coordenates coordenates, double value) { coordenates.","tags":["daily","learn"],"title":"C# - Fluent Interfaces with Extension Methods","type":"post"},{"authors":null,"categories":null,"content":"##Documentation\nI found a lot of interesting things in this link, i can setup my view model to a real JavaScript object.\n https://viewmodel.meteor.com/docs\n##Markdown\nTo add markdown support you will have to add the markdown package:\nmeteor add markdown  If you also want your snippets of code to have some style you will also need to add the highlight.js package:\nmeteor add simple:highlight.js  ##AutoForm\nto get a multi-line input you need to make sure you get a textarea. This can be done in the collection definition by:\nTestSchema = new SimpleSchema({ content: { type: String, label: \u0026quot;Content\u0026quot;, autoform: { rows: 10 } } });  ","date":1453881409,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1453881409,"objectID":"ac0ad6167584c8ae7a3cc48593a6635b","permalink":"https://www.kanekotic.com/post/01-27-meteor-the-beginning/","publishdate":"2016-01-27T09:56:49+02:00","relpermalink":"/post/01-27-meteor-the-beginning/","section":"post","summary":"##Documentation\nI found a lot of interesting things in this link, i can setup my view model to a real JavaScript object.\n https://viewmodel.meteor.com/docs\n##Markdown\nTo add markdown support you will have to add the markdown package:","tags":["daily","learn"],"title":"Meteor the beginning","type":"post"},{"authors":null,"categories":null,"content":"When doing complex objects using an object to help the building is welcome.\npublic class Complex { double x; double y; double z; float height; float width; string foreground; string background; public Complex() { x = 1.456; y = 1.234; z = 1.789; height = 10.12; width = 10.14; foreground = \u0026quot;#FFF\u0026quot;; background = \u0026quot;#FA1\u0026quot;; } }  In this way you remove some complexity of just adding steps in your constructor to something more abstract and can contain the logic.\npublic class Complex { public double X { get; set; } public double Y { get; set; } public double Z { get; set; } public double Height { get; set; } public double Width { get; set; } public string Foreground { get; set; } public string Background { get; set; } public Complex(ComplexBuildHelper buildHelper) { buildHelper.Construct(this); } } public class ComplexBuildHelper { public void Construct(Complex reference) { BuildPosition(reference); BuildDimension(reference); BuildCharacteristics(reference); } private void BuildPosition(Complex reference) { reference.X = 1.456; reference.Y = 1.234; reference.Z = 1.789; } private void BuildDimension(Complex reference) { reference.Height = 10.12; reference.Width = 10.14; } private void BuildCharacteristics(Complex reference) { reference.Foreground = \u0026quot;#FFF\u0026quot;; reference.Background = \u0026quot;#FA1\u0026quot;; } }  ","date":1453795009,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1453795009,"objectID":"12fbb07bfab8883564a4cef6b246627b","permalink":"https://www.kanekotic.com/post/01-26-c-sharp-complex-constructors/","publishdate":"2016-01-26T09:56:49+02:00","relpermalink":"/post/01-26-c-sharp-complex-constructors/","section":"post","summary":"When doing complex objects using an object to help the building is welcome.\npublic class Complex { double x; double y; double z; float height; float width; string foreground; string background; public Complex() { x = 1.","tags":["daily","learn"],"title":"Coding - C# - Complex Constructors","type":"post"},{"authors":null,"categories":null,"content":"So i have started writing using GitBook, to take notes of what i learn every day. a few things have shown up.\n There are some required files if you start from a GitHub repository that you will have to create:  README.md SUMMARY.md   Markdown is partially working as per escape characters don\u0026rsquo;t work with # and numbering and listing get confused if they are.  ","date":1453795009,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1453795009,"objectID":"9080cd809d223ead8b7ce0311b3b150b","permalink":"https://www.kanekotic.com/post/01-26-gitbook-the-beginning/","publishdate":"2016-01-26T09:56:49+02:00","relpermalink":"/post/01-26-gitbook-the-beginning/","section":"post","summary":"So i have started writing using GitBook, to take notes of what i learn every day. a few things have shown up.\n There are some required files if you start from a GitHub repository that you will have to create:  README.","tags":["daily","learn"],"title":"Gitbook - The beginning","type":"post"},{"authors":null,"categories":null,"content":" this is a template for generating a package using vue as rendering framework\nLogo Check out the new logo that I created on LogoMakr.com https://logomakr.com/3lbtkb\n","date":1435536e3,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1435536e3,"objectID":"c2f1af7f1801360024c1d9ddcf0ee3bf","permalink":"https://www.kanekotic.com/project/vue-atom-template/","publishdate":"2015-06-29T00:00:00Z","relpermalink":"/project/vue-atom-template/","section":"project","summary":"this is a template for generating a package using vue as rendering framework\nLogo Check out the new logo that I created on LogoMakr.com https://logomakr.com/3lbtkb","tags":["vue","atom","template","package"],"title":"Vue Atom Template","type":"project"}]