"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4283],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>k});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(a),u=o,k=m["".concat(s,".").concat(u)]||m[u]||d[u]||r;return a?n.createElement(k,i(i({ref:t},p),{},{components:a})):n.createElement(k,i({ref:t},p))}));function k(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},7195:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var n=a(7462),o=(a(7294),a(3905));const r={sidebar_position:20},i="Gatoo",l={unversionedId:"maintained/gatoo",id:"maintained/gatoo",title:"Gatoo",description:"logomakr_32f2md",source:"@site/docs/maintained/gatoo.md",sourceDirName:"maintained",slug:"/maintained/gatoo",permalink:"/docs/maintained/gatoo",draft:!1,editUrl:"https://github.com/kanekotic/kanekotic-page/tree/main/docs/maintained/gatoo.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"tutorialSidebar",previous:{title:"Endomondo Unofficial API",permalink:"/docs/maintained/endomondo-unofficial-api"},next:{title:"Nike Unofficial API",permalink:"/docs/maintained/nike-unofficial-api"}},s={},c=[{value:"Use as Command Line",id:"use-as-command-line",level:2},{value:"Use as library",id:"use-as-library",level:2},{value:"Import",id:"import",level:3},{value:"Export",id:"export",level:3},{value:"Export to console",id:"export-to-console",level:3},{value:"TODO",id:"todo",level:2},{value:"Github Repo",id:"github-repo",level:2},{value:"Logo",id:"logo",level:3}],p={toc:c},m="wrapper";function d(e){let{components:t,...a}=e;return(0,o.kt)(m,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"gatoo"},"Gatoo"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/3071208/42147664-29898cca-7dcf-11e8-9c50-2cf3845b7fe8.png",alt:"logomakr_32f2md"})),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://travis-ci.org/kanekotic/gatoo"},(0,o.kt)("img",{parentName:"a",src:"https://travis-ci.org/kanekotic/gatoo.svg?branch=master",alt:"Build Status"})),"\n",(0,o.kt)("a",{parentName:"p",href:"https://coveralls.io/github/kanekotic/gatoo?branch=master"},(0,o.kt)("img",{parentName:"a",src:"https://coveralls.io/repos/github/kanekotic/gatoo/badge.svg?branch=master",alt:"Coverage Status"}))),(0,o.kt)("p",null,"This project will provide a command line and a library to export google analytics to your prefered endpoint (console, log management, or db)."),(0,o.kt)("h2",{id:"use-as-command-line"},"Use as Command Line"),(0,o.kt)("p",null,"install globally with ",(0,o.kt)("inlineCode",{parentName:"p"},"npm install gatoo -g"),". Aftyer this it can be run with the next command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-zsh"},"gatoo console <email> <ReplativePath> <viewId> <startDate> <endDate> <metrics> <dimensions>\n")),(0,o.kt)("h2",{id:"use-as-library"},"Use as library"),(0,o.kt)("p",null,"first step is to add this to your project throught ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn add gatoo")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"npm install gatoo")),(0,o.kt)("p",null,"currently you can retrieve in a simple way data from google analytics and route it to your prefered output. An example of retrieval is the next one."),(0,o.kt)("h3",{id:"import"},"Import"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const importer = require(\'../lib/index\').importer\n    path = require(\'path\')\n    \nconst email = \'your email\' //email account from the user credentials\n    keyPath = path.join(__dirname, \'your credentials\')// path to credentials json or pem\n    config = {\n    viewId: "some viewId",//the view id to query\n    daterange:{\n        "endDate":"2017-06-30",\n        "startDate":"2016-06-30"\n      },\n      metrics: "ga:users",\n      dimensions: "ga:date"\n    }\n\nconst example = async () => {\n    const result = await importer(email, keyPath, config)\n    console.log(JSON.stringify(result.data))\n}\n\nexample()\n')),(0,o.kt)("h3",{id:"export"},"Export"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const exporter = require(\'../lib/index\').exporter\n    path = require(\'path\')\n    \nconst email = \'your email\' //email account from the user credentials\n    keyPath = path.join(__dirname, \'your credentials\')// path to credentials json or pem\n    config = {\n    viewId: "some viewId",//the view id to query\n    daterange:{\n        "endDate":"2017-06-30",\n        "startDate":"2016-06-30"\n      },\n      metrics: "ga:users",\n      dimensions: "ga:date"\n    }\n\nconst doSomething () => {}\n\nconst example = async () => {\n    const result = await exporter(email, keyPath, config,  doSomething)\n}\n\nexample()\n')),(0,o.kt)("h3",{id:"export-to-console"},"Export to console"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const exporter = require(\'../lib/index\').outputTo\n    path = require(\'path\')\n    \nconst email = \'your email\' //email account from the user credentials\n    keyPath = path.join(__dirname, \'your credentials\')// path to credentials json or pem\n    config = {\n    viewId: "some viewId",//the view id to query\n    daterange:{\n        "endDate":"2017-06-30",\n        "startDate":"2016-06-30"\n      },\n      metrics: "ga:users",\n      dimensions: "ga:date"\n    }\n\nconst example = async () => {\n    const result = await outputTo.console(email, keyPath, config)\n}\n\nexample()\n')),(0,o.kt)("h2",{id:"todo"},"TODO"),(0,o.kt)("ul",{className:"contains-task-list"},(0,o.kt)("li",{parentName:"ul",className:"task-list-item"},(0,o.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","Retrieve data from google analytics "),(0,o.kt)("li",{parentName:"ul",className:"task-list-item"},(0,o.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","Create library"),(0,o.kt)("li",{parentName:"ul",className:"task-list-item"},(0,o.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","Create adapter for output console  "),(0,o.kt)("li",{parentName:"ul",className:"task-list-item"},(0,o.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","Create command line tool console  "),(0,o.kt)("li",{parentName:"ul",className:"task-list-item"},(0,o.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Create adapter logstash  "),(0,o.kt)("li",{parentName:"ul",className:"task-list-item"},(0,o.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Create adapter fluentd  "),(0,o.kt)("li",{parentName:"ul",className:"task-list-item"},(0,o.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Create adapter ES  "),(0,o.kt)("li",{parentName:"ul",className:"task-list-item"},(0,o.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Create command line tool logstash  "),(0,o.kt)("li",{parentName:"ul",className:"task-list-item"},(0,o.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Create command line tool fluentd  "),(0,o.kt)("li",{parentName:"ul",className:"task-list-item"},(0,o.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Create command line tool ES  ")),(0,o.kt)("h2",{id:"github-repo"},(0,o.kt)("a",{parentName:"h2",href:"https://github.com/kanekotic/gatoo"},"Github Repo")),(0,o.kt)("h3",{id:"logo"},"Logo"),(0,o.kt)("p",null,"Check out the new logo that I created on ",(0,o.kt)("a",{href:"http://logomakr.com",title:"Logo Makr"},"LogoMakr.com")," ",(0,o.kt)("a",{parentName:"p",href:"https://logomakr.com/32f2Md"},"https://logomakr.com/32f2Md")))}d.isMDXComponent=!0}}]);