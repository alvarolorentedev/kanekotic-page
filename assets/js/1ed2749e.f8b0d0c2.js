"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3809],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),f=a,h=m["".concat(s,".").concat(f)]||m[f]||u[f]||o;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5010:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={title:"Unit Test CheatSheet",summary:"Unit Test CheatSheet",description:"Unit Test CheatSheet",date:new Date("2016-03-02T07:56:49.000Z"),tags:["daily","learn"],draft:!1,published:!1},i=void 0,l={permalink:"/blog/2016/03/02/unit-test-cheatsheet",editUrl:"https://github.com/kanekotic/kanekotic-page/tree/main/blog/2016-03-02-unit-test-cheatsheet.md",source:"@site/blog/2016-03-02-unit-test-cheatsheet.md",title:"Unit Test CheatSheet",description:"Unit Test CheatSheet",date:"2016-03-02T07:56:49.000Z",formattedDate:"March 2, 2016",tags:[{label:"daily",permalink:"/blog/tags/daily"},{label:"learn",permalink:"/blog/tags/learn"}],readingTime:.4,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Unit Test CheatSheet",summary:"Unit Test CheatSheet",description:"Unit Test CheatSheet",date:"2016-03-02T07:56:49.000Z",tags:["daily","learn"],draft:!1,published:!1},prevItem:{title:"Create your User/Organization GitHub Page with Hugo + Travis",permalink:"/blog/2018/07/04/deploy-hugo-with-travis"},nextItem:{title:"C# - Path.Combine",permalink:"/blog/2016/02/04/csharp-path-combine"}},s={authorsImageUrls:[]},c=[],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"##",(0,a.kt)("strong",{parentName:"p"},"mstest")),(0,a.kt)("p",null,"links:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://msdn.microsoft.com/en-us/library/microsoft.visualstudio.testtools.unittesting.assert.aspx"},"assert")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://msdn.microsoft.com/en-us/library/microsoft.visualstudio.testtools.unittesting.collectionassert.aspx"},"collection assert"))),(0,a.kt)("p",null,"##",(0,a.kt)("strong",{parentName:"p"},"Nunit")),(0,a.kt)("p",null,"links:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/nunit/docs/wiki/Attributes"},"Attributes")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/nunit/docs/wiki/Assertions"},"Assertion"))),(0,a.kt)("p",null,"##",(0,a.kt)("strong",{parentName:"p"},"MOQ"),"\nExample"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},'public interface IFoo {\n   public bool DoSomething(string);\n}\n\nint calls;\nvar mock = new Mock<IFoo>();\nmock.Setup(foo => foo.DoSomething(It.IsAny<string>())).\n         Returns((string s) => s.ToLower())\n         .Callback(() => ++calls);\n\nmock.SetupProperty(f => f.Name, "foo");\nmock.VerifySet(foo => foo.Name = "foo");\n\nmock.Verify(foo => foo.DoSomething(It.IsAny<string>()), Times.Never());\n')),(0,a.kt)("p",null,"##",(0,a.kt)("strong",{parentName:"p"},"Test internal Classes")),(0,a.kt)("p",null,"In assembly info to test internal classes you will need to know the name of the file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},'[assembly: InternalsVisibleToAttribute("<Project Name>")]\n')))}u.isMDXComponent=!0}}]);