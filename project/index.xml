<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Projects | Kanekotic</title><link>https://www.kanekotic.com/project/</link><atom:link href="https://www.kanekotic.com/project/index.xml" rel="self" type="application/rss+xml"/><description>Projects</description><generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><copyright>kanekotic Â© 2021</copyright><lastBuildDate>Wed, 29 Jan 2020 00:00:00 +0000</lastBuildDate><image><url>https://www.kanekotic.com/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url><title>Projects</title><link>https://www.kanekotic.com/project/</link></image><item><title>Tarant</title><link>https://www.kanekotic.com/project/tarant/</link><pubDate>Wed, 29 Jan 2020 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/tarant/</guid><description>&lt;p>
&lt;a href="https://gitter.im/tarantx/general?utm_source=share-link&amp;amp;utm_medium=link&amp;amp;utm_campaign=share-link" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/gitter/room/TechnologyAdvice/Stardust.svg" alt="Join Gitter">&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://www.tarant.io/" target="_blank" rel="noopener">Tarant&lt;/a> is a TypeScript/JavaScript library for building software using the actor system model.
You can visit the home page for more information and a more complete quick start guide:
&lt;a href="https://www.tarant.io/" target="_blank" rel="noopener">https://www.tarant.io/&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Actors are easy to reason about&lt;/strong>: An actor is the unit of state and logic of your application.
They are transactional, so you don&amp;rsquo;t need to handle state rollbacks in case of errors.&lt;/li>
&lt;li>&lt;strong>Actors improve performance&lt;/strong>: Asynchronous by default, every actor actual communication is non-blocking so slow actors will not block fast actors.&lt;/li>
&lt;li>&lt;strong>Actors are extensible&lt;/strong>: As actors are built on top of objects, actor classes can be inherited,
composed and injected.&lt;/li>
&lt;/ul>
&lt;h2 id="features">Features&lt;/h2>
&lt;p>Tarant implements a rich set of features that makes it suitable for building complex applications.&lt;/p>
&lt;ul>
&lt;li>Actors are reliable because they are transactional. You don&amp;rsquo;t need to bother yourself with error recovery.&lt;/li>
&lt;li>Actors are performant, as they are pull-based and decoupled from other actors lifecycle.&lt;/li>
&lt;li>Actors are easy to debug. All messages come with information about the sender and all the state information is saved
in a time machine, for further debugging and navigation.&lt;/li>
&lt;li>The Actor System has an event bus. Actors can subscribe, publish and request messages from any topic and subscriptions
can be handled at any time.&lt;/li>
&lt;li>The Actor System is highly extensive. You can add your own supervisor and materializers to add new features like
implicit persistence or rendering of actors.&lt;/li>
&lt;/ul>
&lt;h3 id="showcase">Showcase&lt;/h3>
&lt;ul>
&lt;li>
&lt;a href="./examples/ping-pong.js">Actors support asynchronous messaging&lt;/a> and answering through Promises. Slow actors will not block fast actors.&lt;/li>
&lt;li>
&lt;a href="./examples/scheduleds.js">Actors can schedule tasks&lt;/a> for interval or one-shot delayed actions.&lt;/li>
&lt;li>
&lt;a href="./examples/supervisor.js">Actors are safe and can be recovered with a supervisor&lt;/a>.&lt;/li>
&lt;li>
&lt;a href="examples/pubsub.js">Actors can subscribe in a topic in a type-safe way&lt;/a> for extensible communication.&lt;/li>
&lt;/ul>
&lt;h2 id="quick-start">Quick start&lt;/h2>
&lt;p>Creating your first actor system is easy and you don&amp;rsquo;t need to understand everything that is happening under the hood.
First you must install the package:&lt;/p>
&lt;p>&lt;code>npm install tarant --save&lt;/code>&lt;/p>
&lt;p>Then create your first ActorSystem&lt;/p>
&lt;pre>&lt;code class="language-js">let { Actor, ActorSystem } = require('tarant')
let system = ActorSystem.default()
&lt;/code>&lt;/pre>
&lt;p>And create your actor class:&lt;/p>
&lt;pre>&lt;code class="language-js">class Ping extends Actor {
ping() {
console.log(&amp;quot;PING&amp;quot;)
}
}
&lt;/code>&lt;/pre>
&lt;p>Then you only need to instantiate your actor and send messages to it:&lt;/p>
&lt;pre>&lt;code class="language-js">let myPinger = system.actorOf(Ping, [])
myPinger.ping()
&lt;/code>&lt;/pre>
&lt;p>The application will continue running and processing messages until you stop the actor system:&lt;/p>
&lt;pre>&lt;code class="language-js">system.free()
&lt;/code>&lt;/pre>
&lt;p>If you run the application you will see the following output:&lt;/p>
&lt;pre>&lt;code>PING
&lt;/code>&lt;/pre>
&lt;h2 id="contribution-prs-welcomehttpsimgshieldsiobadgeprs-welcome-brightgreensvg-issues-welcomehttpsimgshieldsiobadgeissues-welcome-brightgreensvg">Contribution &lt;img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" alt="PRs Welcome"> &lt;img src="https://img.shields.io/badge/issues-welcome-brightgreen.svg" alt="Issues Welcome">&lt;/h2>
&lt;p>PR and issues are always welcome as a quick way of contributing to the project. Remember to be polite, this is a open source
project and ordinary requirements for PRs and issues are also a requirement.&lt;/p>
&lt;p>If you want to be a long-term contributor and participate actively on the design of new features on the project, contact
us! Check the package.json to see who you need to contact.&lt;/p>
&lt;h5 id="created-my-free-logohttpslogomakrcom43ipoz-at-a-hrefhttplogomakrcom-titlelogo-makrlogomakrcoma">Created my free
&lt;a href="https://logomakr.com/43ipOz" target="_blank" rel="noopener">logo&lt;/a> at &lt;a href="http://logomakr.com" title="Logo Makr">LogoMakr.com&lt;/a>&lt;/h5></description></item><item><title>Feaggle</title><link>https://www.kanekotic.com/project/feaggle/</link><pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/feaggle/</guid><description>&lt;p>
&lt;a href="https://cloud.docker.com/repository/docker/kmruiz/feaggle-server" target="_blank" rel="noopener">You can download the latest image from DockerHub!&lt;/a>&lt;/p>
&lt;p>&lt;em>feaggle-server&lt;/em> is a dynamic server that allows setting up
feature toggles for the &lt;code>feaggle&lt;/code> library.&lt;/p>
&lt;h2 id="development">Development&lt;/h2>
&lt;h3 id="how-to-run-feaggle-server-locally">How to Run feaggle-server locally&lt;/h3>
&lt;p>&lt;strong>You will need to install docker and docker-compose in your machine.&lt;/strong>&lt;/p>
&lt;p>Start a postgresql instance in your local machine, the easiest way is using the provided
docker-compose.yml that is in the root of the project:&lt;/p>
&lt;p>&lt;code>docker-compose up postgres&lt;/code>&lt;/p>
&lt;p>It will take several minutes if there is no cached image of postgresql, after that, just
run the
&lt;a href="src/main/kotlin/io/feaggle/server/Main.kt">main function&lt;/a> with your favourite IDE.&lt;/p></description></item><item><title>Electron Plugin</title><link>https://www.kanekotic.com/project/electron-plugin/</link><pubDate>Sat, 29 Jun 2019 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/electron-plugin/</guid><description>&lt;p>Create extensible electron applications through a plugin architecture that uses NPM (or similar registry) or GitHub as repository for the extensions.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>add it to your electron project using &lt;code>npm install electron-plugin --save&lt;/code> or &lt;code>yarn add electron-plugin&lt;/code>&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>require &lt;code>electron-plugin&lt;/code> exports a function that requires a javascript object and an electron window, as seen on the next example:&lt;/p>
&lt;pre>&lt;code class="language-js">const pluginManager = require(`electron-plugin`)
let config = {
installPath: `${__dirname}/test_folder`,
plugins : {
&amp;quot;electron-plugin-example&amp;quot;: &amp;quot;0.0.2&amp;quot;
}
},
extensionPoint = {
app: 'anything you want to use as exstention point'
}
pluginManager.load(config, extensionPoint)
&lt;/code>&lt;/pre>
&lt;h5 id="created-my-free-logologomakrcom2nqeyp-at-logomakrcomlogomakrcom">Created my free
&lt;a href="logomakr.com/2NQeYP">logo&lt;/a> at
&lt;a href="LogoMakr.com">LogoMakr.com&lt;/a>&lt;/h5></description></item><item><title>Web Threads</title><link>https://www.kanekotic.com/project/web-threds/</link><pubDate>Fri, 27 Apr 2018 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/web-threds/</guid><description>&lt;h1 id="logomakr_09u4zzhttpsuser-imagesgithubusercontentcom307120844622482-88a91a80-a8b9-11e8-976c-fdd422ac5c98png">&lt;img src="https://user-images.githubusercontent.com/3071208/44622482-88a91a80-a8b9-11e8-976c-fdd422ac5c98.png" alt="logomakr_09u4zz">&lt;/h1>
&lt;p>
&lt;a href="https://travis-ci.org/kanekotic/web-threads" target="_blank" rel="noopener">&lt;img src="https://travis-ci.org/kanekotic/web-threads.svg?branch=master" alt="Build Status">&lt;/a>
&lt;a href="https://coveralls.io/github/kanekotic/web-threads?branch=master" target="_blank" rel="noopener">&lt;img src="https://coveralls.io/repos/github/kanekotic/web-threads/badge.svg?branch=master" alt="Coverage Status">&lt;/a>
&lt;a href="https://github.com/kanekotic/web-threads" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/npm/dt/web-threads.svg" alt="npm">&lt;/a>
&lt;a href="https://github.com/kanekotic/web-threads/blob/master/LICENSE" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/github/license/kanekotic/web-threads.svg" alt="GitHub license">&lt;/a>
&lt;a href="https://GitHub.com/kanekotic/web-threads/graphs/commit-activity" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/badge/Maintained%3F-yes-green.svg" alt="Maintenance">&lt;/a>
&lt;a href="https://www.paypal.me/kanekotic/" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/badge/Donate-PayPal-blue.svg" alt="Donate">&lt;/a>&lt;/p>
&lt;p>generic threads using web workers for the web&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>add it to your project using &lt;code>npm install web-threads --save&lt;/code> or &lt;code>yarn add web-threads&lt;/code>&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;h3 id="simple-function-with-arguments">Simple function with arguments&lt;/h3>
&lt;pre>&lt;code class="language-js">import { execute } from 'web-threads'
let func = (value) =&amp;gt; {
return value * value
}
let params = {
fn: func.toString(),
args: [2]
}
execute(params)
.then(console.log)
.catch(console.error)
&lt;/code>&lt;/pre>
&lt;h3 id="function-with-context">Function with context&lt;/h3>
&lt;pre>&lt;code class="language-js">import { execute } from 'web-threads'
function Func(value){
this.value = value
}
Func.prototype.foo = function(){
return this.value * this.value
};
var instance = new Func(2)
let params = {
fn: instance.foo,
context: instance
}
execute(params)
.then(console.log)
.catch(console.error)
&lt;/code>&lt;/pre>
&lt;h3 id="function-with-context-and-arguments">Function with context and arguments&lt;/h3>
&lt;pre>&lt;code class="language-js">import { execute } from 'web-threads'
function Func(value){
this.value = value
}
Func.prototype.foo = function(otherValue){
return this.value * otherValue
};
var instance = new Func(2)
let params = {
fn: instance.foo,
context: instance,
args: [4]
}
execute(params)
.then(console.log)
.catch(console.error)
&lt;/code>&lt;/pre>
&lt;h3 id="es6-class-call-function-with-arguments">ES6 class call function with arguments&lt;/h3>
&lt;pre>&lt;code class="language-js">import { execute } from 'web-threads'
class someClass {
constructor(val){
this.val = val
}
foo(some){
return this.val * some
}
}
var instance = new someClass(2)
let params = {
fn: instance.foo,
context: instance,
args: [4]
}
execute(params)
.then(console.log)
.catch(console.error)
&lt;/code>&lt;/pre>
&lt;h4 id="inspired-in">Inspired in:&lt;/h4>
&lt;ul>
&lt;li>
&lt;a href="https://github.com/CodeInBrackets/ui.wind.js" target="_blank" rel="noopener">work done pairing with @kmruiz for ui.wind.js&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://blog.scottlogic.com/2011/02/24/web-workers-part-3-creating-a-generic-worker.html" target="_blank" rel="noopener">scottlogic.com post&lt;/a>&lt;/li>
&lt;li>
&lt;a href="http://www.eslinstructor.net/vkthread/" target="_blank" rel="noopener">@vkiryukhin&lt;/a>&lt;/li>
&lt;/ul>
&lt;h5 id="web-graphic-by-a-hrefhttpwwwflaticoncomauthorspicolpicola-from-a-hrefhttpwwwflaticoncomflaticona-is-licensed-under-a-hrefhttpcreativecommonsorglicensesby30-titlecreative-commons-by-30cc-by-30a-check-out-the-new-logo-that-i-created-on-a-hrefhttplogomakrcom-titlelogo-makrlogomakrcoma-httpslogomakrcom09u4zz">Web graphic by &lt;a href="http://www.flaticon.com/authors/picol">picol&lt;/a> from &lt;a href="http://www.flaticon.com/">Flaticon&lt;/a> is licensed under &lt;a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0">CC BY 3.0&lt;/a>. Check out the new logo that I created on &lt;a href="http://logomakr.com" title="Logo Makr">LogoMakr.com&lt;/a>
&lt;a href="https://logomakr.com/09u4Zz" target="_blank" rel="noopener">https://logomakr.com/09u4Zz&lt;/a>&lt;/h5></description></item><item><title>Flow Runtime Faker</title><link>https://www.kanekotic.com/project/flow-runtime-faker/</link><pubDate>Tue, 27 Mar 2018 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/flow-runtime-faker/</guid><description>&lt;h1 id="logohttpsuser-imagesgithubusercontentcom307120848891796-a7796780-ee3c-11e8-93a0-69b06f1a1198png">&lt;img src="https://user-images.githubusercontent.com/3071208/48891796-a7796780-ee3c-11e8-93a0-69b06f1a1198.png" alt="logo">&lt;/h1>
&lt;p>
&lt;a href="https://travis-ci.org/kanekotic/flow-runtime-faker" target="_blank" rel="noopener">&lt;img src="https://travis-ci.org/kanekotic/flow-runtime-faker.svg?branch=master" alt="Build Status">&lt;/a>
&lt;a href="https://coveralls.io/github/kanekotic/flow-runtime-faker?branch=master" target="_blank" rel="noopener">&lt;img src="https://coveralls.io/repos/github/kanekotic/flow-runtime-faker/badge.svg?branch=master" alt="Coverage Status">&lt;/a>
&lt;a href="https://github.com/kanekotic/flow-runtime-faker" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/npm/dt/flow-runtime-faker.svg" alt="npm">&lt;/a>
&lt;a href="https://github.com/kanekotic/flow-runtime-faker/blob/master/LICENSE" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/github/license/kanekotic/flow-runtime-faker.svg" alt="GitHub license">&lt;/a>
&lt;a href="https://GitHub.com/kanekotic/flow-runtime-faker/graphs/commit-activity" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/badge/Maintained%3F-yes-green.svg" alt="Maintenance">&lt;/a>
&lt;a href="https://www.paypal.me/kanekotic/" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/badge/Donate-PayPal-green.svg" alt="Donate">&lt;/a>&lt;/p>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>Type definitions in javascript can help adding type safety for classes. But should not make more complicated property based testing. This package aims to generate random objects based on their flow definitions&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>&lt;code>yarn add flow-runtime-faker -D&lt;/code> or &lt;code>npm install flow-runtime-faker --save-dev&lt;/code>&lt;/p>
&lt;p>if you use only &lt;code>flow&lt;/code> and not &lt;code>flow-runtime&lt;/code>. You can use this plugin by:&lt;/p>
&lt;ul>
&lt;li>&lt;code>yarn add flow-runtime babel-plugin-flow-runtime -D&lt;/code> or &lt;code>npm install flow-runtime babel-plugin-flow-runtime --save-dev&lt;/code>&lt;/li>
&lt;li>add the next configuration for tests phase on your &lt;code>.babelrc&lt;/code>&lt;/li>
&lt;/ul>
&lt;pre>&lt;code class="language-json"> {
...
&amp;quot;env&amp;quot;: {
&amp;quot;test&amp;quot;: {
&amp;quot;plugins&amp;quot;: [[&amp;quot;flow-runtime&amp;quot;, { &amp;quot;assert&amp;quot;: false, &amp;quot;annotate&amp;quot;: false }]]
}
}
}
&lt;/code>&lt;/pre>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;pre>&lt;code class="language-js">import faker from 'flow-runtime-faker'
type otherType {
fuz: 42 | 7 | 32 | &amp;quot;Some&amp;quot; | &amp;quot;Some Other&amp;quot; | false
}
type myType = {
foo: number,
bar: number[],
daz: string,
don: otherType
}
let value = fake(test)
console.log(value)
/*
type myType = {
foo: 10,
bar: [1,6.40],
daz: &amp;quot;something&amp;quot;,
don: {
fuz: 42
}
}
*/
&lt;/code>&lt;/pre>
&lt;h2 id="support">Support&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Done?&lt;/th>
&lt;th>Flow Type&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>â&lt;/td>
&lt;td>number&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>â&lt;/td>
&lt;td>string&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>â&lt;/td>
&lt;td>boolean&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>â&lt;/td>
&lt;td>null&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>â&lt;/td>
&lt;td>void&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>â&lt;/td>
&lt;td>numeric literals&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>â&lt;/td>
&lt;td>string literals&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>â&lt;/td>
&lt;td>boolean literals&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>â&lt;/td>
&lt;td>union&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>â&lt;/td>
&lt;td>maybe&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>â&lt;/td>
&lt;td>optional&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>â&lt;/td>
&lt;td>arrays&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>â&lt;/td>
&lt;td>subtypes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>â&lt;/td>
&lt;td>function&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>tellojs</title><link>https://www.kanekotic.com/project/tellojs/</link><pubDate>Tue, 27 Feb 2018 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/tellojs/</guid><description>&lt;h1 id="logomakr_123ujkhttpsuser-imagesgithubusercontentcom307120849430616-cddbc300-f7ab-11e8-9356-381c730d0839png">&lt;img src="https://user-images.githubusercontent.com/3071208/49430616-cddbc300-f7ab-11e8-9356-381c730d0839.png" alt="logomakr_123ujk">&lt;/h1>
&lt;p>
&lt;a href="https://travis-ci.org/kanekotic/tellojs" target="_blank" rel="noopener">&lt;img src="https://travis-ci.org/kanekotic/tellojs.svg?branch=master" alt="Build Status">&lt;/a>
&lt;a href="https://coveralls.io/github/kanekotic/tellojs?branch=master" target="_blank" rel="noopener">&lt;img src="https://coveralls.io/repos/github/kanekotic/tellojs/badge.svg?branch=master" alt="Coverage Status">&lt;/a>
&lt;a href="https://github.com/kanekotic/tellojs" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/npm/dt/tellojs.svg" alt="npm">&lt;/a>
&lt;a href="https://github.com/kanekotic/tellojs/blob/master/LICENSE" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/github/license/kanekotic/tellojs.svg" alt="GitHub license">&lt;/a>
&lt;a href="https://GitHub.com/kanekotic/tellojs/graphs/commit-activity" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/badge/Maintained%3F-yes-green.svg" alt="Maintenance">&lt;/a>
&lt;a href="https://www.paypal.me/kanekotic/" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/badge/Donate-PayPal-blue.svg" alt="Donate">&lt;/a>&lt;/p>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>Provide an async promise based unofficial sdk for the tello drone based on the official
&lt;a href="https://dl-cdn.ryzerobotics.com/downloads/tello/20180910/Tello%20SDK%20Documentation%20EN_1.3.pdf" target="_blank" rel="noopener">documentation&lt;/a>.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>add it to your project using &lt;code>npm install tellojs --save&lt;/code> or &lt;code>yarn add tellojs&lt;/code>&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>this sdk provide functions when you import for the next capabilities:&lt;/p>
&lt;pre>&lt;code class="language-js">const sdk = require('tellojs')
const x = number,
y = number,
z = number,
speed = number,
start = {x, y, z},
end = {x, y, z}
//CONTROL COMMANDS
await sdk.control.connect() // Enter SDK mode.
await sdk.control.takeoff() // Auto takeoff.
await sdk.control.land() // Auto landing.
await sdk.control.emergency() // Stop motors immediately
await sdk.control.stop() // Hovers in the air
await sdk.control.move.up(x) // Ascend to âxâ cm.
await sdk.control.move.down(x) // Descend to âxâ cm.
await sdk.control.move.left(x) // move left to âxâ cm.
await sdk.control.move.right(x) // move right to âxâ cm.
await sdk.control.move.front(x) // move forward to âxâ cm.
await sdk.control.move.back(x) // move backwards to âxâ cm.
await sdk.control.move.go(end, speed ) // fly to x y z in speed (cm/s)
await sdk.control.move.curve(start, end, speed) // fly to x y z in speed (cm/s)
await sdk.control.rotate.clockwise(x) // rotate clockwise 'x' degrees.
await sdk.control.rotate.counterClockwise(x) // rotate counter clockwise 'x' degrees.
await sdk.control.flip.left() // Flip to the left.
await sdk.control.flip.right() // Flip to the right.
await sdk.control.flip.back() // Flip in backward.
await sdk.control.flip.front() // Flip in forward.
//SET COMMANDS
await sdk.set.speed(x) // set speed to x cm/s
await sdk.set.rc(x, y, z, yaw) // Send RC control via four channels.
await sdk.set.wifi(ssid, password) // Set Wi-Fi with SSID password
//READ COMMANDS
await sdk.read.speed() // Obtain current speed (cm/s).
await sdk.read.battery() // Obtain current battery percentage.
await sdk.read.time() // Obtain current flight time.
await sdk.read.height() // Obtain get height (cm)
await sdk.read.temperature() // Obtain temperature (Â°C)
await sdk.read.attitude() // Obtain IMU attitude data
await sdk.read.barometer() // Obtain barometer value (m)
await sdk.read.tof() // Obtain distance value from TOFï¼cmï¼
await sdk.read.acceleration() // Obtain IMU angular acceleration data (0.001g)
await sdk.read.wifi() // Obtain Wi-Fi SNR.
&lt;/code>&lt;/pre>
&lt;h5 id="web-graphic-by-a-hrefhttpwwwflaticoncomauthorspicolpicola-from-a-hrefhttpwwwflaticoncomflaticona-is-licensed-under-a-hrefhttpcreativecommonsorglicensesby30-titlecreative-commons-by-30cc-by-30a-check-out-the-new-logo-that-i-created-on-a-hrefhttplogomakrcom-titlelogo-makrlogomakrcoma-httpslogomakrcom09u4zz">Web graphic by &lt;a href="http://www.flaticon.com/authors/picol">picol&lt;/a> from &lt;a href="http://www.flaticon.com/">Flaticon&lt;/a> is licensed under &lt;a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0">CC BY 3.0&lt;/a>. Check out the new logo that I created on &lt;a href="http://logomakr.com" title="Logo Makr">LogoMakr.com&lt;/a>
&lt;a href="https://logomakr.com/09u4Zz" target="_blank" rel="noopener">https://logomakr.com/09u4Zz&lt;/a>&lt;/h5></description></item><item><title>Array Peek</title><link>https://www.kanekotic.com/project/array-peek/</link><pubDate>Sat, 27 Jan 2018 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/array-peek/</guid><description>&lt;h1 id="logomakr_5sissshttpsuser-imagesgithubusercontentcom307120846520471-66bd9300-c87c-11e8-855c-e38b28094435png">&lt;img src="https://user-images.githubusercontent.com/3071208/46520471-66bd9300-c87c-11e8-855c-e38b28094435.png" alt="logomakr_5sisss">&lt;/h1>
&lt;p>
&lt;a href="https://travis-ci.org/kanekotic/array-peek" target="_blank" rel="noopener">&lt;img src="https://travis-ci.org/kanekotic/array-peek.svg?branch=master" alt="Build Status">&lt;/a>
&lt;a href="https://coveralls.io/github/kanekotic/array-peek?branch=master" target="_blank" rel="noopener">&lt;img src="https://coveralls.io/repos/github/kanekotic/array-peek/badge.svg?branch=master" alt="Coverage Status">&lt;/a>
&lt;a href="https://github.com/kanekotic/array-peek" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/npm/dy/array-peek.svg" alt="npm">&lt;/a>
&lt;a href="https://github.com/kanekotic/array-peek/blob/master/LICENSE" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/github/license/kanekotic/array-peek.svg" alt="GitHub license">&lt;/a>
&lt;a href="https://GitHub.com/kanekotic/array-peek/graphs/commit-activity" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/badge/Maintained%3F-yes-green.svg" alt="Maintenance">&lt;/a>
&lt;a href="https://www.paypal.me/kanekotic/" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/badge/Donate-PayPal-green.svg" alt="Donate">&lt;/a>&lt;/p>
&lt;p>extend array functionality to allow peek method.&lt;/p>
&lt;h2 id="peek-vs-foreach">peek vs forEach&lt;/h2>
&lt;p>&lt;code>peek&lt;/code> as &lt;code>forEach&lt;/code> allows you to execute a callback on each of the elements of an array, not affecting the content of itself.&lt;/p>
&lt;p>The difference is that &lt;code>forEach&lt;/code> returns void so no further processing can be done, while &lt;code>peek&lt;/code> will return the array so you can continue the transformations necesary for your processing&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>add it to your project using &lt;code>npm install array-peek --save&lt;/code> or &lt;code>yarn add array-peek&lt;/code>&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>to use this package just add it before the usage of any array to extend its prototype. From then on you will have access to the peek function as seen in the next example.&lt;/p>
&lt;pre>&lt;code>require('array-peek')
[1,2,3]
.peek(console.log)
.map((value) =&amp;gt; value * value)
.peek(console.log)
// Output:
//&amp;gt; 1
//&amp;gt; 2
//&amp;gt; 3
//&amp;gt; 1
//&amp;gt; 4
//&amp;gt; 9
&lt;/code>&lt;/pre>
&lt;h5 id="created-my-free-logohttpslogomakrcom5sisss-at-logomakrcomlogomakrcom">Created my free
&lt;a href="https://logomakr.com/5sISSS" target="_blank" rel="noopener">logo&lt;/a> at
&lt;a href="LogoMakr.com">LogoMakr.com&lt;/a>&lt;/h5></description></item><item><title>Express Exception Handler</title><link>https://www.kanekotic.com/project/express-exception-handler/</link><pubDate>Sun, 30 Jul 2017 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/express-exception-handler/</guid><description>&lt;h1 id="logomakr_6nl700httpsuser-imagesgithubusercontentcom307120828988724-97dc463a-7971-11e7-9cec-ffc06bcc9205png">&lt;img src="https://user-images.githubusercontent.com/3071208/28988724-97dc463a-7971-11e7-9cec-ffc06bcc9205.png" alt="logomakr_6nl700">&lt;/h1>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>This package was created to add a general way to handle exception for express application with the expectation to make it simpler to handle all possible requests.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>add it to your project with &lt;code>npm install express-exception-handler&lt;/code> or &lt;code>yarn add express-exception-handler&lt;/code>&lt;/p>
&lt;h2 id="use">Use&lt;/h2>
&lt;p>there are 2 diferent ways to integrate the main functionality of this package, either by adding the handle that gets injected to the router framework&lt;/p>
&lt;pre>&lt;code class="language-js">var exceptionHandler = require('express-exception-handler')
exceptionHandler.handle()
const app = require('express')()
&lt;/code>&lt;/pre>
&lt;p>or by wraping manually the routes&lt;/p>
&lt;pre>&lt;code class="language-js">var wrap = require('express-exception-handler').wrap
router.post('/', wrap(async (req, res) =&amp;gt; {
...
}))
&lt;/code>&lt;/pre>
&lt;p>it also integrates an extended class from Error that contains a &lt;code>message&lt;/code> and a &lt;code>status&lt;/code> that can be used to pass diferent information to the error handle&lt;/p>
&lt;pre>&lt;code class="language-js">var httpError = require('express-exception-handler').exception
router.post('/', async (req, res) =&amp;gt; {
throw new HttpError('Great Message', 400, &amp;quot;{Response: awesome}&amp;quot;)
}))
&lt;/code>&lt;/pre>
&lt;p>last but not least it also contains a middleware that can be added directly to express that handles the previous named errors.&lt;/p>
&lt;pre>&lt;code class="language-js">var middleware = require('express-exception-handler').middleware
const app = require('express')()
app.use(middleware)
&lt;/code>&lt;/pre>
&lt;h3 id="logo">Logo&lt;/h3>
&lt;p>Arrows graphic by &lt;a href="http://www.flaticon.com/authors/madebyoliver">madebyoliver&lt;/a> from &lt;a href="http://www.flaticon.com/">Flaticon&lt;/a> is licensed under &lt;a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0">CC BY 3.0&lt;/a>. Check out the new logo that I created on &lt;a href="http://logomakr.com" title="Logo Maker">LogoMaker.com&lt;/a>
&lt;a href="https://logomakr.com/6nL7006nL700" target="_blank" rel="noopener">https://logomakr.com/6nL7006nL700&lt;/a>&lt;/p></description></item><item><title>Gatoo</title><link>https://www.kanekotic.com/project/gatoo/</link><pubDate>Sat, 29 Jul 2017 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/gatoo/</guid><description>&lt;h1 id="logomakr_32f2mdhttpsuser-imagesgithubusercontentcom307120842147664-29898cca-7dcf-11e8-9c50-2cf3845b7fe8png">&lt;img src="https://user-images.githubusercontent.com/3071208/42147664-29898cca-7dcf-11e8-9c50-2cf3845b7fe8.png" alt="logomakr_32f2md">&lt;/h1>
&lt;p>
&lt;a href="https://travis-ci.org/kanekotic/gatoo" target="_blank" rel="noopener">&lt;img src="https://travis-ci.org/kanekotic/gatoo.svg?branch=master" alt="Build Status">&lt;/a>
&lt;a href="https://coveralls.io/github/kanekotic/gatoo?branch=master" target="_blank" rel="noopener">&lt;img src="https://coveralls.io/repos/github/kanekotic/gatoo/badge.svg?branch=master" alt="Coverage Status">&lt;/a>&lt;/p>
&lt;p>This project will provide a command line and a library to export google analytics to your prefered endpoint (console, log management, or db).&lt;/p>
&lt;h2 id="use-as-command-line">Use as Command Line&lt;/h2>
&lt;p>install globally with &lt;code>npm install gatoo -g&lt;/code>. Aftyer this it can be run with the next command:&lt;/p>
&lt;pre>&lt;code class="language-zsh">gatoo console &amp;lt;email&amp;gt; &amp;lt;ReplativePath&amp;gt; &amp;lt;viewId&amp;gt; &amp;lt;startDate&amp;gt; &amp;lt;endDate&amp;gt; &amp;lt;metrics&amp;gt; &amp;lt;dimensions&amp;gt;
&lt;/code>&lt;/pre>
&lt;h2 id="use-as-library">Use as library&lt;/h2>
&lt;p>first step is to add this to your project throught &lt;code>yarn add gatoo&lt;/code> or &lt;code>npm install gatoo&lt;/code>&lt;/p>
&lt;p>currently you can retrieve in a simple way data from google analytics and route it to your prefered output. An example of retrieval is the next one.&lt;/p>
&lt;h3 id="import">Import&lt;/h3>
&lt;pre>&lt;code class="language-js">const importer = require('../lib/index').importer
path = require('path')
const email = 'your email' //email account from the user credentials
keyPath = path.join(__dirname, 'your credentials')// path to credentials json or pem
config = {
viewId: &amp;quot;some viewId&amp;quot;,//the view id to query
daterange:{
&amp;quot;endDate&amp;quot;:&amp;quot;2017-06-30&amp;quot;,
&amp;quot;startDate&amp;quot;:&amp;quot;2016-06-30&amp;quot;
},
metrics: &amp;quot;ga:users&amp;quot;,
dimensions: &amp;quot;ga:date&amp;quot;
}
const example = async () =&amp;gt; {
const result = await importer(email, keyPath, config)
console.log(JSON.stringify(result.data))
}
example()
&lt;/code>&lt;/pre>
&lt;h3 id="export">Export&lt;/h3>
&lt;pre>&lt;code class="language-js">const exporter = require('../lib/index').exporter
path = require('path')
const email = 'your email' //email account from the user credentials
keyPath = path.join(__dirname, 'your credentials')// path to credentials json or pem
config = {
viewId: &amp;quot;some viewId&amp;quot;,//the view id to query
daterange:{
&amp;quot;endDate&amp;quot;:&amp;quot;2017-06-30&amp;quot;,
&amp;quot;startDate&amp;quot;:&amp;quot;2016-06-30&amp;quot;
},
metrics: &amp;quot;ga:users&amp;quot;,
dimensions: &amp;quot;ga:date&amp;quot;
}
const doSomething () =&amp;gt; {}
const example = async () =&amp;gt; {
const result = await exporter(email, keyPath, config, doSomething)
}
example()
&lt;/code>&lt;/pre>
&lt;h3 id="export-to-console">Export to console&lt;/h3>
&lt;pre>&lt;code class="language-js">const exporter = require('../lib/index').outputTo
path = require('path')
const email = 'your email' //email account from the user credentials
keyPath = path.join(__dirname, 'your credentials')// path to credentials json or pem
config = {
viewId: &amp;quot;some viewId&amp;quot;,//the view id to query
daterange:{
&amp;quot;endDate&amp;quot;:&amp;quot;2017-06-30&amp;quot;,
&amp;quot;startDate&amp;quot;:&amp;quot;2016-06-30&amp;quot;
},
metrics: &amp;quot;ga:users&amp;quot;,
dimensions: &amp;quot;ga:date&amp;quot;
}
const example = async () =&amp;gt; {
const result = await outputTo.console(email, keyPath, config)
}
example()
&lt;/code>&lt;/pre>
&lt;h2 id="todo">TODO&lt;/h2>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Retrieve data from google analytics&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Create library&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Create adapter for output console&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Create command line tool console&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Create adapter logstash&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Create adapter fluentd&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Create adapter ES&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Create command line tool logstash&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Create command line tool fluentd&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Create command line tool ES&lt;/li>
&lt;/ul>
&lt;h3 id="logo">Logo&lt;/h3>
&lt;p>Check out the new logo that I created on &lt;a href="http://logomakr.com" title="Logo Makr">LogoMakr.com&lt;/a>
&lt;a href="https://logomakr.com/32f2Md" target="_blank" rel="noopener">https://logomakr.com/32f2Md&lt;/a>&lt;/p></description></item><item><title>ELK Docker</title><link>https://www.kanekotic.com/project/elk-docker/</link><pubDate>Fri, 28 Jul 2017 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/elk-docker/</guid><description>&lt;h1 id="logomakr_5axvtchttpsuser-imagesgithubusercontentcom307120841837679-81e03624-785e-11e8-841c-4bd25a61b5cdpng">&lt;img src="https://user-images.githubusercontent.com/3071208/41837679-81e03624-785e-11e8-841c-4bd25a61b5cd.png" alt="logomakr_5axvtc">&lt;/h1>
&lt;p>This show how multiple containers can aggregate log to logging infrastructure with docker compose using logstash, elastic search and kibana&lt;/p>
&lt;h2 id="run">Run&lt;/h2>
&lt;p>you will need docker installed in your computer, after it :&lt;/p>
&lt;ol>
&lt;li>Run&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-zsh">docker-compose up
&lt;/code>&lt;/pre>
&lt;ol start="2">
&lt;li>run to get some logs from httpd&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-zsh">repeat 10 curl http://localhost:80/
&lt;/code>&lt;/pre>
&lt;ol start="3">
&lt;li>
&lt;p>Kibana:&lt;/p>
&lt;ul>
&lt;li>this might take a bit&lt;/li>
&lt;li>Navigate to http://localhost:5601&lt;/li>
&lt;li>Add logstash-* as index with @timestamp as Time-field name&lt;/li>
&lt;li>Go to Discover&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Grafana:&lt;/p>
&lt;ul>
&lt;li>Navigate to http://localhost:3000&lt;/li>
&lt;li>username and password are admin&lt;/li>
&lt;li>Navigate and create dashboards&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="architecture">Architecture&lt;/h2>
&lt;p>the target architecture would be to allow gathering information from applications but also sync with hadoop to enable having a data lake to improve analytics, and pull directly from google analytics to logstash.&lt;/p>
&lt;p>&lt;img src="https://user-images.githubusercontent.com/3071208/41893258-66e86d6a-791b-11e8-9e2a-929c723b9f44.png" alt="image">&lt;/p>
&lt;p>(current architecture is missing google analytics and hadoop as seen in TODO list)&lt;/p>
&lt;h2 id="backlog">Backlog&lt;/h2>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Add kibana container&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Add Grafana container visualization&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Add elasticsearch container&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Add logstash container and configuration&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Add aplication containers&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Add dashboard as code for grafana&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Add import fron google analytics through logstash and http_poller&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Add hadoop infrastructure for data analytics extension&lt;/li>
&lt;/ul>
&lt;h2 id="references--further-readings">References &amp;amp; further readings&lt;/h2>
&lt;ul>
&lt;li>
&lt;a href="https://docs.fluentd.org/v0.12/articles/docker-logging-efk-compose" target="_blank" rel="noopener">docker logging article&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://gist.github.com/eunomie/e7a183602b8734c47058d277700fdc2d" target="_blank" rel="noopener">gist eunomie&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.elastic.co/guide/en/logstash/current/plugins-inputs-http_poller.html" target="_blank" rel="noopener">http poller&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://www.elastic.co/products/hadoop" target="_blank" rel="noopener">hadoop elastic search&lt;/a>&lt;/li>
&lt;li>
&lt;a href="https://blog.treasuredata.com/blog/2015/08/31/hadoop-vs-elasticsearch-for-advanced-analytics/" target="_blank" rel="noopener">hadoop vs elastic search&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="logo">Logo&lt;/h3>
&lt;p>Check out the new logo that I created on &lt;a href="http://logomakr.com" title="Logo Makr">LogoMakr.com&lt;/a>
&lt;a href="https://logomakr.com/5axvTc" target="_blank" rel="noopener">https://logomakr.com/5axvTc&lt;/a>&lt;/p></description></item><item><title>Travis YML Plugin</title><link>https://www.kanekotic.com/project/travis-yml-plugin/</link><pubDate>Fri, 30 Jun 2017 00:00:01 +0000</pubDate><guid>https://www.kanekotic.com/project/travis-yml-plugin/</guid><description>&lt;h1 id="logomakr_5059huhttpscloudgithubusercontentcomassets3071208202488191e3637aa-a9ec-11e6-89b7-6c9c403af3c7png">&lt;img src="https://cloud.githubusercontent.com/assets/3071208/20248819/1e3637aa-a9ec-11e6-89b7-6c9c403af3c7.png" alt="logomakr_5059hu">&lt;/h1>
&lt;p>This plugin has been done to be able to have certain level of compatibility in between Jenkins, Travis-CI and other YML based build services.&lt;/p>
&lt;h2 id="use">Use&lt;/h2>
&lt;p>Install by navigating and selecting &lt;code>Manage Jenkins&lt;/code> -&amp;gt; &lt;code>Manage Plugins&lt;/code> -&amp;gt; &lt;code>Travis YML Plugin&lt;/code>&lt;/p>
&lt;p>Add to your workspace on the root folder a .travis.yml, this plugin accept the next phases of lifecycle:&lt;/p>
&lt;ol>
&lt;li>before_install&lt;/li>
&lt;li>install&lt;/li>
&lt;li>before_script&lt;/li>
&lt;li>script&lt;/li>
&lt;li>after_success&lt;/li>
&lt;li>after_failure&lt;/li>
&lt;li>before_deploy&lt;/li>
&lt;li>deploy&lt;/li>
&lt;li>after_deploy&lt;/li>
&lt;li>after_script&lt;/li>
&lt;/ol>
&lt;p>If you have any failure on your build and want to review the final generated, you should declare the environment variable &lt;code>DEBUG_TRAVIS_YML&lt;/code> either on your build node or in jenkins.&lt;/p>
&lt;h2 id="development">Development&lt;/h2>
&lt;p>If you want to help on the development of this plugin you will need &lt;code>Jruby&lt;/code> and the next prerequisites:&lt;/p>
&lt;pre>&lt;code>gem install bundler
&lt;/code>&lt;/pre>
&lt;p>For development and to see this plugin in a test Jenkins server:&lt;/p>
&lt;pre>&lt;code>$ bundle install
$ jpi server
&lt;/code>&lt;/pre>
&lt;p>after that open a pull request to add your changes.&lt;/p>
&lt;p>If you have any further request open an issue on the main repository or contact the sustainers:&lt;/p>
&lt;ul>
&lt;li>@kanekotic&lt;/li>
&lt;li>@masaki&lt;/li>
&lt;/ul>
&lt;h2 id="logo">Logo&lt;/h2>
&lt;p>People graphic by &lt;a href="http://www.flaticon.com/authors/freepik">Freepik&lt;/a> from &lt;a href="http://www.flaticon.com/">Flaticon&lt;/a> is licensed under &lt;a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0">CC BY 3.0&lt;/a>. Made with &lt;a href="http://logomakr.com" title="Logo Maker">Logo Maker&lt;/a>&lt;/p></description></item><item><title>PlayYoutube Atom</title><link>https://www.kanekotic.com/project/playoutube-atom/</link><pubDate>Thu, 29 Jun 2017 01:01:00 +0000</pubDate><guid>https://www.kanekotic.com/project/playoutube-atom/</guid><description>&lt;h1 id="logomakr_0iwknvhttpsuser-imagesgithubusercontentcom307120842363375-bcf912a2-80f7-11e8-999b-82e107a3d1afpng">&lt;img src="https://user-images.githubusercontent.com/3071208/42363375-bcf912a2-80f7-11e8-999b-82e107a3d1af.png" alt="logomakr_0iwknv">&lt;/h1>
&lt;p>Search and play youtube videos inside atom. Follow your favorite tutorials inside the development environment in a floating window&lt;/p>
&lt;p>&lt;img src="https://cloud.githubusercontent.com/assets/3071208/11987290/d6f8e8c0-a9dc-11e5-8d1e-c0ee5a2922e1.gif" alt="playyoutube-atom">&lt;/p>
&lt;h3 id="use">Use&lt;/h3>
&lt;ul>
&lt;li>&amp;lsquo;playyoutube-atom:search&amp;rsquo; (&amp;lsquo;ctrl-shift-y&amp;rsquo;): Display the search window:
&lt;ul>
&lt;li>input some search terms and hit enter.&lt;/li>
&lt;li>Navigate the results:
&lt;ul>
&lt;li>Using the mouse.&lt;/li>
&lt;li>Using up and down key.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Play video:
&lt;ul>
&lt;li>Click.&lt;/li>
&lt;li>Using side key.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&amp;lsquo;playyoutube-atom:hide&amp;rsquo; (&amp;lsquo;ctrl-shift-h&amp;rsquo;): Hides the player&lt;/li>
&lt;li>&amp;lsquo;playyoutube-atom:show&amp;rsquo; (&amp;lsquo;ctrl-shift-j&amp;rsquo;): Shows the player&lt;/li>
&lt;li>&amp;lsquo;playyoutube-atom:close&amp;rsquo; (&amp;lsquo;ctrl-shift-c&amp;rsquo;): Clear current search and video content&lt;/li>
&lt;/ul>
&lt;h3 id="authors-and-contributors">Authors and Contributors&lt;/h3>
&lt;p>@kanekotic&lt;/p>
&lt;h3 id="support-or-contact">Support or Contact&lt;/h3>
&lt;p>Having trouble with &amp;lsquo;playyoutube&amp;rsquo;? Any idea of how to improve it?
Review our
&lt;a href="https://github.com/Hatisoft/PlayYouTube/wiki" target="_blank" rel="noopener">documentation&lt;/a> or
&lt;a href="https://github.com/Hatisoft/PlayYouTube/issues" target="_blank" rel="noopener">add issue/recomendation&lt;/a> and we will sort it out.&lt;/p>
&lt;p>###Todo:&lt;/p>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> make video frame draggable&lt;/li>
&lt;/ul>
&lt;h3 id="logo">Logo&lt;/h3>
&lt;p>Check out the new logo that I created on &lt;a href="http://logomakr.com" title="Logo Makr">LogoMakr.com&lt;/a>
&lt;a href="https://logomakr.com/0IWkNv" target="_blank" rel="noopener">https://logomakr.com/0IWkNv&lt;/a>&lt;/p></description></item><item><title>PlayYoutube Visual Studio</title><link>https://www.kanekotic.com/project/playoutube-vs/</link><pubDate>Thu, 29 Jun 2017 01:00:10 +0000</pubDate><guid>https://www.kanekotic.com/project/playoutube-vs/</guid><description>&lt;h1 id="playyoutubeheaderhttpsuser-imagesgithubusercontentcom307120842363002-129d9374-80f6-11e8-9ccf-1bd222f07884png">&lt;img src="https://user-images.githubusercontent.com/3071208/42363002-129d9374-80f6-11e8-9ccf-1bd222f07884.png" alt="playyoutubeheader">&lt;/h1>
&lt;p>
&lt;a href="https://gitter.im/Hatisoft/PlayYouTube?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" target="_blank" rel="noopener">&lt;img src="https://badges.gitter.im/Join%20Chat.svg" alt="Join the chat at https://gitter.im/Hatisoft/PlayYouTube">&lt;/a>&lt;/p>
&lt;p>Plugin for Visual studio that allows you to search and play youtube videos inside your development enviroment.&lt;/p>
&lt;p>follow tutorials or listen what you want, without the pain of having to toggle between multiple windows.&lt;/p>
&lt;h3 id="use">Use&lt;/h3>
&lt;p>put your query on the search combo box and hit enter. You will be provided with a list of results, the selected results will be displayed and be streamed&lt;/p>
&lt;p>&lt;img src="https://cloud.githubusercontent.com/assets/3071208/8636943/f13e5d16-287a-11e5-960b-21bdd390f5a2.png" alt="playyoutubecapture">&lt;/p>
&lt;h3 id="authors-and-contributors">Authors and Contributors&lt;/h3>
&lt;p>@kanekotic&lt;/p>
&lt;h3 id="support-or-contact">Support or Contact&lt;/h3>
&lt;p>Having trouble with &amp;lsquo;PlayYouTube&amp;rsquo;? Any idea of how to improve it?
Review our
&lt;a href="https://github.com/Hatisoft/PlayYouTube/wiki" target="_blank" rel="noopener">documentation&lt;/a> or
&lt;a href="https://github.com/Hatisoft/PlayYouTube/issues" target="_blank" rel="noopener">add issue/recomendation&lt;/a> and weâll sort it out.&lt;/p>
&lt;p>###Build State
CI:
&lt;a href="https://ci.appveyor.com/project/kanekotic/playyoutube-877b8" target="_blank" rel="noopener">&lt;img src="https://ci.appveyor.com/api/projects/status/mm7u1f8dm2vn5l27?svg=true" alt="Build status">&lt;/a>&lt;/p>
&lt;p>Release:
&lt;a href="https://ci.appveyor.com/project/kanekotic/playyoutube" target="_blank" rel="noopener">&lt;img src="https://ci.appveyor.com/api/projects/status/qgykpbj3ifyfu0i7?svg=true" alt="Build status">&lt;/a>&lt;/p></description></item><item><title>Search Error On</title><link>https://www.kanekotic.com/project/search-error-on/</link><pubDate>Thu, 29 Jun 2017 01:00:10 +0000</pubDate><guid>https://www.kanekotic.com/project/search-error-on/</guid><description>&lt;h1 id="searchonheaderhttpsuser-imagesgithubusercontentcom307120842362398-5bb7dee6-80f3-11e8-9ecc-56dcc2bdda97png">&lt;img src="https://user-images.githubusercontent.com/3071208/42362398-5bb7dee6-80f3-11e8-9ecc-56dcc2bdda97.png" alt="searchonheader">&lt;/h1>
&lt;p>
&lt;a href="https://gitter.im/Hatisoft/SearchErrorOn?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" target="_blank" rel="noopener">&lt;img src="https://badges.gitter.im/Join%20Chat.svg" alt="Join the chat at https://gitter.im/Hatisoft/SearchErrorOn">&lt;/a>&lt;/p>
&lt;p>This plugin for visual studio has been created to be able to find the errors generated during compilation time on your favourite web browser.&lt;/p>
&lt;h3 id="use">Use&lt;/h3>
&lt;p>Select one or more errors in your Error List Window. Right click and hit &amp;lsquo;Search Error On&amp;rsquo;.&lt;/p>
&lt;p>&lt;img src="https://cloud.githubusercontent.com/assets/3071208/8430164/f75af2c2-1f2e-11e5-99c5-ae979995bd3b.png" alt="search on">&lt;/p>
&lt;h3 id="configure">Configure&lt;/h3>
&lt;p>Under &amp;lsquo;Tools -&amp;gt; Options-&amp;gt; Search Error On&amp;rsquo; you will be able to select one of your favourite search engines.
&lt;img src="https://cloud.githubusercontent.com/assets/3071208/8430166/f9b19ff8-1f2e-11e5-91b4-9c7a8aae0e21.png" alt="search on configuration">&lt;/p>
&lt;h3 id="authors-and-contributors">Authors and Contributors&lt;/h3>
&lt;p>@kanekotic&lt;/p>
&lt;h3 id="support-or-contact">Support or Contact&lt;/h3>
&lt;p>Having trouble with &amp;lsquo;Search Error On&amp;hellip;&amp;rsquo;? Any idea of how to improve it?
Review our
&lt;a href="https://github.com/Hatisoft/SearchErrorOn/wiki" target="_blank" rel="noopener">documentation&lt;/a> or
&lt;a href="https://github.com/Hatisoft/SearchErrorOn/issues" target="_blank" rel="noopener">add issue/recomendation&lt;/a> and weâll sort it out.&lt;/p>
&lt;p>###Build State
CI:
&lt;a href="https://ci.appveyor.com/project/kanekotic/searcherroron" target="_blank" rel="noopener">&lt;img src="https://ci.appveyor.com/api/projects/status/3dfrnphpa1l4tlyr?svg=true" alt="Build status">&lt;/a>&lt;/p>
&lt;p>Release:
&lt;a href="https://ci.appveyor.com/project/kanekotic/searcherroron-5ibi9" target="_blank" rel="noopener">&lt;img src="https://ci.appveyor.com/api/projects/status/1b25khghlfjq9cho?svg=true" alt="Build status">&lt;/a>&lt;/p></description></item><item><title>Raw Guid Converter</title><link>https://www.kanekotic.com/project/raw-guid-converter/</link><pubDate>Thu, 29 Jun 2017 01:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/raw-guid-converter/</guid><description>&lt;h1 id="logomakr_5c2oeehttpsuser-imagesgithubusercontentcom307120841022709-abb95bd6-696a-11e8-8564-3ad7d43d44fbpng">&lt;img src="https://user-images.githubusercontent.com/3071208/41022709-abb95bd6-696a-11e8-8564-3ad7d43d44fb.png" alt="logomakr_5c2oee">&lt;/h1>
&lt;p>
&lt;a href="https://travis-ci.org/kanekotic/raw-guid-converter" target="_blank" rel="noopener">&lt;img src="https://travis-ci.org/kanekotic/raw-guid-converter.svg?branch=v0.0.2" alt="Build Status">&lt;/a>
&lt;a href="https://coveralls.io/github/kanekotic/raw-guid-converter?branch=master" target="_blank" rel="noopener">&lt;img src="https://coveralls.io/repos/github/kanekotic/raw-guid-converter/badge.svg?branch=master" alt="Coverage Status">&lt;/a>
&lt;a href="https://github.com/Naereen/StrapDown.js/blob/master/LICENSE" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/github/license/Naereen/StrapDown.js.svg" alt="GitHub license">&lt;/a>
&lt;a href="https://GitHub.com/Naereen/StrapDown.js/graphs/commit-activity" target="_blank" rel="noopener">&lt;img src="https://img.shields.io/badge/Maintained%3F-yes-green.svg" alt="Maintenance">&lt;/a>&lt;/p>
&lt;h2 id="use-case">Use Case&lt;/h2>
&lt;p>command line and library to convert guids from oracle raw format to formated guid and viceversa&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>if you want ot use in a package &lt;code>yarn add raw-guid-converter&lt;/code> or &lt;code>npm i raw-guid-converter&lt;/code>&lt;/p>
&lt;p>if you want to use it as a command install globally with &lt;code>npm i raw-guid-converter -g&lt;/code>&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;h3 id="raw-to-guid-string">Raw to Guid String&lt;/h3>
&lt;h4 id="code">Code&lt;/h4>
&lt;pre>&lt;code class="language-js">const convert = require('raw-guid-converter').convertRaw
let guid = convert('4630880E6D0B3640AB446C6FB3C44FE3')
//guid =&amp;gt; 0e883046-0b6d-4036-ab44-6c6fb3c44fe3
&lt;/code>&lt;/pre>
&lt;h4 id="command-line">Command line&lt;/h4>
&lt;pre>&lt;code class="language-bash">convert-guid fromRaw 4630880E6D0B3640AB446C6FB3C44FE3
#0e883046-0b6d-4036-ab44-6c6fb3c44fe3
&lt;/code>&lt;/pre>
&lt;p>you can pass multiple guids to convert all of them in one go&lt;/p>
&lt;h3 id="guid-string-to-raw">Guid string to Raw&lt;/h3>
&lt;h4 id="code-1">Code&lt;/h4>
&lt;pre>&lt;code class="language-js">const convert = require('raw-guid-converter').convertString
let guid = convert('0e883046-0b6d-4036-ab44-6c6fb3c44fe3')
//guid =&amp;gt; '4630880E6D0B3640AB446C6FB3C44FE3'
&lt;/code>&lt;/pre>
&lt;h4 id="command-line-1">Command line&lt;/h4>
&lt;pre>&lt;code class="language-bash">convert-guid fromString 0e883046-0b6d-4036-ab44-6c6fb3c44fe3
#'4630880E6D0B3640AB446C6FB3C44FE3'
&lt;/code>&lt;/pre>
&lt;p>you can pass multiple guids to convert all of them in one go&lt;/p>
&lt;h3 id="logo">Logo&lt;/h3>
&lt;hr>
&lt;p>Check out the new logo that I created on &lt;a href="http://logomakr.com" title="Logo Makr">LogoMakr.com&lt;/a>
&lt;a href="https://logomakr.com/5c2oEE" target="_blank" rel="noopener">https://logomakr.com/5c2oEE&lt;/a>&lt;/p></description></item><item><title>Any Prebuilt</title><link>https://www.kanekotic.com/project/any-prebuild/</link><pubDate>Thu, 29 Jun 2017 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/any-prebuild/</guid><description>&lt;h1 id="logomakr_3dkn9bhttpscloudgithubusercontentcomassets307120822477192c7ce1d86-e7aa-11e6-87de-c24336e1ea3epng">&lt;img src="https://cloud.githubusercontent.com/assets/3071208/22477192/c7ce1d86-e7aa-11e6-87de-c24336e1ea3e.png" alt="logomakr_3dkn9b">&lt;/h1>
&lt;h1 id="mission">Mission&lt;/h1>
&lt;p>Easy generation or integration of prebuilt packages. It helps fetchs prebuilt binaries from github releases.&lt;/p>
&lt;h1 id="generate-a-prebuilt-package">Generate a prebuilt package&lt;/h1>
&lt;ol>
&lt;li>Create new project&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>npm init
&lt;/code>&lt;/pre>
&lt;ol start="2">
&lt;li>Add this package as dependency&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>npm install any-prebuilt --save
&lt;/code>&lt;/pre>
&lt;ol start="3">
&lt;li>Create &lt;code>postinstall.js&lt;/code> file with content:&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-js">require('any-prebuilt').install(require('./package.json').prebuilt)
&lt;/code>&lt;/pre>
&lt;ol start="4">
&lt;li>Create &lt;code>index.js&lt;/code> file with content:&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-js">var anyPrebuilt = require('any-prebuilt')
anyPrebuilt.initialize(__dirname, require('./package.json').prebuilt)
module.exports.path = anyPrebuilt.path
&lt;/code>&lt;/pre>
&lt;ol start="5">
&lt;li>On the &lt;code>package.json&lt;/code> add a prebuilt element (you can also add this to any other file that provides a jason object to both index and postinstall.js).&lt;/li>
&lt;/ol>
&lt;pre>&lt;code> &amp;quot;prebuilt&amp;quot;: {
&amp;quot;arch&amp;quot;: &amp;lt;string&amp;gt;, // Target architecture (supported: `ia32` / `x64`. Default value: machine's architecture)
&amp;quot;platform&amp;quot;: &amp;lt;string&amp;gt;, //Target platform (supported: `win` / `osx` / `linux`. Default value: machine's platform)
&amp;quot;version&amp;quot;: &amp;lt;string&amp;gt;, //Target version (format: `vX.Y.Z`. Default value: latest)
&amp;quot;targetDir&amp;quot;: &amp;lt;string&amp;gt;, //Target directory (where to install the binaries. Default value: `./bin`)
&amp;quot;targetBin&amp;quot;: &amp;lt;string&amp;gt;, //Target binary (the precompiled binary to be required in node. No default value)
&amp;quot;version&amp;quot;: &amp;lt;string&amp;gt;, //Target version (format: `vX.Y.Z`. Default value: latest)
&amp;quot;user&amp;quot;: &amp;lt;string&amp;gt;, // user or Organization (format: string. Is `required`)
&amp;quot;repo&amp;quot;: &amp;lt;string&amp;gt;, //Origin repo (format: string. Is `required`)
&amp;quot;token&amp;quot;: &amp;lt;string&amp;gt; //Github token (format: string. `required` if private repo)
}
&lt;/code>&lt;/pre>
&lt;ol start="6">
&lt;li>In your &lt;code>package .json&lt;/code> add the next script:&lt;/li>
&lt;/ol>
&lt;pre>&lt;code>&amp;quot;scripts&amp;quot;: {
&amp;quot;postinstall&amp;quot;: &amp;quot;node postinstall.js&amp;quot;
}
&lt;/code>&lt;/pre>
&lt;p>As seen before this can be configured using a json object but also can be configured or overrided using the next enviroment variables &lt;code>PREBUILT_ARCH&lt;/code>, &lt;code>PREBUILT_PLATFORM&lt;/code>, &lt;code>PREBUILT_VERSION&lt;/code>, &lt;code>PREBUILT_BINARY&lt;/code>, &lt;code>PREBUILT_TOKEN&lt;/code>, &lt;code>PREBUILT_REPO&lt;/code>, &lt;code>PREBUILT_USER&lt;/code> and &lt;code>PREBUILT_TARGET_DIR&lt;/code> environment variables.&lt;/p>
&lt;h3 id="special-thanks">Special thanks&lt;/h3>
&lt;p>to all the contributors to
&lt;a href="https://github.com/Ivshti/wcjs-prebuilt" target="_blank" rel="noopener">wcjs-prebuilt&lt;/a> that this package is based on.&lt;/p>
&lt;h3 id="logo">Logo&lt;/h3>
&lt;p>Hours graphic by &lt;a href="http://www.flaticon.com/authors/freepik">Freepik&lt;/a> from &lt;a href="http://www.flaticon.com/">Flaticon&lt;/a> is licensed under &lt;a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0">CC BY 3.0&lt;/a>. Made with &lt;a href="http://logomakr.com" title="Logo Maker">Logo Maker&lt;/a>&lt;/p></description></item><item><title>Koteky</title><link>https://www.kanekotic.com/project/koteky/</link><pubDate>Thu, 29 Jun 2017 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/koteky/</guid><description>&lt;h1 id="drawinghttpscloudgithubusercontentcomassets30712081473848322967ed8-0882-11e6-874d-4c19eb244373png">&lt;img src="https://cloud.githubusercontent.com/assets/3071208/14738483/22967ed8-0882-11e6-874d-4c19eb244373.png" alt="drawing">&lt;/h1>
&lt;p>
&lt;a href="https://gitter.im/Hatisoft/koteky?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge" target="_blank" rel="noopener">&lt;img src="https://badges.gitter.im/Hatisoft/koteky.svg" alt="Join the chat at https://gitter.im/Hatisoft/koteky">&lt;/a>&lt;/p>
&lt;p>
&lt;a href="https://travis-ci.org/Hatisoft/koteky" target="_blank" rel="noopener">&lt;img src="https://travis-ci.org/Hatisoft/koteky.svg?branch=master" alt="Build Status">&lt;/a>
&lt;a href="https://ci.appveyor.com/project/kanekotic/koteky" target="_blank" rel="noopener">&lt;img src="https://ci.appveyor.com/api/projects/status/np9fywosgs2ob33i?svg=true" alt="Build status">&lt;/a>
&lt;img src="https://img.shields.io/npm/v/koteky.svg" alt="Build status">
&lt;img src="https://img.shields.io/npm/l/koteky.svg" alt="license">
&lt;img src="https://img.shields.io/github/issues/Hatisoft/koteky.svg" alt="Build status">
&lt;img src="https://img.shields.io/npm/dm/koteky.svg" alt="Build status">
&lt;img src="https://img.shields.io/npm/dt/koteky.svg" alt="Build status">
&lt;img src="https://img.shields.io/github/downloads/Hatisoft/koteky/total.svg" alt="Build status">&lt;/p>
&lt;p>This is a plugin based crossplatform social network manager application based on electron.&lt;/p>
&lt;h2 id="usage-alpha">Usage (Alpha)&lt;/h2>
&lt;p>&lt;strong>This project is still on development and is not ready for public use&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Current early use can be done by cloning repo&lt;/li>
&lt;/ul>
&lt;pre>&lt;code># Clone the repository
$ git clone https://github.com/Hatisoft/koteky.git
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>Plugins can be installed in app or modifying the package.json&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>{
...
&amp;quot;plugins&amp;quot;:
{
&amp;quot;name_of_plugin&amp;quot; : &amp;quot;version_or_repo&amp;quot;
}
}
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>Run:&lt;/li>
&lt;/ul>
&lt;pre>&lt;code># Go into the repository
$ cd koteky
# Install the dependencies and run
$ npm install &amp;amp;&amp;amp; npm start
&lt;/code>&lt;/pre>
&lt;h2 id="roadmap">Roadmap&lt;/h2>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Use plugin based architecture&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Style and Display posts&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Authentication based on Oauth for social networks&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Implement Twitter plugin&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox"> Implement Facebook plugin&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Implement LinkedIn plugin&lt;/li>
&lt;/ul>
&lt;h4 id="credits">Credits&lt;/h4>
&lt;p>Social Network graphic by &lt;a href="http://www.freepik.com">Freepik&lt;/a> from &lt;a href="http://www.flaticon.com/">Flaticon&lt;/a> is licensed under &lt;a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0">CC BY 3.0&lt;/a>.Dog graphic by &lt;a href="http://www.freepik.com/">Freepik&lt;/a> from &lt;a href="http://www.flaticon.com/">Flaticon&lt;/a> is licensed under &lt;a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0">CC BY 3.0&lt;/a>. Made with &lt;a href="http://logomakr.com" title="Logo Maker">Logo Maker&lt;/a>&lt;/p></description></item><item><title>Scala Local Toggle</title><link>https://www.kanekotic.com/project/scala-local-toggle/</link><pubDate>Wed, 28 Jun 2017 00:00:01 +0000</pubDate><guid>https://www.kanekotic.com/project/scala-local-toggle/</guid><description>&lt;h1 id="logomakr_6etktjhttpsuser-imagesgithubusercontentcom307120832364786-318debc0-c077-11e7-9064-a65d6ce35cf6png">&lt;img src="https://user-images.githubusercontent.com/3071208/32364786-318debc0-c077-11e7-9064-a65d6ce35cf6.png" alt="logomakr_6etktj">&lt;/h1>
&lt;p>
&lt;a href="https://travis-ci.org/kanekotic/scala-local-toggle" target="_blank" rel="noopener">&lt;img src="https://travis-ci.org/kanekotic/scala-local-toggle.svg?branch=master" alt="Build Status">&lt;/a>
&lt;a href="https://maven-badges.herokuapp.com/maven-central/com.github.kanekotic/scala-local-toggle_2.12/badge.svg?style=flat" target="_blank" rel="noopener">&lt;img src="https://maven-badges.herokuapp.com/maven-central/com.github.kanekotic/scala-local-toggle_2.12/badge.svg?style=flat" alt="Maven Status">&lt;/a>&lt;/p>
&lt;p>feature toggle by configuration file for scala applications&lt;/p>
&lt;h2 id="install">Install&lt;/h2>
&lt;pre>&lt;code class="language-scala">//Use version in badge
libraryDependencies += &amp;quot;com.github.kanekotic&amp;quot; %% &amp;quot;scala-local-toggle&amp;quot; % &amp;lt;version&amp;gt;
&lt;/code>&lt;/pre>
&lt;h2 id="use">Use&lt;/h2>
&lt;ol>
&lt;li>Instantiate can be done by newing the class, it can also be register in guice or dependency injection frameworks.&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-scala"> val toggle = new ToggleManager();
&lt;/code>&lt;/pre>
&lt;ol start="2">
&lt;li>use default files for loading configuration, it will try to load toggles from the following (first-listed are higher priority):&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>system properties&lt;/li>
&lt;li>application.conf (all resources on classpath with this name)&lt;/li>
&lt;li>application.json (all resources on classpath with this name)&lt;/li>
&lt;li>application.properties (all resources on classpath with this name)&lt;/li>
&lt;li>reference.conf (all resources on classpath with this name)&lt;/li>
&lt;/ul>
&lt;p>this files will require to have an setting for the toggles HOCON or JSON complient configuration similar to this, in any other case toggles will default to false:&lt;/p>
&lt;pre>&lt;code class="language-hocon">feature.local.toggles: [
{
&amp;quot;name&amp;quot;: &amp;quot;NAME_OF_YOUR_TOGGLE&amp;quot;,
&amp;quot;local&amp;quot;: true
&amp;quot;development&amp;quot;: true
&amp;quot;production&amp;quot;: false
},
{
&amp;quot;name&amp;quot;: &amp;quot;NAME_OF_OTHER_YOUR_TOGGLE&amp;quot;,
&amp;quot;local&amp;quot;: true
&amp;quot;development&amp;quot;: false
&amp;quot;production&amp;quot;: false
}
]
&lt;/code>&lt;/pre>
&lt;p>the boolean denotes the state of the toggle depending on the environment, and the name is the identifying the value of the environment variable:&lt;/p>
&lt;ul>
&lt;li>local maps to environment variable value LOCAL.&lt;/li>
&lt;li>development maps to environment variable value DEVELOPMENT.&lt;/li>
&lt;li>production maps to environment variable value PRODUCTION.&lt;/li>
&lt;/ul>
&lt;p>aditionally the enviroment variable that will be track to know the current environment of execution can be modified by&lt;/p>
&lt;pre>&lt;code class="language-hocon"> feature.local.environment: &amp;quot;SOME_ENVIROMENT_VARIABLE_NAME&amp;quot;
#Defaults to ENVIRONMENT
&lt;/code>&lt;/pre>
&lt;ol start="3">
&lt;li>Use with the name identifier defined in the previous step&lt;/li>
&lt;/ol>
&lt;pre>&lt;code class="language-scala"> if (toggle.isEnabled(&amp;quot;NAME_OF_YOUR_TOGGLE&amp;quot;)) {
//your code under toggle here
}
&lt;/code>&lt;/pre>
&lt;h5 id="logo">LOGO&lt;/h5>
&lt;p>Check out the new logo that I created on &lt;a href="http://logomakr.com" title="Logo Makr">LogoMakr.com&lt;/a>
&lt;a href="https://logomakr.com/6ETKtj" target="_blank" rel="noopener">https://logomakr.com/6ETKtj&lt;/a>&lt;/p></description></item><item><title>Dependency Shrinker</title><link>https://www.kanekotic.com/project/dependency-shirnker/</link><pubDate>Wed, 28 Jun 2017 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/dependency-shirnker/</guid><description>&lt;h1 id="logomakr_6rglbyhttpscloudgithubusercontentcomassets307120822743728b6164884-ede0-11e6-9bbe-5e7643b22be7png">&lt;img src="https://cloud.githubusercontent.com/assets/3071208/22743728/b6164884-ede0-11e6-9bbe-5e7643b22be7.png" alt="logomakr_6rglby">&lt;/h1>
&lt;h2 id="mission">Mission&lt;/h2>
&lt;p>a command line tool to check what dependencies of an executable are really critical and not&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;pre>&lt;code>npm install dependency-shrinker
&lt;/code>&lt;/pre>
&lt;h2 id="use">use&lt;/h2>
&lt;p>this command will list the runtime dependencies that can be possible removed (will only detect the ones that will cause a crash if removed).&lt;/p>
&lt;pre>&lt;code>depshrink list &amp;lt;Path to executable&amp;gt; &amp;lt;boot time&amp;gt; [Paths to dependencies folders]
&lt;/code>&lt;/pre>
&lt;h2 id="warning">Warning&lt;/h2>
&lt;p>if you kill the process of the command line tool at any point of execution you might end up in a situation where a dependency is missing.&lt;/p>
&lt;p>I will not take resposability on the issues generated by this package, so use at your own risk and make sure you backup all before using. And use with caution.&lt;/p>
&lt;h3 id="logo">Logo&lt;/h3>
&lt;p>Arrows graphic by &lt;a href="http://www.flaticon.com/authors/stephen-hutchings">Stephen Hutchings&lt;/a> from &lt;a href="http://www.flaticon.com/">Flaticon&lt;/a> is licensed under &lt;a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0">CC BY 3.0&lt;/a>. Made with &lt;a href="http://logomakr.com" title="Logo Maker">Logo Maker&lt;/a>&lt;/p></description></item><item><title>MailCrypt</title><link>https://www.kanekotic.com/project/mail-crypt/</link><pubDate>Wed, 28 Jun 2017 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/mail-crypt/</guid><description>&lt;h1 id="logomakr_9amigxhttpsuser-imagesgithubusercontentcom307120842293424-65e7e83a-7fda-11e8-8872-60852153087fpng">&lt;img src="https://user-images.githubusercontent.com/3071208/42293424-65e7e83a-7fda-11e8-8872-60852153087f.png" alt="logomakr_9amigx">&lt;/h1>
&lt;h2 id="motivation">Motivation&lt;/h2>
&lt;p>Engine and electron app that allows to add pgp encrytion to gmail. To ensure privacy of data.&lt;/p>
&lt;h3 id="logo">Logo&lt;/h3>
&lt;p>Check out the new logo that I created on &lt;a href="http://logomakr.com" title="Logo Makr">LogoMakr.com&lt;/a>
&lt;a href="https://logomakr.com/9AMIGX" target="_blank" rel="noopener">https://logomakr.com/9AMIGX&lt;/a>&lt;/p></description></item><item><title>DynamoDB CLI</title><link>https://www.kanekotic.com/project/dynamo-cli/</link><pubDate>Tue, 27 Jun 2017 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/dynamo-cli/</guid><description>&lt;h1 id="logomakr_31ffsshttpsuser-imagesgithubusercontentcom307120842293899-9639c29e-7fdd-11e8-97de-aeaf65118d83png">&lt;img src="https://user-images.githubusercontent.com/3071208/42293899-9639c29e-7fdd-11e8-97de-aeaf65118d83.png" alt="logomakr_31ffss">&lt;/h1>
&lt;p>dynamo operations command line (In development not production ready, use with caution.)&lt;/p>
&lt;h2 id="use-case">Use Case&lt;/h2>
&lt;p>provides a easy to use command line interface to interact with DynamoDb.&lt;/p>
&lt;h2 id="supported-commands">Supported commands&lt;/h2>
&lt;p>current implementation requires you to have correct setup of enviroment variables logind for aws in your command line.&lt;/p>
&lt;h3 id="upload-from-csv">Upload from CSV&lt;/h3>
&lt;pre>&lt;code>dynamo-cli upload &amp;lt;path to csv&amp;gt;
&lt;/code>&lt;/pre>
&lt;h2 id="todo">TODO&lt;/h2>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Add more credentials support&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Add download Command&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> TBD&lt;/li>
&lt;/ul>
&lt;h3 id="logo">Logo&lt;/h3>
&lt;p>Check out the new logo that I created on &lt;a href="http://logomakr.com" title="Logo Makr">LogoMakr.com&lt;/a>
&lt;a href="https://logomakr.com/31ffss" target="_blank" rel="noopener">https://logomakr.com/31ffss&lt;/a>&lt;/p></description></item><item><title>CabritoBot</title><link>https://www.kanekotic.com/project/cabrito-bot/</link><pubDate>Tue, 30 May 2017 00:01:00 +0000</pubDate><guid>https://www.kanekotic.com/project/cabrito-bot/</guid><description>&lt;h1 id="logomakr_9m3zawhttpsuser-imagesgithubusercontentcom307120842304862-a1f61524-8028-11e8-8e3d-bf73b3ef47c5png">&lt;img src="https://user-images.githubusercontent.com/3071208/42304862-a1f61524-8028-11e8-8e3d-bf73b3ef47c5.png" alt="logomakr_9m3zaw">&lt;/h1>
&lt;p>chat bot for messenger for el done for european proposal to promote eating goat.&lt;/p>
&lt;h4 id="logo">Logo&lt;/h4>
&lt;p>Check out the new logo that I created on &lt;a href="http://logomakr.com" title="Logo Makr">LogoMakr.com&lt;/a>
&lt;a href="https://logomakr.com/9M3Zaw" target="_blank" rel="noopener">https://logomakr.com/9M3Zaw&lt;/a>&lt;/p></description></item><item><title>LittleBox</title><link>https://www.kanekotic.com/project/little-box/</link><pubDate>Tue, 30 May 2017 00:00:10 +0000</pubDate><guid>https://www.kanekotic.com/project/little-box/</guid><description>&lt;h1 id="logomakr_1p2i5dhttpsuser-imagesgithubusercontentcom307120842305129-cd1dd81c-8029-11e8-892a-c30fe3140462png">&lt;img src="https://user-images.githubusercontent.com/3071208/42305129-cd1dd81c-8029-11e8-892a-c30fe3140462.png" alt="logomakr_1p2i5d">&lt;/h1>
&lt;p>Augmented reality project, spawns a rose on a glyph.&lt;/p>
&lt;h4 id="logo">LOGO&lt;/h4>
&lt;p>Check out the new logo that I created on &lt;a href="http://logomakr.com" title="Logo Makr">LogoMakr.com&lt;/a>
&lt;a href="https://logomakr.com/1p2i5d" target="_blank" rel="noopener">https://logomakr.com/1p2i5d&lt;/a>&lt;/p></description></item><item><title>Coin Run</title><link>https://www.kanekotic.com/project/coin-run/</link><pubDate>Tue, 30 May 2017 00:00:01 +0000</pubDate><guid>https://www.kanekotic.com/project/coin-run/</guid><description>&lt;h1 id="coin-run">Coin Run&lt;/h1>
&lt;p>Run and Jump around without touching the stones to get as many coins as you can. Use the accelerometer and tap the screen.
This is my first app, so very simple game.
Developed using:&lt;/p>
&lt;ul>
&lt;li>Unreal Engine&lt;/li>
&lt;li>Kenney 2D Assests&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cloud.githubusercontent.com/assets/3071208/12793489/2c808a60-cab1-11e5-8bac-47785f5593fc.png" alt="img1">
&lt;img src="https://cloud.githubusercontent.com/assets/3071208/12793490/2c84a500-cab1-11e5-9e75-e45d61cd4d40.png" alt="img2">
&lt;img src="https://cloud.githubusercontent.com/assets/3071208/12793491/2c8af2ca-cab1-11e5-90d1-722c242a5b05.png" alt="img3">&lt;/p></description></item><item><title>Runtastic Unofficial API</title><link>https://www.kanekotic.com/project/runtastic-unofficial-api/</link><pubDate>Tue, 30 May 2017 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/runtastic-unofficial-api/</guid><description>&lt;h1 id="logomakr_4dzqybhttpscloudgithubusercontentcomassets30712082310929474bb4208-f6dd-11e6-9f09-24e7ac0d9d28png">&lt;img src="https://cloud.githubusercontent.com/assets/3071208/23109294/74bb4208-f6dd-11e6-9f09-24e7ac0d9d28.png" alt="logomakr_4dzqyb">&lt;/h1>
&lt;p>This is a promise based unofficial runtastic api.&lt;/p>
&lt;h2 id="installation">installation&lt;/h2>
&lt;pre>&lt;code>npm install runtastic-unofficial-api
&lt;/code>&lt;/pre>
&lt;h2 id="use">Use&lt;/h2>
&lt;p>the API provides the next functionalities&lt;/p>
&lt;h3 id="authentication">Authentication&lt;/h3>
&lt;p>Get login information and tokens. The next snippet describes an example of the call:&lt;/p>
&lt;pre>&lt;code class="language-js">var authenticate = require('runtastic-unofficial-api').authenticate
authenticate({email: &amp;lt;email&amp;gt;, password: &amp;lt;password&amp;gt;})
.then((result) =&amp;gt; console.log(result))
.catch((result) =&amp;gt; console.log(result))
&lt;/code>&lt;/pre>
&lt;p>the complete set of parameters get determined by:&lt;/p>
&lt;pre>&lt;code>{
'user[email]': params.email,
'user[password]': params.password,
grant_type: 'password'
}
&lt;/code>&lt;/pre>
&lt;p>The result of the promise will be if failed the error that caused it and if success an result object similar to this:&lt;/p>
&lt;pre>&lt;code>{
authToken: token,
user: user,
cookieString: cookieString,
cookies: cookie
}
&lt;/code>&lt;/pre>
&lt;h3 id="workouts">Workouts&lt;/h3>
&lt;p>Get a list of your workouts. The next snippet describes an example of the call:&lt;/p>
&lt;pre>&lt;code class="language-js">var workouts = require('runtastic-unofficial-api').workouts
var token = 'authToken'
workouts({authToken: token, user: user})
.then((result) =&amp;gt; { console.log(result) })
.catch((result) =&amp;gt; console.log(result))
&lt;/code>&lt;/pre>
&lt;p>the complete set of parameters get determined by:&lt;/p>
&lt;pre>&lt;code>{
user_id: params.user.id,
authenticity_token: params.authToken,
items: ids.join(',')
}
&lt;/code>&lt;/pre>
&lt;p>The result of the promise will be if failed the error that caused it and if success an result object similar to this:&lt;/p>
&lt;pre>&lt;code>[&amp;lt;sessions&amp;gt;]
&lt;/code>&lt;/pre>
&lt;h3 id="workout-get">Workout (get)&lt;/h3>
&lt;p>Get a specific workout. The next snippet describes an example of the call:&lt;/p>
&lt;pre>&lt;code class="language-js">var workoutGet = require('runtastic-unofficial-api').workout.get
var token = 'authToken'
var user = {}
var sessions = []
workoutGet(user, sessions[0],{authToken : token, user : user})
.then((result) =&amp;gt; { console.log(result) })
.catch((result) =&amp;gt; console.log(result))
&lt;/code>&lt;/pre>
&lt;p>the complete set of parameters are determined by:&lt;/p>
&lt;pre>&lt;code>//const defaultIncludes = ['city','country','creation_application','sport_type','trace_collection','zones','sharing_token','neighbourhood']
//var includes = params.includes || defaultIncludes
{
user_id: params.user.id,
authenticity_token: params.authToken,
includes: includes.join(',')
}
&lt;/code>&lt;/pre>
&lt;p>The result of the promise will be if failed the error that caused it and if success an result object that is quite complex to describe just try it ;) .&lt;/p>
&lt;h3 id="workout-set">Workout (set)&lt;/h3>
&lt;p>Set (or create) a specific workout. The next snippet describes an example of the call:&lt;/p>
&lt;pre>&lt;code class="language-js">var workoutSet = require('runtastic-unofficial-api').workout.set
var token = 'authToken'
var user = {}
var sessions = []
workoutSet(user, sessions[0] ,{authToken : token, user : user})
.then((result) =&amp;gt; { console.log(result) })
.catch((result) =&amp;gt; console.log(result))
&lt;/code>&lt;/pre>
&lt;p>the complete set of parameters are determined by:&lt;/p>
&lt;pre>&lt;code>//var duration = params.duration ? moment.duration(params.duration) : moment.duration(0)
//var pause = params.pause ? moment.duration(params.pause) : moment.duration(0)
//var datetime = params.date ? moment(params.date) : moment()
{
authenticity_token: params.authToken,
'run_session[start_time_day]': datetime.format('YYYY-MM-DD'),
&amp;quot;run_session[sport_type_id]&amp;quot;: params.type || 1,
&amp;quot;run_session[distance]&amp;quot;: params.distance || 0,
&amp;quot;run_session[distance_from_user]&amp;quot;: params.distance || 0,
&amp;quot;run_session[elevation_gain]&amp;quot;: params.elevation_gain || 0,
&amp;quot;run_session[elevation_loss]&amp;quot;: params.elevation_loss || 0,
&amp;quot;run_session[elevation_gain_from_user]&amp;quot;: params.elevation_gain || 0,
&amp;quot;run_session[elevation_loss_from_user]&amp;quot;: params.elevation_loss || 0,
&amp;quot;run_session[start_time_hour]&amp;quot;: datetime.format('hh'),
&amp;quot;run_session[start_time_minutes]&amp;quot; : datetime.format('mm'),
&amp;quot;run_session[start_time_seconds]&amp;quot;: datetime.format('ss'),
&amp;quot;run_session[duration]&amp;quot;: duration.asMilliseconds(),
&amp;quot;run_session[duration_hours]&amp;quot;: duration.hours(),
&amp;quot;run_session[duration_minutes]&amp;quot;: duration.minutes(),
&amp;quot;run_session[duration_seconds]&amp;quot;:duration.seconds(),
&amp;quot;run_session[pause_duration]&amp;quot;: pause.asMilliseconds(),
&amp;quot;run_session[pause_duration_hours]&amp;quot;: pause.hours(),
&amp;quot;run_session[pause_duration_minutes]&amp;quot;: pause.minutes(),
&amp;quot;run_session[pause_duration_seconds]&amp;quot;: pause.seconds(),
&amp;quot;run_session[calories]&amp;quot;: params.calories || 0,
&amp;quot;run_session[calories_from_user]&amp;quot;: params.calories || 0,
&amp;quot;run_session[avg_cadence]&amp;quot;: params.avg_cadence || undefined,
&amp;quot;run_session[max_cadence]&amp;quot;:params.max_cadence || undefined,
&amp;quot;run_session[avg_cadence_from_user]&amp;quot;: params.avg_cadence || undefined,
&amp;quot;run_session[max_cadence_from_user]&amp;quot;: params.max_cadence || undefined,
&amp;quot;run_session[total_crank_revolutions]&amp;quot;: params.total_crank_revolutions || undefined,
&amp;quot;run_session[total_crank_revolutions_from_user]&amp;quot;: params.total_crank_revolutions || undefined,
&amp;quot;run_session[wheel_circumference]&amp;quot;: params.wheel_circumference || undefined,
&amp;quot;run_session[wheel_circumference_from_user]&amp;quot;: params.wheel_circumference || undefined,
&amp;quot;run_session[pulse_avg]&amp;quot;: params.pulse_avg || undefined,
&amp;quot;run_session[pulse_max]&amp;quot;: params.pulse_max || undefined,
&amp;quot;run_session[pulse_avg_from_user]&amp;quot;: params.pulse_avg || undefined,
&amp;quot;run_session[pulse_max_from_user]&amp;quot;: params.pulse_max || undefined,
&amp;quot;run_session[temperature]&amp;quot;: params.temperature || 0,
&amp;quot;run_session[temperature_from_user]&amp;quot;: params.temperature || 0,
&amp;quot;run_session[notes]&amp;quot;: params.notes || '',
&amp;quot;run_session[subjective_feeling_id]&amp;quot;: params.feeling || 5,
&amp;quot;run_session[weather_condition_id]&amp;quot;: params.weather || 1,
&amp;quot;run_session[surface_id]&amp;quot; : params.surface || 1
}
&lt;/code>&lt;/pre>
&lt;p>The result of the promise will be if failed the error that caused it and if success an result object like this:&lt;/p>
&lt;pre>&lt;code>{ workoutId: &amp;lt;workoutId&amp;gt; }
&lt;/code>&lt;/pre>
&lt;h3 id="logo">Logo&lt;/h3>
&lt;p>Sports graphic by &lt;a href="http://www.flaticon.com/authors/freepik">Freepik&lt;/a> from &lt;a href="http://www.flaticon.com/">Flaticon&lt;/a> is licensed under &lt;a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0">CC BY 3.0&lt;/a>. Made with &lt;a href="http://logomakr.com" title="Logo Maker">Logo Maker&lt;/a>&lt;/p>
&lt;h4 id="disclaimer-legalese-and-everything-else">Disclaimer, legalese and everything else.&lt;/h4>
&lt;p>This is not affiliated or endorset by runtastic, or any other party. This software available on the site is provided &amp;ldquo;as is&amp;rdquo; and any expressed or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. In no event shall the user under the pseudonym Kanekotic, or any of their contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage.&lt;/p></description></item><item><title>Nike Unofficial API</title><link>https://www.kanekotic.com/project/nike-unofficial-api/</link><pubDate>Mon, 29 May 2017 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/nike-unofficial-api/</guid><description>&lt;h1 id="logomakr_3e4olehttpscloudgithubusercontentcomassets307120822865444590b48ae-f12a-11e6-921c-f7a9c4b5dd48png">&lt;img src="https://cloud.githubusercontent.com/assets/3071208/22865444/590b48ae-f12a-11e6-921c-f7a9c4b5dd48.png" alt="logomakr_3e4ole">&lt;/h1>
&lt;p>unofficial nike api&lt;/p>
&lt;p>This is a promise based unofficial nikeplus api.&lt;/p>
&lt;h2 id="installation">installation&lt;/h2>
&lt;pre>&lt;code>npm install nike-unofficial-api
&lt;/code>&lt;/pre>
&lt;h2 id="use">Use&lt;/h2>
&lt;p>the API provides the next functionalities&lt;/p>
&lt;h3 id="authentication">Authentication&lt;/h3>
&lt;p>Get login information and tokens. The next snippet describes an example of the call:&lt;/p>
&lt;pre>&lt;code class="language-js">var authenticate = require('nike-unofficial-api').authenticate
authenticate({email: &amp;lt;email&amp;gt;, password: &amp;lt;password&amp;gt;})
.then((result) =&amp;gt; console.log(result))
.catch((result) =&amp;gt; console.log(result))
&lt;/code>&lt;/pre>
&lt;p>the complete set of parameters get determined by:&lt;/p>
&lt;pre>&lt;code>{
email: params.email,
password: params.password
}
&lt;/code>&lt;/pre>
&lt;p>The result of the promise will be if failed the error that caused it and if success an result object similar to this:&lt;/p>
&lt;pre>&lt;code>{
access_token: &amp;lt;token&amp;gt;,
expires_in: &amp;lt;expiration time&amp;gt;,
profile_img_url: &amp;lt;profile image&amp;gt;,
token_type: &amp;lt;token type&amp;gt;
}
&lt;/code>&lt;/pre>
&lt;h3 id="workouts">Workouts&lt;/h3>
&lt;p>Get a list of your workouts. The next snippet describes an example of the call:&lt;/p>
&lt;pre>&lt;code class="language-js">var workouts = require('nike-unofficial-api').workouts
var token = 'access_token'
workouts({access_token: token})
.then((result) =&amp;gt; { console.log(result) })
.catch((result) =&amp;gt; console.log(result))
&lt;/code>&lt;/pre>
&lt;h3 id="logo">Logo&lt;/h3>
&lt;p>Speed graphic by &lt;a href="http://www.flaticon.com/authors/freepik">Freepik&lt;/a> from &lt;a href="http://www.flaticon.com/">Flaticon&lt;/a> is licensed under &lt;a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0">CC BY 3.0&lt;/a>. Made with &lt;a href="http://logomakr.com" title="Logo Maker">Logo Maker&lt;/a>&lt;/p>
&lt;h2 id="disclaimer-legalese-and-everything-else">Disclaimer, legalese and everything else.&lt;/h2>
&lt;p>This is not affiliated or endorset by Nike , or any other party. This software available on the site is provided &amp;ldquo;as is&amp;rdquo; and any expressed or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. In no event shall the user under the pseudonym Kanekotic, or any of their contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage.&lt;/p></description></item><item><title>Endomondo Unofficial API</title><link>https://www.kanekotic.com/project/endomondo-unofficial-api/</link><pubDate>Sun, 28 May 2017 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/endomondo-unofficial-api/</guid><description>&lt;h1 id="logomakr_7drp6qhttpscloudgithubusercontentcomassets30712082285860836797c5e-f088-11e6-9821-ad926355ff05png">&lt;img src="https://cloud.githubusercontent.com/assets/3071208/22858608/36797c5e-f088-11e6-9821-ad926355ff05.png" alt="logomakr_7drp6q">&lt;/h1>
&lt;p>This is a promise based unofficial endomondo api.&lt;/p>
&lt;h2 id="installation">installation&lt;/h2>
&lt;pre>&lt;code>npm install endomondo-unofficial-api
&lt;/code>&lt;/pre>
&lt;h2 id="use">Use&lt;/h2>
&lt;p>the API provides the next functionalities&lt;/p>
&lt;h3 id="authentication">Authentication&lt;/h3>
&lt;p>Get login information and tokens. The next snippet describes an example of the call:&lt;/p>
&lt;pre>&lt;code class="language-js">var authenticate = require('endomondo-unofficial-api').authenticate
authenticate({email: &amp;lt;email&amp;gt;, password: &amp;lt;password&amp;gt;})
.then((result) =&amp;gt; console.log(result))
.catch((result) =&amp;gt; console.log(result))
&lt;/code>&lt;/pre>
&lt;p>the complete set of parameters get determined by:&lt;/p>
&lt;pre>&lt;code>{
email: params.email,
password: params.password,
deviceId: params.uuid || uuid,
country: params.country || 'ES',
action: params.action || 'pair'
}
&lt;/code>&lt;/pre>
&lt;p>The result of the promise will be if failed the error that caused it and if success an result object similar to this:&lt;/p>
&lt;pre>&lt;code>{
authToken: &amp;lt;token&amp;gt;,
measure: &amp;lt;mesure unit&amp;gt;,
displayName: &amp;lt;user name&amp;gt;,
userId: &amp;lt;user id&amp;gt;,
facebookConnected: &amp;lt;true|false&amp;gt;,
secureToken: &amp;lt;token&amp;gt;
}
&lt;/code>&lt;/pre>
&lt;h3 id="workouts">Workouts&lt;/h3>
&lt;p>Get a list of your workouts. The next snippet describes an example of the call:&lt;/p>
&lt;pre>&lt;code class="language-js">var workouts = require('endomondo-unofficial-api').workouts
var token = 'authToken'
workouts({authToken: token})
.then((result) =&amp;gt; { console.log(result) })
.catch((result) =&amp;gt; console.log(result))
&lt;/code>&lt;/pre>
&lt;p>the complete set of parameters get determined by:&lt;/p>
&lt;pre>&lt;code>{
authToken: params.authToken,
fields: params.fields || undefined,
maxResults: params.maxResults || undefined,
deflate: params.deflate || undefined,
compression: params.compression || undefined,
before: params.before || undefined,
after: params.after || undefined,
}
&lt;/code>&lt;/pre>
&lt;p>The result of the promise will be if failed the error that caused it and if success an result object similar to this:&lt;/p>
&lt;pre>&lt;code>{
&amp;quot;data&amp;quot;:[&amp;lt;activities&amp;gt;],
&amp;quot;more&amp;quot;:false
}
&lt;/code>&lt;/pre>
&lt;h3 id="workout-get">Workout (get)&lt;/h3>
&lt;p>Get a specific workout. The next snippet describes an example of the call:&lt;/p>
&lt;pre>&lt;code class="language-js">var workoutGet = require('endomondo-unofficial-api').workout.get
var token = 'authToken'
var workoutId = 'workoutId'
workoutGet({authToken: token, workoutId: workoutId})
.then((result) =&amp;gt; { console.log(result) })
.catch((result) =&amp;gt; console.log(result))
&lt;/code>&lt;/pre>
&lt;p>the complete set of parameters are determined by:&lt;/p>
&lt;pre>&lt;code>{
workoutId: params.id,
sport: params.sport || 0,
duration: params.duration || 0,
gzip: params.gzip || true,
audioMessage: params.audioMessage || false,
goalType: params.goalType || 'BASIC',
extendedResponse: params.extendedResponse || undefined,
calories: params.calories || undefined,
hydration: params.hydration || undefined
}
&lt;/code>&lt;/pre>
&lt;p>The result of the promise will be if failed the error that caused it and if success an result object that is quite complex to describe just try it ;) .&lt;/p>
&lt;h3 id="workout-set">Workout (set)&lt;/h3>
&lt;p>Set (or create) a specific workout. The next snippet describes an example of the call:&lt;/p>
&lt;pre>&lt;code class="language-js">var workoutSet = require('endomondo-unofficial-api').workout.set
var token = 'authToken'
var userId = 'userId'
workoutSet({authToken: token, userId: userId, time: Date.now()-70, duration: 60, distance: 0.05 })
.then((result) =&amp;gt; { console.log(result) })
.catch((result) =&amp;gt; console.log(result))
&lt;/code>&lt;/pre>
&lt;p>the complete set of parameters are determined by:&lt;/p>
&lt;pre>&lt;code>{
authToken: params.authToken,
duration: params.duration,
trackPoints: [ { dateTime, inst, latitude, longitude, distance, speed, altitude, heartRate }],
workoutId: params.workoutId || Math.floor(Math.random() * Number.MAX_SAFE_INTEGER)
}
&lt;/code>&lt;/pre>
&lt;p>or&lt;/p>
&lt;pre>&lt;code>{
authToken: params.authToken,
duration: params.duration,
time: params.time,
distance: params.distance,
workoutId: params.workoutId || Math.floor(Math.random() * Number.MAX_SAFE_INTEGER)
}
&lt;/code>&lt;/pre>
&lt;p>The result of the promise will be if failed the error that caused it and if success an result object like this:&lt;/p>
&lt;pre>&lt;code>{ workoutId: &amp;lt;workoutId&amp;gt; }
&lt;/code>&lt;/pre>
&lt;h2 id="thanks">Thanks&lt;/h2>
&lt;p>Special thanks to @aperezm85 whos code was used as inspiration for this package.&lt;/p>
&lt;h3 id="logo">Logo&lt;/h3>
&lt;p>Sport graphic by &lt;a href="http://www.flaticon.com/authors/webalys">Webalys&lt;/a> from &lt;a href="http://www.flaticon.com/">Flaticon&lt;/a> is licensed under &lt;a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0">CC BY 3.0&lt;/a>. Made with &lt;a href="http://logomakr.com" title="Logo Maker">Logo Maker&lt;/a>&lt;/p>
&lt;h2 id="disclaimer-legalese-and-everything-else">Disclaimer, legalese and everything else.&lt;/h2>
&lt;p>This is not affiliated or endorset by Endomondo, or any other party. This software available on the site is provided &amp;ldquo;as is&amp;rdquo; and any expressed or implied warranties, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose are disclaimed. In no event shall the user under the pseudonym Kanekotic, or any of their contributors be liable for any direct, indirect, incidental, special, exemplary, or consequential damages (including, but not limited to, procurement of substitute goods or services; loss of use, data, or profits; or business interruption) however caused and on any theory of liability, whether in contract, strict liability, or tort (including negligence or otherwise) arising in any way out of the use of this software, even if advised of the possibility of such damage.&lt;/p></description></item><item><title>OAuth Electron</title><link>https://www.kanekotic.com/project/oauth-electron/</link><pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/oauth-electron/</guid><description>&lt;h1 id="drawing-1httpscloudgithubusercontentcomassets307120814776049cb6164ea-0ac3-11e6-8219-c8a46a56e3e5png">&lt;img src="https://cloud.githubusercontent.com/assets/3071208/14776049/cb6164ea-0ac3-11e6-8219-c8a46a56e3e5.png" alt="drawing 1">&lt;/h1>
&lt;p>&lt;strong>this package is currently in development and is not available for use&lt;/strong>&lt;/p>
&lt;p>Use OAuth in a simple way inside your electron App.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>add it to your elenctron project using npm command&lt;/p>
&lt;pre>&lt;code>npm install oauth-electron --save
&lt;/code>&lt;/pre>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;h3 id="oauth1">Oauth1&lt;/h3>
&lt;p>add the require for ouath and twitter specific code from this package&lt;/p>
&lt;pre>&lt;code class="language-js">var oauth = require('oauth-electron-twitter').oauth2;
var data = require('oauth-electron-twitter').oauth2_data;
&lt;/code>&lt;/pre>
&lt;p>use or extend the oauth object as per your requirements&lt;/p>
&lt;pre>&lt;code>{
&amp;quot;key&amp;quot; : &amp;quot;&amp;quot;,
&amp;quot;secret&amp;quot; : &amp;quot;&amp;quot;;
&amp;quot;window&amp;quot; : &amp;quot;&amp;quot;;
&amp;quot;url&amp;quot; : &amp;quot;&amp;quot;;
&amp;quot;request_token&amp;quot; : &amp;quot;&amp;quot;;
&amp;quot;access_token&amp;quot; : &amp;quot;&amp;quot;;
&amp;quot;version&amp;quot; : &amp;quot;&amp;quot;;
&amp;quot;callback&amp;quot; : &amp;quot;&amp;quot;;
&amp;quot;signature_method&amp;quot; : &amp;quot;&amp;quot;;
}
&lt;/code>&lt;/pre>
&lt;p>pass the previously named object and a the widow to display into the login process.&lt;/p>
&lt;pre>&lt;code class="language-js">var auth = new oauth();
auth.login(info, window);
&lt;/code>&lt;/pre>
&lt;p>the login function will return a Promise with the acces token and secret&lt;/p>
&lt;pre>&lt;code>{
oauth_access_token: ***,
oauth_access_token_secret: ***
}
&lt;/code>&lt;/pre>
&lt;h3 id="oauth2">Oauth2&lt;/h3>
&lt;p>add the require for ouath and twitter specific code from this package&lt;/p>
&lt;pre>&lt;code class="language-js">var oauth = require('oauth-electron-twitter').oauth2;
var data = require('oauth-electron-twitter').oauth2_data;
&lt;/code>&lt;/pre>
&lt;p>use or extend the oauth object as per your requirements&lt;/p>
&lt;pre>&lt;code>{
&amp;quot;key&amp;quot; : &amp;quot;&amp;quot;,
&amp;quot;secret&amp;quot; : &amp;quot;&amp;quot;;
&amp;quot;window&amp;quot; : &amp;quot;&amp;quot;;
&amp;quot;base_url&amp;quot; : &amp;quot;&amp;quot;;
&amp;quot;auth_path&amp;quot; : &amp;quot;&amp;quot;;
&amp;quot;token_path&amp;quot; : &amp;quot;&amp;quot;;
&amp;quot;customHeaders&amp;quot; : &amp;quot;&amp;quot;;
&amp;quot;scope&amp;quot; : &amp;quot;&amp;quot;;
}
&lt;/code>&lt;/pre>
&lt;p>pass the previously named object and a the widow to display into the login process.&lt;/p>
&lt;pre>&lt;code class="language-js">var auth = new oauth();
auth.login(info, window);
&lt;/code>&lt;/pre>
&lt;p>the login function will return a Promise with the acces token and secret&lt;/p>
&lt;pre>&lt;code>{
oauth_access_token: ***,
oauth_refresh_token: ***
}
&lt;/code>&lt;/pre>
&lt;h6 id="logo-awardpassport-graphics-by-a-hrefhttpwwwfreepikcomfreepika-from-a-hrefhttpwwwflaticoncomflaticona-are-licensed-under-a-hrefhttpcreativecommonsorglicensesby30-titlecreative-commons-by-30cc-by-30a-made-with-a-hrefhttplogomakrcom-titlelogo-makerlogo-makera">logo Award,Passport graphics by &lt;a href="http://www.freepik.com/">Freepik&lt;/a> from &lt;a href="http://www.flaticon.com/">Flaticon&lt;/a> are licensed under &lt;a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0">CC BY 3.0&lt;/a>. Made with &lt;a href="http://logomakr.com" title="Logo Maker">Logo Maker&lt;/a>&lt;/h6></description></item><item><title>OAuth Electron Facebook</title><link>https://www.kanekotic.com/project/oauth-electron-facebook/</link><pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/oauth-electron-facebook/</guid><description>&lt;h1 id="logo_fbhttpscloudgithubusercontentcomassets307120814721795aa18135a-0808-11e6-987b-14583e3fbb1dpng">&lt;img src="https://cloud.githubusercontent.com/assets/3071208/14721795/aa18135a-0808-11e6-987b-14583e3fbb1d.png" alt="logo_fb">&lt;/h1>
&lt;p>&lt;strong>this package is currently in development and is not available for use&lt;/strong>&lt;/p>
&lt;p>Use Facebook OAuth in a simple way inside your electron App.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>add it to your elenctron project using npm command&lt;/p>
&lt;pre>&lt;code>npm install oauth-electron-facebook --save
&lt;/code>&lt;/pre>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>add the require for ouath and twitter specific code from this package&lt;/p>
&lt;pre>&lt;code class="language-js">var oauth = require('oauth-electron-facebook').oauth;
var facebook = require('oauth-electron-facebook').facebook;
&lt;/code>&lt;/pre>
&lt;p>declare a twitter object, and use it as parameter for the oauth in conjuntion with the electron window used to display the login&lt;/p>
&lt;pre>&lt;code class="language-js">var info = new facebook(&amp;quot;key&amp;quot;,&amp;quot;secret&amp;quot;, &amp;lt;scope&amp;gt;, &amp;lt;params&amp;gt;);
var auth = new oauth();
auth.login(info, window);
&lt;/code>&lt;/pre>
&lt;p>the login function will return a Promise with the acces token and secret&lt;/p>
&lt;pre>&lt;code>{
oauth_access_token: ***,
oauth_refresh_token: ***
}
&lt;/code>&lt;/pre>
&lt;h6 id="logo-award-graphic-by-a-hrefhttpwwwfreepikcomfreepika-and-letter-f-graphic-by-a-hrefhttpwwwicomoonioicomoona-from-a-hrefhttpwwwflaticoncomflaticona-are-licensed-under-a-hrefhttpcreativecommonsorglicensesby30-titlecreative-commons-by-30cc-by-30a-made-and-modified-with-a-hrefhttplogomakrcom-titlelogo-makerlogo-makera">logo: Award graphic by &lt;a href="http://www.freepik.com/">Freepik&lt;/a> and Letter F graphic by &lt;a href="http://www.icomoon.io">Icomoon&lt;/a> from &lt;a href="http://www.flaticon.com/">Flaticon&lt;/a> are licensed under &lt;a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0">CC BY 3.0&lt;/a>. Made and modified with &lt;a href="http://logomakr.com" title="Logo Maker">Logo Maker&lt;/a>&lt;/h6></description></item><item><title>OAuth Electron Twitter</title><link>https://www.kanekotic.com/project/oauth-electron-twitter/</link><pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/oauth-electron-twitter/</guid><description>&lt;h1 id="logohttpscloudgithubusercontentcomassets30712081471994455c32866-07ff-11e6-9821-1a564a0cf065png">&lt;img src="https://cloud.githubusercontent.com/assets/3071208/14719944/55c32866-07ff-11e6-9821-1a564a0cf065.png" alt="logo">&lt;/h1>
&lt;p>Use Twitter OAuth in a simple way inside your electron App.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>add it to your elenctron project using npm command&lt;/p>
&lt;pre>&lt;code>npm install oauth-electron-twitter --save
&lt;/code>&lt;/pre>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>add the require for ouath and twitter specific code from this package&lt;/p>
&lt;pre>&lt;code class="language-js">var oauth = require('oauth-electron-twitter').oauth;
var twitter = require('oauth-electron-twitter').twitter;
&lt;/code>&lt;/pre>
&lt;p>declare a twitter object, and use it as parameter for the oauth in conjuntion with the electron window used to display the login. the login method return a promise with the result or the errror provided by the login pase.&lt;/p>
&lt;pre>&lt;code class="language-js">var window = new BrowserWindow({webPreferences: {nodeIntegration: false}});
var info = new twitter(&amp;quot;key&amp;quot;,&amp;quot;secret&amp;quot;);
var auth = new oauth();
auth.login(info, window).then((result) =&amp;gt; {
console.log(result);
}).catch((error) =&amp;gt; {
console.log(error);
});;
&lt;/code>&lt;/pre>
&lt;p>the result of this promise is a json object similar to next one&lt;/p>
&lt;pre>&lt;code>{
oauth_access_token: ***,
oauth_access_token_secret: ***
}
&lt;/code>&lt;/pre>
&lt;h6 id="logo-award-graphic-by-a-hrefhttpwwwfreepikcomfreepika-and-twitter-graphic-by-a-hrefhttpwwwicomoonioicomoona-from-a-hrefhttpwwwflaticoncomflaticona-are-licensed-under-a-hrefhttpcreativecommonsorglicensesby30-titlecreative-commons-by-30cc-by-30a-made-and-modified-with-a-hrefhttplogomakrcom-titlelogo-makerlogo-maker-a">logo: Award graphic by &lt;a href="http://www.freepik.com/">Freepik&lt;/a> and Twitter graphic by &lt;a href="http://www.icomoon.io">Icomoon&lt;/a> from &lt;a href="http://www.flaticon.com/">Flaticon&lt;/a> are licensed under &lt;a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0">CC BY 3.0&lt;/a>. Made and modified with &lt;a href="http://logomakr.com" title="Logo Maker">Logo Maker &lt;/a>&lt;/h6></description></item><item><title>Peer2Sync</title><link>https://www.kanekotic.com/project/peer-2-sync/</link><pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/peer-2-sync/</guid><description>&lt;h1 id="logomakr_0ewpnuhttpscloudgithubusercontentcomassets307120817784932e2b96a14-657e-11e6-9cf9-ad0000e3e18cpng">&lt;img src="https://cloud.githubusercontent.com/assets/3071208/17784932/e2b96a14-657e-11e6-9cf9-ad0000e3e18c.png" alt="logomakr_0ewpnu">&lt;/h1>
&lt;p>##Intro&lt;/p>
&lt;p>Protocol capable of P2P (master to master) syncing key-value datastores. using &lt;code>c++&lt;/code> high performance web server with a redis backend. The path to requests is &lt;code>/rpc&lt;/code> and takes only &lt;code>POST&lt;/code> requests in &lt;code>JSON-RPC 2.0&lt;/code>. The methods that have been implemented are:&lt;/p>
&lt;ul>
&lt;li>&lt;code>datastorePut({ collection: String, changes: [Object] }) -&amp;gt; &lt;/code>: sync objects to the server.&lt;/li>
&lt;li>&lt;code>datastoreGet({ collection: String, all: Boolean, ids: [String] }) -&amp;gt; [Object]&lt;/code>: retrieve all of the objects which are newer on the server.&lt;/li>
&lt;li>&lt;code>datastoreMeta({ collection: String }) -&amp;gt; [id,mtime]&lt;/code>: get last modification times of all objects upstream.&lt;/li>
&lt;/ul>
&lt;p>Arguments explanation:&lt;/p>
&lt;ul>
&lt;li>&lt;code>collection&lt;/code>: this is a string identifier of the collection we want to sync.&lt;/li>
&lt;li>&lt;code>changes&lt;/code>: this is an array of objects to save in the collection; every object can be anything (JSON object). Has three special properties:
&lt;ul>
&lt;li>&lt;code>_id&lt;/code>: (always required) is the object key/id.&lt;/li>
&lt;li>&lt;code>_mtime&lt;/code>: is the last time the object was modified. This is a
&lt;a href="https://en.wikipedia.org/wiki/Unix_time" target="_blank" rel="noopener">POSIX time&lt;/a> in millisecons.&lt;/li>
&lt;li>&lt;code>_delete&lt;/code>: is set to true if we want to remove this object from the collection. If not it can be either false or not included.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>all&lt;/code>: this is a boolean which, when set to true, makes datastoreGet return all objects in the collection&lt;/li>
&lt;li>&lt;code>ids&lt;/code>: array of strings, specifies which objects to fetch from the database.&lt;/li>
&lt;/ul>
&lt;p>The implementation is integrated in Travis-CI, that will generate and publish automatically containers to easy deploy the application.&lt;/p>
&lt;h2 id="deployment">Deployment&lt;/h2>
&lt;p>Download the container from the docker-hub&lt;/p>
&lt;pre>&lt;code>docker pull kanekotic/p2s
&lt;/code>&lt;/pre>
&lt;p>And execute with the next command&lt;/p>
&lt;pre>&lt;code>docker run -p &amp;lt;service port&amp;gt; -e PORT=&amp;lt;service port&amp;gt; -e REDIS_IP=&amp;lt;redis ip&amp;gt; -e REDIS_PORT=&amp;lt;redis port&amp;gt; --net=host kanekotic/p2s
&lt;/code>&lt;/pre>
&lt;h2 id="development">Development&lt;/h2>
&lt;p>Current development enviroment is based on un an Ubuntu machine. Please follow the next steps to setup the enviroment:&lt;/p>
&lt;ul>
&lt;li>Basic building will require the next packages&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>sudo apt-get install redis-server libboost-all-dev gcc-5 g++-5 libgtest-dev cmake qt5-qmake qt5-default qtbase5-dev qttools5-dev-tools
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>To build gtest run&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>cd /usr/src/gtest
sudo cmake .
sudo cmake --build .
sudo mv libg* /usr/local/lib/
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>you will also need to pull the dependency for the redis client trought&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>git clone https://github.com/Cylix/cpp_redis.git
cd cpp_redis
mkdir build
cd build
cmake ..
make -j
sudo make install -j
sudo cp /usr/local/lib/libcpp_redis.so /usr/lib/libcpp_redis.so
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>the code can be build using the next command line on the directory&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>qmake
make
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>optional&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Use &lt;code>Qt Creator&lt;/code> as development enviroment, it can be installed by:&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>sudo apt-get install qtcreator
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>Install and use Postman for integration testing (&lt;code>./test/Test_P2S_Postman.json&lt;/code>).&lt;/li>
&lt;/ul></description></item><item><title>Specflow.Rider</title><link>https://www.kanekotic.com/project/specflow-rider/</link><pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/specflow-rider/</guid><description>&lt;h1 id="logomakr_8dchduhttpsuser-imagesgithubusercontentcom307120829508416-bf674688-8654-11e7-8c90-5472529cd9aapng">&lt;img src="https://user-images.githubusercontent.com/3071208/29508416-bf674688-8654-11e7-8c90-5472529cd9aa.png" alt="logomakr_8dchdu">&lt;/h1>
&lt;p>
&lt;a href="https://travis-ci.org/kanekotic/Specflow.Rider" target="_blank" rel="noopener">&lt;img src="https://travis-ci.org/kanekotic/Specflow.Rider.svg?branch=master" alt="Build Status">&lt;/a>&lt;/p>
&lt;h2 id="intent">Intent&lt;/h2>
&lt;p>Integration of Specflow autogeneration for Rider&lt;/p>
&lt;h2 id="setup">Setup&lt;/h2>
&lt;p>clone this repo, and make sure you have intellij installed the community version should be enough. you can use the next Gradle commands from command line:&lt;/p>
&lt;pre>&lt;code>gradle compile # generate the code
gradle check # gnerate the code and test
&lt;/code>&lt;/pre>
&lt;h2 id="todo">TODO&lt;/h2>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> Table Support&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Parameters Support&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Move to Rider style plugin&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> XUnit Support&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> MSTest Support&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> Add Files to project&lt;/li>
&lt;/ul>
&lt;h3 id="logo">Logo&lt;/h3>
&lt;p>Check out the new logo that I created on &lt;a href="http://logomakr.com" title="Logo Maker">LogoMaker.com&lt;/a>
&lt;a href="https://logomakr.com/8dchdu8dchdu" target="_blank" rel="noopener">https://logomakr.com/8dchdu8dchdu&lt;/a>&lt;/p></description></item><item><title>Vue Atom Template</title><link>https://www.kanekotic.com/project/vue-atom-template/</link><pubDate>Mon, 29 Jun 2015 00:00:00 +0000</pubDate><guid>https://www.kanekotic.com/project/vue-atom-template/</guid><description>&lt;h1 id="logomakr_3lbtkbhttpsuser-imagesgithubusercontentcom307120842306139-2617f638-802e-11e8-9c03-330afdb06446png">&lt;img src="https://user-images.githubusercontent.com/3071208/42306139-2617f638-802e-11e8-9c03-330afdb06446.png" alt="logomakr_3lbtkb">&lt;/h1>
&lt;p>this is a template for generating a package using vue as rendering framework&lt;/p>
&lt;h3 id="logo">Logo&lt;/h3>
&lt;p>Check out the new logo that I created on &lt;a href="http://logomakr.com" title="Logo Makr">LogoMakr.com&lt;/a>
&lt;a href="https://logomakr.com/3lbtkb" target="_blank" rel="noopener">https://logomakr.com/3lbtkb&lt;/a>&lt;/p></description></item></channel></rss>